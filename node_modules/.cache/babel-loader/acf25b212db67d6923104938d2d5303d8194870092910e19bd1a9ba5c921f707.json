{"ast":null,"code":"import _objectSpread from\"/Users/todoporunalma/Desktop/ol/corporacion_react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useCallback}from'react';import{storage}from'../services/storage';import{dbService,ROLES}from'../services/database';// Hook personalizado para manejo de archivos\nexport const useFileManager=()=>{const[state,setState]=useState({currentPath:'',files:[],folders:[],loading:true,error:null,uploading:false,isAdmin:false});const[ui,setUI]=useState({viewMode:'list',// 'list' | 'grid'\nsortBy:'name',// 'name' | 'size' | 'date'\nsortOrder:'asc',// 'asc' | 'desc'\nsearchTerm:'',selectedFiles:[],showPreview:false,previewFile:null});const[notifications,setNotifications]=useState([]);const[folderOperations,setFolderOperations]=useState({newFolderName:'',renamingFolder:null});// Notification helper\nconst addNotification=useCallback(function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';const id=Date.now();setNotifications(prev=>[...prev,{id,message,type}]);setTimeout(()=>setNotifications(prev=>prev.filter(n=>n.id!==id)),5000);},[]);// Check admin permissions\nuseEffect(()=>{const checkAdmin=async()=>{try{const admin=await dbService.hasPermission(ROLES.ADMINISTRADOR);setState(prev=>_objectSpread(_objectSpread({},prev),{},{isAdmin:admin,loading:false}));}catch(err){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:err.message,loading:false}));}};checkAdmin();},[]);// Load files and folders\nconst loadFiles=useCallback(async function(){let path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true}));try{const{files:loadedFiles,folders:loadedFolders}=await storage.listFiles(path);setState(prev=>_objectSpread(_objectSpread({},prev),{},{files:loadedFiles,folders:loadedFolders,currentPath:path,loading:false,error:null}));}catch(error){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:error.message,loading:false}));addNotification(\"Error loading files: \".concat(error.message),'error');}},[addNotification]);// Initial load\nuseEffect(()=>{if(state.isAdmin){loadFiles();}},[state.isAdmin,loadFiles]);// Navigation functions\nconst navigateToFolder=folderName=>{const newPath=state.currentPath?\"\".concat(state.currentPath,\"/\").concat(folderName):folderName;loadFiles(newPath);};const navigateToPath=targetPath=>{loadFiles(targetPath);};// File operations\nconst uploadFiles=async acceptedFiles=>{if(!state.isAdmin){addNotification('Permission denied: Admin access required for uploads','error');return;}setState(prev=>_objectSpread(_objectSpread({},prev),{},{uploading:true}));try{for(const file of acceptedFiles){await storage.upload(file,state.currentPath);}addNotification(\"\".concat(acceptedFiles.length,\" files uploaded successfully\"),'success');loadFiles(state.currentPath);}catch(error){addNotification(\"Upload error: \".concat(error.message),'error');}finally{setState(prev=>_objectSpread(_objectSpread({},prev),{},{uploading:false}));}};const deleteFile=async fileName=>{if(!state.isAdmin||!window.confirm(\"Delete file '\".concat(fileName,\"'?\")))return;try{const fullPath=state.currentPath?\"\".concat(state.currentPath,\"/\").concat(fileName):fileName;await storage.deleteFile(fullPath);addNotification('File deleted successfully','success');loadFiles(state.currentPath);}catch(error){addNotification(\"Error deleting file: \".concat(error.message),'error');}};const downloadFile=async fileName=>{try{const fullPath=state.currentPath?\"\".concat(state.currentPath,\"/\").concat(fileName):fileName;const url=await storage.getDownloadUrl(fullPath);const a=document.createElement('a');a.href=url;a.download=fileName;a.click();}catch(error){addNotification(\"Error downloading file: \".concat(error.message),'error');}};// Folder operations\nconst createFolder=async()=>{if(!state.isAdmin||!folderOperations.newFolderName.trim())return;try{await storage.createFolder(folderOperations.newFolderName.trim(),state.currentPath);addNotification('Folder created successfully','success');setFolderOperations(prev=>_objectSpread(_objectSpread({},prev),{},{newFolderName:''}));loadFiles(state.currentPath);}catch(error){addNotification(\"Error creating folder: \".concat(error.message),'error');}};const renameFolder=async oldName=>{var _folderOperations$ren;if(!state.isAdmin||!((_folderOperations$ren=folderOperations.renamingFolder)!==null&&_folderOperations$ren!==void 0&&_folderOperations$ren.newName.trim()))return;try{await storage.renameFolder(oldName,folderOperations.renamingFolder.newName.trim(),state.currentPath);addNotification('Folder renamed successfully','success');setFolderOperations(prev=>_objectSpread(_objectSpread({},prev),{},{renamingFolder:null}));loadFiles(state.currentPath);}catch(error){addNotification(\"Error renaming folder: \".concat(error.message),'error');setFolderOperations(prev=>_objectSpread(_objectSpread({},prev),{},{renamingFolder:null}));}};const deleteFolder=async folderName=>{if(!state.isAdmin||!window.confirm(\"Delete folder '\".concat(folderName,\"' and all contents?\")))return;try{await storage.deleteFolder(state.currentPath?\"\".concat(state.currentPath,\"/\").concat(folderName):folderName);addNotification('Folder deleted successfully','success');loadFiles(state.currentPath);}catch(error){addNotification(\"Error deleting folder: \".concat(error.message),'error');}};// UI functions\nconst updateUI=updates=>{setUI(prev=>_objectSpread(_objectSpread({},prev),updates));};const updateFolderOperations=updates=>{setFolderOperations(prev=>_objectSpread(_objectSpread({},prev),updates));};// Filtered and sorted files\nconst processedFiles=state.files.filter(file=>file.nombre.toLowerCase().includes(ui.searchTerm.toLowerCase())).sort((a,b)=>{let aValue,bValue;switch(ui.sortBy){case'size':aValue=a.tamaño||0;bValue=b.tamaño||0;break;case'date':aValue=new Date(a.createdAt||0);bValue=new Date(b.createdAt||0);break;default:aValue=a.nombre.toLowerCase();bValue=b.nombre.toLowerCase();}if(ui.sortOrder==='desc'){return aValue<bValue?1:-1;}return aValue>bValue?1:-1;});return _objectSpread(_objectSpread({},state),{},{ui,notifications,folderOperations,processedFiles,// Actions\nloadFiles,navigateToFolder,navigateToPath,uploadFiles,deleteFile,downloadFile,createFolder,renameFolder,deleteFolder,updateUI,updateFolderOperations,addNotification});};export default useFileManager;","map":{"version":3,"names":["useState","useEffect","useCallback","storage","dbService","ROLES","useFileManager","state","setState","currentPath","files","folders","loading","error","uploading","isAdmin","ui","setUI","viewMode","sortBy","sortOrder","searchTerm","selectedFiles","showPreview","previewFile","notifications","setNotifications","folderOperations","setFolderOperations","newFolderName","renamingFolder","addNotification","message","type","arguments","length","undefined","id","Date","now","prev","setTimeout","filter","n","checkAdmin","admin","hasPermission","ADMINISTRADOR","_objectSpread","err","loadFiles","path","loadedFiles","loadedFolders","listFiles","concat","navigateToFolder","folderName","newPath","navigateToPath","targetPath","uploadFiles","acceptedFiles","file","upload","deleteFile","fileName","window","confirm","fullPath","downloadFile","url","getDownloadUrl","a","document","createElement","href","download","click","createFolder","trim","renameFolder","oldName","_folderOperations$ren","newName","deleteFolder","updateUI","updates","updateFolderOperations","processedFiles","nombre","toLowerCase","includes","sort","b","aValue","bValue","tamaño","createdAt"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/hooks/useFileManager.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { storage } from '../services/storage';\nimport { dbService, ROLES } from '../services/database';\n\n// Hook personalizado para manejo de archivos\nexport const useFileManager = () => {\n  const [state, setState] = useState({\n    currentPath: '',\n    files: [],\n    folders: [],\n    loading: true,\n    error: null,\n    uploading: false,\n    isAdmin: false\n  });\n\n  const [ui, setUI] = useState({\n    viewMode: 'list', // 'list' | 'grid'\n    sortBy: 'name', // 'name' | 'size' | 'date'\n    sortOrder: 'asc', // 'asc' | 'desc'\n    searchTerm: '',\n    selectedFiles: [],\n    showPreview: false,\n    previewFile: null\n  });\n\n  const [notifications, setNotifications] = useState([]);\n  const [folderOperations, setFolderOperations] = useState({\n    newFolderName: '',\n    renamingFolder: null\n  });\n\n  // Notification helper\n  const addNotification = useCallback((message, type = 'info') => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, { id, message, type }]);\n    setTimeout(() => setNotifications(prev => prev.filter(n => n.id !== id)), 5000);\n  }, []);\n\n  // Check admin permissions\n  useEffect(() => {\n    const checkAdmin = async () => {\n      try {\n        const admin = await dbService.hasPermission(ROLES.ADMINISTRADOR);\n        setState(prev => ({ ...prev, isAdmin: admin, loading: false }));\n      } catch (err) {\n        setState(prev => ({ ...prev, error: err.message, loading: false }));\n      }\n    };\n    checkAdmin();\n  }, []);\n\n  // Load files and folders\n  const loadFiles = useCallback(async (path = '') => {\n    setState(prev => ({ ...prev, loading: true }));\n    try {\n      const { files: loadedFiles, folders: loadedFolders } = await storage.listFiles(path);\n      setState(prev => ({\n        ...prev,\n        files: loadedFiles,\n        folders: loadedFolders,\n        currentPath: path,\n        loading: false,\n        error: null\n      }));\n    } catch (error) {\n      setState(prev => ({ ...prev, error: error.message, loading: false }));\n      addNotification(`Error loading files: ${error.message}`, 'error');\n    }\n  }, [addNotification]);\n\n  // Initial load\n  useEffect(() => {\n    if (state.isAdmin) {\n      loadFiles();\n    }\n  }, [state.isAdmin, loadFiles]);\n\n  // Navigation functions\n  const navigateToFolder = (folderName) => {\n    const newPath = state.currentPath ? `${state.currentPath}/${folderName}` : folderName;\n    loadFiles(newPath);\n  };\n\n  const navigateToPath = (targetPath) => {\n    loadFiles(targetPath);\n  };\n\n  // File operations\n  const uploadFiles = async (acceptedFiles) => {\n    if (!state.isAdmin) {\n      addNotification('Permission denied: Admin access required for uploads', 'error');\n      return;\n    }\n\n    setState(prev => ({ ...prev, uploading: true }));\n    try {\n      for (const file of acceptedFiles) {\n        await storage.upload(file, state.currentPath);\n      }\n      addNotification(`${acceptedFiles.length} files uploaded successfully`, 'success');\n      loadFiles(state.currentPath);\n    } catch (error) {\n      addNotification(`Upload error: ${error.message}`, 'error');\n    } finally {\n      setState(prev => ({ ...prev, uploading: false }));\n    }\n  };\n\n  const deleteFile = async (fileName) => {\n    if (!state.isAdmin || !window.confirm(`Delete file '${fileName}'?`)) return;\n    try {\n      const fullPath = state.currentPath ? `${state.currentPath}/${fileName}` : fileName;\n      await storage.deleteFile(fullPath);\n      addNotification('File deleted successfully', 'success');\n      loadFiles(state.currentPath);\n    } catch (error) {\n      addNotification(`Error deleting file: ${error.message}`, 'error');\n    }\n  };\n\n  const downloadFile = async (fileName) => {\n    try {\n      const fullPath = state.currentPath ? `${state.currentPath}/${fileName}` : fileName;\n      const url = await storage.getDownloadUrl(fullPath);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = fileName;\n      a.click();\n    } catch (error) {\n      addNotification(`Error downloading file: ${error.message}`, 'error');\n    }\n  };\n\n  // Folder operations\n  const createFolder = async () => {\n    if (!state.isAdmin || !folderOperations.newFolderName.trim()) return;\n    try {\n      await storage.createFolder(folderOperations.newFolderName.trim(), state.currentPath);\n      addNotification('Folder created successfully', 'success');\n      setFolderOperations(prev => ({ ...prev, newFolderName: '' }));\n      loadFiles(state.currentPath);\n    } catch (error) {\n      addNotification(`Error creating folder: ${error.message}`, 'error');\n    }\n  };\n\n  const renameFolder = async (oldName) => {\n    if (!state.isAdmin || !folderOperations.renamingFolder?.newName.trim()) return;\n    try {\n      await storage.renameFolder(oldName, folderOperations.renamingFolder.newName.trim(), state.currentPath);\n      addNotification('Folder renamed successfully', 'success');\n      setFolderOperations(prev => ({ ...prev, renamingFolder: null }));\n      loadFiles(state.currentPath);\n    } catch (error) {\n      addNotification(`Error renaming folder: ${error.message}`, 'error');\n      setFolderOperations(prev => ({ ...prev, renamingFolder: null }));\n    }\n  };\n\n  const deleteFolder = async (folderName) => {\n    if (!state.isAdmin || !window.confirm(`Delete folder '${folderName}' and all contents?`)) return;\n    try {\n      await storage.deleteFolder(state.currentPath ? `${state.currentPath}/${folderName}` : folderName);\n      addNotification('Folder deleted successfully', 'success');\n      loadFiles(state.currentPath);\n    } catch (error) {\n      addNotification(`Error deleting folder: ${error.message}`, 'error');\n    }\n  };\n\n  // UI functions\n  const updateUI = (updates) => {\n    setUI(prev => ({ ...prev, ...updates }));\n  };\n\n  const updateFolderOperations = (updates) => {\n    setFolderOperations(prev => ({ ...prev, ...updates }));\n  };\n\n  // Filtered and sorted files\n  const processedFiles = state.files\n    .filter(file =>\n      file.nombre.toLowerCase().includes(ui.searchTerm.toLowerCase())\n    )\n    .sort((a, b) => {\n      let aValue, bValue;\n\n      switch (ui.sortBy) {\n        case 'size':\n          aValue = a.tamaño || 0;\n          bValue = b.tamaño || 0;\n          break;\n        case 'date':\n          aValue = new Date(a.createdAt || 0);\n          bValue = new Date(b.createdAt || 0);\n          break;\n        default:\n          aValue = a.nombre.toLowerCase();\n          bValue = b.nombre.toLowerCase();\n      }\n\n      if (ui.sortOrder === 'desc') {\n        return aValue < bValue ? 1 : -1;\n      }\n      return aValue > bValue ? 1 : -1;\n    });\n\n  return {\n    // State\n    ...state,\n    ui,\n    notifications,\n    folderOperations,\n    processedFiles,\n    \n    // Actions\n    loadFiles,\n    navigateToFolder,\n    navigateToPath,\n    uploadFiles,\n    deleteFile,\n    downloadFile,\n    createFolder,\n    renameFolder,\n    deleteFolder,\n    updateUI,\n    updateFolderOperations,\n    addNotification\n  };\n};\n\nexport default useFileManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}