{"ast":null,"code":"import{useState,useEffect,useRef,useMemo}from'react';export default function useDebouncedSearch(value){let delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:500;const[debouncedValue,setDebouncedValue]=useState(value);const timeoutRef=useRef(null);// Memoize delay to prevent unnecessary effect re-runs\nconst memoizedDelay=useMemo(()=>delay,[delay]);useEffect(()=>{// Clear existing timeout to prevent memory leaks\nif(timeoutRef.current){clearTimeout(timeoutRef.current);}// Optimize: Don't set timeout if value hasn't actually changed\nif(debouncedValue===value){return;}timeoutRef.current=setTimeout(()=>{setDebouncedValue(value);timeoutRef.current=null;},memoizedDelay);return()=>{if(timeoutRef.current){clearTimeout(timeoutRef.current);timeoutRef.current=null;}};},[value,memoizedDelay,debouncedValue]);// Cleanup on unmount\nuseEffect(()=>{return()=>{if(timeoutRef.current){clearTimeout(timeoutRef.current);}};},[]);return debouncedValue;}","map":{"version":3,"names":["useState","useEffect","useRef","useMemo","useDebouncedSearch","value","delay","arguments","length","undefined","debouncedValue","setDebouncedValue","timeoutRef","memoizedDelay","current","clearTimeout","setTimeout"],"sources":["/Users/todoporunalma/Desktop/corporacion_react/src/shared/hooks/useDebouncedSearch.js"],"sourcesContent":["import { useState, useEffect, useRef, useMemo } from 'react';\n\nexport default function useDebouncedSearch(value, delay = 500) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const timeoutRef = useRef(null);\n  \n  // Memoize delay to prevent unnecessary effect re-runs\n  const memoizedDelay = useMemo(() => delay, [delay]);\n  \n  useEffect(() => {\n    // Clear existing timeout to prevent memory leaks\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    \n    // Optimize: Don't set timeout if value hasn't actually changed\n    if (debouncedValue === value) {\n      return;\n    }\n    \n    timeoutRef.current = setTimeout(() => {\n      setDebouncedValue(value);\n      timeoutRef.current = null;\n    }, memoizedDelay);\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = null;\n      }\n    };\n  }, [value, memoizedDelay, debouncedValue]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return debouncedValue;\n}\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,CAAEC,MAAM,CAAEC,OAAO,KAAQ,OAAO,CAE5D,cAAe,SAAS,CAAAC,kBAAkBA,CAACC,KAAK,CAAe,IAAb,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAG,CAC3D,KAAM,CAACG,cAAc,CAAEC,iBAAiB,CAAC,CAAGX,QAAQ,CAACK,KAAK,CAAC,CAC3D,KAAM,CAAAO,UAAU,CAAGV,MAAM,CAAC,IAAI,CAAC,CAE/B;AACA,KAAM,CAAAW,aAAa,CAAGV,OAAO,CAAC,IAAMG,KAAK,CAAE,CAACA,KAAK,CAAC,CAAC,CAEnDL,SAAS,CAAC,IAAM,CACd;AACA,GAAIW,UAAU,CAACE,OAAO,CAAE,CACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC,CAClC,CAEA;AACA,GAAIJ,cAAc,GAAKL,KAAK,CAAE,CAC5B,OACF,CAEAO,UAAU,CAACE,OAAO,CAAGE,UAAU,CAAC,IAAM,CACpCL,iBAAiB,CAACN,KAAK,CAAC,CACxBO,UAAU,CAACE,OAAO,CAAG,IAAI,CAC3B,CAAC,CAAED,aAAa,CAAC,CAEjB,MAAO,IAAM,CACX,GAAID,UAAU,CAACE,OAAO,CAAE,CACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC,CAChCF,UAAU,CAACE,OAAO,CAAG,IAAI,CAC3B,CACF,CAAC,CACH,CAAC,CAAE,CAACT,KAAK,CAAEQ,aAAa,CAAEH,cAAc,CAAC,CAAC,CAE1C;AACAT,SAAS,CAAC,IAAM,CACd,MAAO,IAAM,CACX,GAAIW,UAAU,CAACE,OAAO,CAAE,CACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC,CAClC,CACF,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAJ,cAAc,CACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}