{"ast":null,"code":"import React from'react';import EmptyState from'../State/EmptyState';import Skeleton from'../State/Skeleton';import MobileCardView from'./MobileCardView';import{useIsMobile}from'shared/hooks';/**\n * DataTable component - Configurable data table with loading and empty states\n * Automatically switches to card view on mobile devices\n * \n * @param {Object} props\n * @param {Array} props.data - Array of data objects\n * @param {Array} props.columns - Column configuration\n * @param {Function} props.keyExtractor - Function to extract unique key from row\n * @param {boolean} props.loading - Loading state\n * @param {React.ReactNode} props.emptyState - Custom empty state component\n * @param {Function} props.onRowClick - Row click handler\n * @param {Function} props.rowClassName - Function to get row className\n * @param {boolean} props.stickyHeader - Sticky table header\n * @param {string} props.className - Additional CSS classes\n * @param {boolean} props.forceMobileView - Force mobile card view regardless of screen size\n * @param {boolean} props.forceDesktopView - Force desktop table view regardless of screen size\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataTable=_ref=>{let{data,columns,keyExtractor,loading=false,emptyState,onRowClick,rowClassName,stickyHeader=false,className='',forceMobileView=false,forceDesktopView=false}=_ref;const isMobile=useIsMobile();// Determine which view to use\nconst useMobileView=forceMobileView||isMobile&&!forceDesktopView;const getAlignment=align=>{switch(align){case'center':return'text-center';case'right':return'text-right';default:return'text-left';}};const renderCell=(column,row)=>{if(column.render){return column.render(row);}return row[column.key];};const getRowClasses=row=>{const baseClasses='hover:bg-gray-50 transition-colors';const clickableClasses=onRowClick?'cursor-pointer':'';const customClasses=rowClassName?rowClassName(row):'';return\"\".concat(baseClasses,\" \").concat(clickableClasses,\" \").concat(customClasses).trim();};const tableClasses=\"\\n    w-full\\n    \".concat(className,\"\\n  \").trim().replace(/\\s+/g,' ');const headerClasses=\"\\n    bg-gray-50\\n    \".concat(stickyHeader?'sticky top-0 z-10':'',\"\\n  \").trim();// Use mobile card view if on mobile device\nif(useMobileView){return/*#__PURE__*/_jsx(MobileCardView,{data:data,columns:columns,keyExtractor:keyExtractor,loading:loading,emptyState:emptyState,onRowClick:onRowClick,className:className});}// Loading state (desktop)\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:tableClasses,children:[/*#__PURE__*/_jsx(\"thead\",{className:headerClasses,children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map((column,index)=>/*#__PURE__*/_jsx(\"th\",{className:\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",style:{width:column.width},children:column.header},index))})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:[1,2,3,4,5].map(i=>/*#__PURE__*/_jsx(\"tr\",{children:columns.map((_,colIndex)=>/*#__PURE__*/_jsx(\"td\",{className:\"px-6 py-4\",children:/*#__PURE__*/_jsx(Skeleton,{variant:\"text\"})},colIndex))},i))})]})})});}// Empty state (desktop)\nif(!data||data.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-12\",children:emptyState||/*#__PURE__*/_jsx(EmptyState,{icon:\"fas fa-inbox\",title:\"No hay datos\",message:\"No se encontraron resultados\"})});}// Data table\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:tableClasses,children:[/*#__PURE__*/_jsx(\"thead\",{className:headerClasses,children:/*#__PURE__*/_jsx(\"tr\",{children:columns.map((column,index)=>/*#__PURE__*/_jsx(\"th\",{scope:\"col\",className:\"\\n                    px-6\\n                    py-3\\n                    text-xs\\n                    font-medium\\n                    text-gray-500\\n                    uppercase\\n                    tracking-wider\\n                    \".concat(getAlignment(column.align),\"\\n                  \"),style:{width:column.width},children:column.header},index))})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:data.map(row=>/*#__PURE__*/_jsx(\"tr\",{className:getRowClasses(row),onClick:()=>onRowClick&&onRowClick(row),children:columns.map((column,colIndex)=>/*#__PURE__*/_jsx(\"td\",{className:\"\\n                      px-6\\n                      py-4\\n                      whitespace-nowrap\\n                      text-sm\\n                      \".concat(getAlignment(column.align),\"\\n                    \"),children:renderCell(column,row)},colIndex))},keyExtractor(row)))})]})})});};export default DataTable;","map":{"version":3,"names":["React","EmptyState","Skeleton","MobileCardView","useIsMobile","jsx","_jsx","jsxs","_jsxs","DataTable","_ref","data","columns","keyExtractor","loading","emptyState","onRowClick","rowClassName","stickyHeader","className","forceMobileView","forceDesktopView","isMobile","useMobileView","getAlignment","align","renderCell","column","row","render","key","getRowClasses","baseClasses","clickableClasses","customClasses","concat","trim","tableClasses","replace","headerClasses","children","map","index","style","width","header","i","_","colIndex","variant","length","icon","title","message","scope","onClick"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Table/DataTable.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmptyState from '../State/EmptyState';\nimport Skeleton from '../State/Skeleton';\nimport MobileCardView from './MobileCardView';\nimport { useIsMobile } from 'shared/hooks';\n\n/**\n * DataTable component - Configurable data table with loading and empty states\n * Automatically switches to card view on mobile devices\n * \n * @param {Object} props\n * @param {Array} props.data - Array of data objects\n * @param {Array} props.columns - Column configuration\n * @param {Function} props.keyExtractor - Function to extract unique key from row\n * @param {boolean} props.loading - Loading state\n * @param {React.ReactNode} props.emptyState - Custom empty state component\n * @param {Function} props.onRowClick - Row click handler\n * @param {Function} props.rowClassName - Function to get row className\n * @param {boolean} props.stickyHeader - Sticky table header\n * @param {string} props.className - Additional CSS classes\n * @param {boolean} props.forceMobileView - Force mobile card view regardless of screen size\n * @param {boolean} props.forceDesktopView - Force desktop table view regardless of screen size\n */\nconst DataTable = ({\n  data,\n  columns,\n  keyExtractor,\n  loading = false,\n  emptyState,\n  onRowClick,\n  rowClassName,\n  stickyHeader = false,\n  className = '',\n  forceMobileView = false,\n  forceDesktopView = false\n}) => {\n  const isMobile = useIsMobile();\n  \n  // Determine which view to use\n  const useMobileView = forceMobileView || (isMobile && !forceDesktopView);\n  const getAlignment = (align) => {\n    switch (align) {\n      case 'center':\n        return 'text-center';\n      case 'right':\n        return 'text-right';\n      default:\n        return 'text-left';\n    }\n  };\n\n  const renderCell = (column, row) => {\n    if (column.render) {\n      return column.render(row);\n    }\n    return row[column.key];\n  };\n\n  const getRowClasses = (row) => {\n    const baseClasses = 'hover:bg-gray-50 transition-colors';\n    const clickableClasses = onRowClick ? 'cursor-pointer' : '';\n    const customClasses = rowClassName ? rowClassName(row) : '';\n    \n    return `${baseClasses} ${clickableClasses} ${customClasses}`.trim();\n  };\n\n  const tableClasses = `\n    w-full\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  const headerClasses = `\n    bg-gray-50\n    ${stickyHeader ? 'sticky top-0 z-10' : ''}\n  `.trim();\n\n  // Use mobile card view if on mobile device\n  if (useMobileView) {\n    return (\n      <MobileCardView\n        data={data}\n        columns={columns}\n        keyExtractor={keyExtractor}\n        loading={loading}\n        emptyState={emptyState}\n        onRowClick={onRowClick}\n        className={className}\n      />\n    );\n  }\n\n  // Loading state (desktop)\n  if (loading) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n        <div className=\"overflow-x-auto\">\n          <table className={tableClasses}>\n            <thead className={headerClasses}>\n              <tr>\n                {columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                    style={{ width: column.width }}\n                  >\n                    {column.header}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {[1, 2, 3, 4, 5].map((i) => (\n                <tr key={i}>\n                  {columns.map((_, colIndex) => (\n                    <td key={colIndex} className=\"px-6 py-4\">\n                      <Skeleton variant=\"text\" />\n                    </td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n\n  // Empty state (desktop)\n  if (!data || data.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-12\">\n        {emptyState || (\n          <EmptyState\n            icon=\"fas fa-inbox\"\n            title=\"No hay datos\"\n            message=\"No se encontraron resultados\"\n          />\n        )}\n      </div>\n    );\n  }\n\n  // Data table\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n      <div className=\"overflow-x-auto\">\n        <table className={tableClasses}>\n          <thead className={headerClasses}>\n            <tr>\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  scope=\"col\"\n                  className={`\n                    px-6\n                    py-3\n                    text-xs\n                    font-medium\n                    text-gray-500\n                    uppercase\n                    tracking-wider\n                    ${getAlignment(column.align)}\n                  `}\n                  style={{ width: column.width }}\n                >\n                  {column.header}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {data.map((row) => (\n              <tr\n                key={keyExtractor(row)}\n                className={getRowClasses(row)}\n                onClick={() => onRowClick && onRowClick(row)}\n              >\n                {columns.map((column, colIndex) => (\n                  <td\n                    key={colIndex}\n                    className={`\n                      px-6\n                      py-4\n                      whitespace-nowrap\n                      text-sm\n                      ${getAlignment(column.align)}\n                    `}\n                  >\n                    {renderCell(column, row)}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nDataTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      header: PropTypes.string.isRequired,\n      render: PropTypes.func,\n      sortable: PropTypes.bool,\n      width: PropTypes.string,\n      align: PropTypes.oneOf(['left', 'center', 'right']),\n      hideInMobile: PropTypes.bool\n    })\n  ).isRequired,\n  keyExtractor: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  emptyState: PropTypes.node,\n  onRowClick: PropTypes.func,\n  rowClassName: PropTypes.func,\n  stickyHeader: PropTypes.bool,\n  className: PropTypes.string,\n  forceMobileView: PropTypes.bool,\n  forceDesktopView: PropTypes.bool\n};\n\nexport default DataTable;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,UAAU,KAAM,qBAAqB,CAC5C,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CACxC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,OAASC,WAAW,KAAQ,cAAc,CAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhBA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAiBA,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAYZ,IAZa,CACjBC,IAAI,CACJC,OAAO,CACPC,YAAY,CACZC,OAAO,CAAG,KAAK,CACfC,UAAU,CACVC,UAAU,CACVC,YAAY,CACZC,YAAY,CAAG,KAAK,CACpBC,SAAS,CAAG,EAAE,CACdC,eAAe,CAAG,KAAK,CACvBC,gBAAgB,CAAG,KACrB,CAAC,CAAAX,IAAA,CACC,KAAM,CAAAY,QAAQ,CAAGlB,WAAW,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAmB,aAAa,CAAGH,eAAe,EAAKE,QAAQ,EAAI,CAACD,gBAAiB,CACxE,KAAM,CAAAG,YAAY,CAAIC,KAAK,EAAK,CAC9B,OAAQA,KAAK,EACX,IAAK,QAAQ,CACX,MAAO,aAAa,CACtB,IAAK,OAAO,CACV,MAAO,YAAY,CACrB,QACE,MAAO,WAAW,CACtB,CACF,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAACC,MAAM,CAAEC,GAAG,GAAK,CAClC,GAAID,MAAM,CAACE,MAAM,CAAE,CACjB,MAAO,CAAAF,MAAM,CAACE,MAAM,CAACD,GAAG,CAAC,CAC3B,CACA,MAAO,CAAAA,GAAG,CAACD,MAAM,CAACG,GAAG,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIH,GAAG,EAAK,CAC7B,KAAM,CAAAI,WAAW,CAAG,oCAAoC,CACxD,KAAM,CAAAC,gBAAgB,CAAGjB,UAAU,CAAG,gBAAgB,CAAG,EAAE,CAC3D,KAAM,CAAAkB,aAAa,CAAGjB,YAAY,CAAGA,YAAY,CAACW,GAAG,CAAC,CAAG,EAAE,CAE3D,MAAO,GAAAO,MAAA,CAAGH,WAAW,MAAAG,MAAA,CAAIF,gBAAgB,MAAAE,MAAA,CAAID,aAAa,EAAGE,IAAI,CAAC,CAAC,CACrE,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,qBAAAF,MAAA,CAEjBhB,SAAS,SACXiB,IAAI,CAAC,CAAC,CAACE,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAE7B,KAAM,CAAAC,aAAa,CAAG,yBAAAJ,MAAA,CAElBjB,YAAY,CAAG,mBAAmB,CAAG,EAAE,SACzCkB,IAAI,CAAC,CAAC,CAER;AACA,GAAIb,aAAa,CAAE,CACjB,mBACEjB,IAAA,CAACH,cAAc,EACbQ,IAAI,CAAEA,IAAK,CACXC,OAAO,CAAEA,OAAQ,CACjBC,YAAY,CAAEA,YAAa,CAC3BC,OAAO,CAAEA,OAAQ,CACjBC,UAAU,CAAEA,UAAW,CACvBC,UAAU,CAAEA,UAAW,CACvBG,SAAS,CAAEA,SAAU,CACtB,CAAC,CAEN,CAEA;AACA,GAAIL,OAAO,CAAE,CACX,mBACER,IAAA,QAAKa,SAAS,CAAC,sDAAsD,CAAAqB,QAAA,cACnElC,IAAA,QAAKa,SAAS,CAAC,iBAAiB,CAAAqB,QAAA,cAC9BhC,KAAA,UAAOW,SAAS,CAAEkB,YAAa,CAAAG,QAAA,eAC7BlC,IAAA,UAAOa,SAAS,CAAEoB,aAAc,CAAAC,QAAA,cAC9BlC,IAAA,OAAAkC,QAAA,CACG5B,OAAO,CAAC6B,GAAG,CAAC,CAACd,MAAM,CAAEe,KAAK,gBACzBpC,IAAA,OAEEa,SAAS,CAAC,gFAAgF,CAC1FwB,KAAK,CAAE,CAAEC,KAAK,CAAEjB,MAAM,CAACiB,KAAM,CAAE,CAAAJ,QAAA,CAE9Bb,MAAM,CAACkB,MAAM,EAJTH,KAKH,CACL,CAAC,CACA,CAAC,CACA,CAAC,cACRpC,IAAA,UAAOa,SAAS,CAAC,mCAAmC,CAAAqB,QAAA,CACjD,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAACC,GAAG,CAAEK,CAAC,eACrBxC,IAAA,OAAAkC,QAAA,CACG5B,OAAO,CAAC6B,GAAG,CAAC,CAACM,CAAC,CAAEC,QAAQ,gBACvB1C,IAAA,OAAmBa,SAAS,CAAC,WAAW,CAAAqB,QAAA,cACtClC,IAAA,CAACJ,QAAQ,EAAC+C,OAAO,CAAC,MAAM,CAAE,CAAC,EADpBD,QAEL,CACL,CAAC,EALKF,CAML,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,CACH,CAAC,CAEV,CAEA;AACA,GAAI,CAACnC,IAAI,EAAIA,IAAI,CAACuC,MAAM,GAAK,CAAC,CAAE,CAC9B,mBACE5C,IAAA,QAAKa,SAAS,CAAC,2DAA2D,CAAAqB,QAAA,CACvEzB,UAAU,eACTT,IAAA,CAACL,UAAU,EACTkD,IAAI,CAAC,cAAc,CACnBC,KAAK,CAAC,cAAc,CACpBC,OAAO,CAAC,8BAA8B,CACvC,CACF,CACE,CAAC,CAEV,CAEA;AACA,mBACE/C,IAAA,QAAKa,SAAS,CAAC,sDAAsD,CAAAqB,QAAA,cACnElC,IAAA,QAAKa,SAAS,CAAC,iBAAiB,CAAAqB,QAAA,cAC9BhC,KAAA,UAAOW,SAAS,CAAEkB,YAAa,CAAAG,QAAA,eAC7BlC,IAAA,UAAOa,SAAS,CAAEoB,aAAc,CAAAC,QAAA,cAC9BlC,IAAA,OAAAkC,QAAA,CACG5B,OAAO,CAAC6B,GAAG,CAAC,CAACd,MAAM,CAAEe,KAAK,gBACzBpC,IAAA,OAEEgD,KAAK,CAAC,KAAK,CACXnC,SAAS,kPAAAgB,MAAA,CAQLX,YAAY,CAACG,MAAM,CAACF,KAAK,CAAC,wBAC5B,CACFkB,KAAK,CAAE,CAAEC,KAAK,CAAEjB,MAAM,CAACiB,KAAM,CAAE,CAAAJ,QAAA,CAE9Bb,MAAM,CAACkB,MAAM,EAdTH,KAeH,CACL,CAAC,CACA,CAAC,CACA,CAAC,cACRpC,IAAA,UAAOa,SAAS,CAAC,mCAAmC,CAAAqB,QAAA,CACjD7B,IAAI,CAAC8B,GAAG,CAAEb,GAAG,eACZtB,IAAA,OAEEa,SAAS,CAAEY,aAAa,CAACH,GAAG,CAAE,CAC9B2B,OAAO,CAAEA,CAAA,GAAMvC,UAAU,EAAIA,UAAU,CAACY,GAAG,CAAE,CAAAY,QAAA,CAE5C5B,OAAO,CAAC6B,GAAG,CAAC,CAACd,MAAM,CAAEqB,QAAQ,gBAC5B1C,IAAA,OAEEa,SAAS,4JAAAgB,MAAA,CAKLX,YAAY,CAACG,MAAM,CAACF,KAAK,CAAC,0BAC5B,CAAAe,QAAA,CAEDd,UAAU,CAACC,MAAM,CAAEC,GAAG,CAAC,EATnBoB,QAUH,CACL,CAAC,EAjBGnC,YAAY,CAACe,GAAG,CAkBnB,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,CACH,CAAC,CAEV,CAAC,CA0BD,cAAe,CAAAnB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}