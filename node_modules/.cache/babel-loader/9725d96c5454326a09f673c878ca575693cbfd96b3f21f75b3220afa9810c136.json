{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport visitorCounterService from '../services/visitorCounter';\nconst useVisitorCounter = () => {\n  _s();\n  const [visitorCount, setVisitorCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAnimating, setIsAnimating] = useState(false);\n  useEffect(() => {\n    // Initialize visitor count\n    const initializeCounter = () => {\n      try {\n        const count = visitorCounterService.incrementCount();\n        setVisitorCount(count);\n        setIsLoading(false);\n\n        // Trigger animation\n        setIsAnimating(true);\n        setTimeout(() => setIsAnimating(false), 1000);\n      } catch (error) {\n        console.error('Error initializing visitor counter:', error);\n        setVisitorCount(1250); // Fallback count\n        setIsLoading(false);\n      }\n    };\n    initializeCounter();\n\n    // Simulate periodic updates (every 30 seconds)\n    const interval = setInterval(() => {\n      if (Math.random() < 0.3) {\n        // 30% chance of update\n        const newCount = visitorCounterService.simulateRealisticGrowth();\n        setVisitorCount(newCount);\n        setIsAnimating(true);\n        setTimeout(() => setIsAnimating(false), 800);\n      }\n    }, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const getFormattedCount = () => {\n    return visitorCount.toLocaleString('es-CO');\n  };\n  return {\n    visitorCount,\n    formattedCount: getFormattedCount(),\n    isLoading,\n    isAnimating\n  };\n};\n_s(useVisitorCounter, \"CNE245g3/NN9hGjaTtZ3Kd+QkFc=\");\nexport default useVisitorCounter;","map":{"version":3,"names":["useState","useEffect","visitorCounterService","useVisitorCounter","_s","visitorCount","setVisitorCount","isLoading","setIsLoading","isAnimating","setIsAnimating","initializeCounter","count","incrementCount","setTimeout","error","console","interval","setInterval","Math","random","newCount","simulateRealisticGrowth","clearInterval","getFormattedCount","toLocaleString","formattedCount"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/hooks/useVisitorCounter.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport visitorCounterService from '../services/visitorCounter';\n\nconst useVisitorCounter = () => {\n  const [visitorCount, setVisitorCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAnimating, setIsAnimating] = useState(false);\n\n  useEffect(() => {\n    // Initialize visitor count\n    const initializeCounter = () => {\n      try {\n        const count = visitorCounterService.incrementCount();\n        setVisitorCount(count);\n        setIsLoading(false);\n        \n        // Trigger animation\n        setIsAnimating(true);\n        setTimeout(() => setIsAnimating(false), 1000);\n      } catch (error) {\n        console.error('Error initializing visitor counter:', error);\n        setVisitorCount(1250); // Fallback count\n        setIsLoading(false);\n      }\n    };\n\n    initializeCounter();\n\n    // Simulate periodic updates (every 30 seconds)\n    const interval = setInterval(() => {\n      if (Math.random() < 0.3) { // 30% chance of update\n        const newCount = visitorCounterService.simulateRealisticGrowth();\n        setVisitorCount(newCount);\n        setIsAnimating(true);\n        setTimeout(() => setIsAnimating(false), 800);\n      }\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const getFormattedCount = () => {\n    return visitorCount.toLocaleString('es-CO');\n  };\n\n  return {\n    visitorCount,\n    formattedCount: getFormattedCount(),\n    isLoading,\n    isAnimating\n  };\n};\n\nexport default useVisitorCounter;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,qBAAqB,MAAM,4BAA4B;AAE9D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAI;QACF,MAAMC,KAAK,GAAGV,qBAAqB,CAACW,cAAc,CAAC,CAAC;QACpDP,eAAe,CAACM,KAAK,CAAC;QACtBJ,YAAY,CAAC,KAAK,CAAC;;QAEnB;QACAE,cAAc,CAAC,IAAI,CAAC;QACpBI,UAAU,CAAC,MAAMJ,cAAc,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAC/C,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;QAC3DT,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;QACvBE,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAEDG,iBAAiB,CAAC,CAAC;;IAEnB;IACA,MAAMM,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QAAE;QACzB,MAAMC,QAAQ,GAAGnB,qBAAqB,CAACoB,uBAAuB,CAAC,CAAC;QAChEhB,eAAe,CAACe,QAAQ,CAAC;QACzBX,cAAc,CAAC,IAAI,CAAC;QACpBI,UAAU,CAAC,MAAMJ,cAAc,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;MAC9C;IACF,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAMa,aAAa,CAACN,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,OAAOnB,YAAY,CAACoB,cAAc,CAAC,OAAO,CAAC;EAC7C,CAAC;EAED,OAAO;IACLpB,YAAY;IACZqB,cAAc,EAAEF,iBAAiB,CAAC,CAAC;IACnCjB,SAAS;IACTE;EACF,CAAC;AACH,CAAC;AAACL,EAAA,CAhDID,iBAAiB;AAkDvB,eAAeA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}