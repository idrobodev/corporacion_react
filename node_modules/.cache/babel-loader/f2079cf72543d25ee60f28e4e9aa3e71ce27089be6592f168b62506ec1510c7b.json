{"ast":null,"code":"/**\n * Export Utilities\n * Functions for exporting data to different formats (CSV, PDF)\n *//**\n * Format participant name consistently\n * @param {Object} participante - Participant object\n * @returns {string} Formatted full name\n */export const formatParticipantName=participante=>{if(!participante)return'N/A';if(participante.nombres&&participante.apellidos){return\"\".concat(participante.nombres,\" \").concat(participante.apellidos).trim();}return participante.nombre||'N/A';};/**\n * Format sede information\n * @param {Object|string} sede - Sede object or string\n * @returns {string} Formatted sede name\n */export const formatSede=sede=>{if(!sede)return'N/A';if(typeof sede==='object'&&sede!==null){return sede.direccion||sede.nombre||'N/A';}return String(sede);};/**\n * Normalize status display\n * @param {string} estado - Status value\n * @returns {string} Normalized status\n */export const normalizeStatus=estado=>{if(!estado)return'N/A';const upper=String(estado).toUpperCase();if(upper==='ACTIVO')return'Activo';if(upper==='INACTIVO')return'Inactivo';if(upper==='PAGADA')return'Pagada';if(upper==='PENDIENTE')return'Pendiente';if(upper==='VENCIDA')return'Vencida';return estado;};/**\n * Format gender display\n * @param {string} genero - Gender value\n * @returns {string} Formatted gender\n */export const formatGender=genero=>{if(!genero)return'N/A';if(genero==='MASCULINO')return'Masculino';if(genero==='FEMENINO')return'Femenino';return genero;};/**\n * Format document type and number\n * @param {string} tipo - Document type\n * @param {string} numero - Document number\n * @returns {string} Formatted document\n */export const formatDocument=(tipo,numero)=>{if(!numero)return'N/A';const tipoDoc=tipo||'CC';return\"\".concat(tipoDoc,\": \").concat(numero);};/**\n * Convert array of objects to CSV format\n * @param {Array} data - Array of objects to convert\n * @param {Array} headers - Array of header objects {key, label}\n * @returns {string} CSV formatted string\n */export const arrayToCSV=(data,headers)=>{if(!data||!Array.isArray(data)||data.length===0){return'';}// Create header row\nconst headerRow=headers.map(header=>\"\\\"\".concat(header.label,\"\\\"\")).join(',');// Create data rows\nconst dataRows=data.map(row=>{return headers.map(header=>{const value=getNestedValue(row,header.key);// Escape quotes and wrap in quotes if contains comma, quote, or newline\nconst stringValue=String(value||'');if(stringValue.includes(',')||stringValue.includes('\"')||stringValue.includes('\\n')){return\"\\\"\".concat(stringValue.replace(/\"/g,'\"\"'),\"\\\"\");}return stringValue;}).join(',');});return[headerRow,...dataRows].join('\\n');};/**\n * Create enhanced CSV with metadata, statistics, and better formatting\n * @param {Object} options - Configuration options\n * @param {string} options.title - Title of the report\n * @param {Array} options.data - Array of data objects\n * @param {Array} options.headers - Array of header objects {key, label}\n * @param {Object} options.metadata - Additional metadata {organization, generatedBy, etc}\n * @param {Object} options.statistics - Statistics to include\n * @param {Object} options.filters - Applied filters\n * @returns {string} Enhanced CSV formatted string\n */export const createEnhancedCSV=options=>{const{title='Reporte',data=[],headers=[],metadata={},statistics={},filters={}}=options;const sections=[];const currentDate=new Date().toLocaleDateString('es-CO',{year:'numeric',month:'long',day:'numeric',hour:'2-digit',minute:'2-digit'});// ========== SECCIÓN 1: ENCABEZADO Y METADATA ==========\nsections.push(\"\\\"\".concat(title.toUpperCase(),\"\\\"\"));sections.push(\"\\\"Corporaci\\xF3n Todo por un Alma\\\"\");sections.push(\"\\\"Fecha de generaci\\xF3n:\\\",\\\"\".concat(currentDate,\"\\\"\"));if(metadata.generatedBy){sections.push(\"\\\"Generado por:\\\",\\\"\".concat(metadata.generatedBy,\"\\\"\"));}sections.push('');// Línea en blanco\n// ========== SECCIÓN 2: FILTROS APLICADOS ==========\nconst activeFilters=Object.entries(filters).filter(_ref=>{let[key,value]=_ref;return value&&value!=='all'&&value!=='Todos'&&value!=='Todas'&&value!=='';});if(activeFilters.length>0){sections.push(\"\\\"FILTROS APLICADOS\\\"\");activeFilters.forEach(_ref2=>{let[key,value]=_ref2;const filterLabel=key.charAt(0).toUpperCase()+key.slice(1).replace(/_/g,' ');sections.push(\"\\\"\".concat(filterLabel,\":\\\",\\\"\").concat(value,\"\\\"\"));});sections.push('');// Línea en blanco\n}// ========== SECCIÓN 3: ESTADÍSTICAS ==========\nconst statsEntries=Object.entries(statistics).filter(_ref3=>{let[_,value]=_ref3;return value!==undefined;});if(statsEntries.length>0){sections.push(\"\\\"ESTAD\\xCDSTICAS\\\"\");statsEntries.forEach(_ref4=>{let[key,value]=_ref4;const statLabel=key.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase());sections.push(\"\\\"\".concat(statLabel,\":\\\",\\\"\").concat(value,\"\\\"\"));});sections.push('');// Línea en blanco\n}// ========== SECCIÓN 4: DATOS ==========\nsections.push(\"\\\"DATOS DEL REPORTE\\\"\");sections.push('');// Línea en blanco\n// Crear encabezados de columnas\nconst headerRow=headers.map(h=>{const label=h.label;// Escapar comillas dobles y envolver en comillas si contiene comas, comillas o saltos de línea\nif(label.includes(',')||label.includes('\"')||label.includes('\\n')){return\"\\\"\".concat(label.replace(/\"/g,'\"\"'),\"\\\"\");}return label;}).join(',');sections.push(headerRow);// Crear filas de datos\nif(data.length===0){sections.push(\"\\\"No hay datos disponibles\\\"\");}else{data.forEach(row=>{const dataRow=headers.map(header=>{const value=getNestedValue(row,header.key);const stringValue=String(value||'');// Escapar comillas dobles y envolver en comillas si contiene comas, comillas o saltos de línea\nif(stringValue.includes(',')||stringValue.includes('\"')||stringValue.includes('\\n')){return\"\\\"\".concat(stringValue.replace(/\"/g,'\"\"'),\"\\\"\");}return stringValue;// No envolver en comillas si no es necesario\n}).join(',');sections.push(dataRow);});}sections.push('');// Línea en blanco\n// ========== SECCIÓN 5: RESUMEN FINAL ==========\nsections.push(\"\\\"RESUMEN\\\"\");sections.push(\"\\\"Total de registros:\\\",\\\"\".concat(data.length,\"\\\"\"));sections.push(\"\\\"Reporte generado el:\\\",\\\"\".concat(currentDate,\"\\\"\"));return sections.join('\\n');};/**\n * Format statistics for CSV export\n * @param {Array} data - Data array to analyze\n * @param {string} statusField - Field name containing status\n * @returns {Object} Statistics object\n */export const generateStatistics=function(data){let statusField=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'estado';const total=data.length;const stats={'Total de Registros':total};// Count by status\nconst statusCounts={};data.forEach(item=>{const status=normalizeStatus(item[statusField]);statusCounts[status]=(statusCounts[status]||0)+1;});Object.entries(statusCounts).forEach(_ref5=>{let[status,count]=_ref5;stats[status]=\"\".concat(count,\" (\").concat((count/total*100).toFixed(1),\"%)\");});return stats;};/**\n * Download data as CSV file with UTF-8 BOM for proper Excel encoding\n * @param {string} csvContent - CSV content as string\n * @param {string} filename - Name of the file to download\n */export const downloadCSV=(csvContent,filename)=>{// Add UTF-8 BOM for proper Excel encoding of special characters (ñ, á, é, í, ó, ú)\nconst BOM='\\uFEFF';// Ensure filename has .csv extension\nconst csvFilename=filename.endsWith('.csv')?filename:\"\".concat(filename,\".csv\");const blob=new Blob([BOM+csvContent],{type:'text/csv;charset=utf-8;'});const link=document.createElement('a');if(link.download!==undefined){const url=URL.createObjectURL(blob);link.setAttribute('href',url);link.setAttribute('download',csvFilename);link.style.visibility='hidden';document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);}};/**\n * Get nested value from object using dot notation\n * @param {Object} obj - Object to get value from\n * @param {string} path - Path to value (e.g., 'sede.direccion')\n * @returns {any} Value at path or undefined\n */export const getNestedValue=(obj,path)=>{return path.split('.').reduce((current,key)=>current===null||current===void 0?void 0:current[key],obj);};/**\n * Format date for CSV export\n * @param {string|Date} date - Date to format\n * @returns {string} Formatted date string\n */export const formatDateForCSV=date=>{if(!date)return'';try{return new Date(date).toLocaleDateString('es-ES');}catch(_unused){return String(date);}};/**\n * Format currency for CSV export\n * @param {number} amount - Amount to format\n * @returns {string} Formatted currency string\n */export const formatCurrencyForCSV=amount=>{if(amount===null||amount===undefined)return'';try{return new Intl.NumberFormat('es-CO',{style:'currency',currency:'COP',minimumFractionDigits:0}).format(amount);}catch(_unused2){return String(amount);}};/**\n * Calculate age from birth date\n * @param {string|Date} birthDate - Birth date\n * @returns {string} Age string or empty string\n */export const calculateAge=birthDate=>{if(!birthDate)return'';try{const birth=new Date(birthDate);const today=new Date();let age=today.getFullYear()-birth.getFullYear();const monthDiff=today.getMonth()-birth.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birth.getDate()){age--;}return age>0?\"\".concat(age,\" a\\xF1os\"):'';}catch(_unused3){return'';}};","map":{"version":3,"names":["formatParticipantName","participante","nombres","apellidos","concat","trim","nombre","formatSede","sede","direccion","String","normalizeStatus","estado","upper","toUpperCase","formatGender","genero","formatDocument","tipo","numero","tipoDoc","arrayToCSV","data","headers","Array","isArray","length","headerRow","map","header","label","join","dataRows","row","value","getNestedValue","key","stringValue","includes","replace","createEnhancedCSV","options","title","metadata","statistics","filters","sections","currentDate","Date","toLocaleDateString","year","month","day","hour","minute","push","generatedBy","activeFilters","Object","entries","filter","_ref","forEach","_ref2","filterLabel","charAt","slice","statsEntries","_ref3","_","undefined","_ref4","statLabel","l","h","dataRow","generateStatistics","statusField","arguments","total","stats","statusCounts","item","status","_ref5","count","toFixed","downloadCSV","csvContent","filename","BOM","csvFilename","endsWith","blob","Blob","type","link","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","obj","path","split","reduce","current","formatDateForCSV","date","_unused","formatCurrencyForCSV","amount","Intl","NumberFormat","currency","minimumFractionDigits","format","_unused2","calculateAge","birthDate","birth","today","age","getFullYear","monthDiff","getMonth","getDate","_unused3"],"sources":["/Users/todoporunalma/Desktop/coptua/corporacion_react/src/shared/utils/exportUtils.js"],"sourcesContent":["/**\n * Export Utilities\n * Functions for exporting data to different formats (CSV, PDF)\n */\n\n/**\n * Format participant name consistently\n * @param {Object} participante - Participant object\n * @returns {string} Formatted full name\n */\nexport const formatParticipantName = (participante) => {\n  if (!participante) return 'N/A';\n  \n  if (participante.nombres && participante.apellidos) {\n    return `${participante.nombres} ${participante.apellidos}`.trim();\n  }\n  \n  return participante.nombre || 'N/A';\n};\n\n/**\n * Format sede information\n * @param {Object|string} sede - Sede object or string\n * @returns {string} Formatted sede name\n */\nexport const formatSede = (sede) => {\n  if (!sede) return 'N/A';\n  \n  if (typeof sede === 'object' && sede !== null) {\n    return sede.direccion || sede.nombre || 'N/A';\n  }\n  \n  return String(sede);\n};\n\n/**\n * Normalize status display\n * @param {string} estado - Status value\n * @returns {string} Normalized status\n */\nexport const normalizeStatus = (estado) => {\n  if (!estado) return 'N/A';\n  \n  const upper = String(estado).toUpperCase();\n  if (upper === 'ACTIVO') return 'Activo';\n  if (upper === 'INACTIVO') return 'Inactivo';\n  if (upper === 'PAGADA') return 'Pagada';\n  if (upper === 'PENDIENTE') return 'Pendiente';\n  if (upper === 'VENCIDA') return 'Vencida';\n  \n  return estado;\n};\n\n/**\n * Format gender display\n * @param {string} genero - Gender value\n * @returns {string} Formatted gender\n */\nexport const formatGender = (genero) => {\n  if (!genero) return 'N/A';\n  \n  if (genero === 'MASCULINO') return 'Masculino';\n  if (genero === 'FEMENINO') return 'Femenino';\n  \n  return genero;\n};\n\n/**\n * Format document type and number\n * @param {string} tipo - Document type\n * @param {string} numero - Document number\n * @returns {string} Formatted document\n */\nexport const formatDocument = (tipo, numero) => {\n  if (!numero) return 'N/A';\n  const tipoDoc = tipo || 'CC';\n  return `${tipoDoc}: ${numero}`;\n};\n\n/**\n * Convert array of objects to CSV format\n * @param {Array} data - Array of objects to convert\n * @param {Array} headers - Array of header objects {key, label}\n * @returns {string} CSV formatted string\n */\nexport const arrayToCSV = (data, headers) => {\n  if (!data || !Array.isArray(data) || data.length === 0) {\n    return '';\n  }\n\n  // Create header row\n  const headerRow = headers.map(header => `\"${header.label}\"`).join(',');\n\n  // Create data rows\n  const dataRows = data.map(row => {\n    return headers.map(header => {\n      const value = getNestedValue(row, header.key);\n      // Escape quotes and wrap in quotes if contains comma, quote, or newline\n      const stringValue = String(value || '');\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      return stringValue;\n    }).join(',');\n  });\n\n  return [headerRow, ...dataRows].join('\\n');\n};\n\n/**\n * Create enhanced CSV with metadata, statistics, and better formatting\n * @param {Object} options - Configuration options\n * @param {string} options.title - Title of the report\n * @param {Array} options.data - Array of data objects\n * @param {Array} options.headers - Array of header objects {key, label}\n * @param {Object} options.metadata - Additional metadata {organization, generatedBy, etc}\n * @param {Object} options.statistics - Statistics to include\n * @param {Object} options.filters - Applied filters\n * @returns {string} Enhanced CSV formatted string\n */\nexport const createEnhancedCSV = (options) => {\n  const {\n    title = 'Reporte',\n    data = [],\n    headers = [],\n    metadata = {},\n    statistics = {},\n    filters = {}\n  } = options;\n\n  const sections = [];\n  const currentDate = new Date().toLocaleDateString('es-CO', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  // ========== SECCIÓN 1: ENCABEZADO Y METADATA ==========\n  sections.push(`\"${title.toUpperCase()}\"`);\n  sections.push(`\"Corporación Todo por un Alma\"`);\n  sections.push(`\"Fecha de generación:\",\"${currentDate}\"`);\n  \n  if (metadata.generatedBy) {\n    sections.push(`\"Generado por:\",\"${metadata.generatedBy}\"`);\n  }\n  \n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 2: FILTROS APLICADOS ==========\n  const activeFilters = Object.entries(filters).filter(([key, value]) => {\n    return value && value !== 'all' && value !== 'Todos' && value !== 'Todas' && value !== '';\n  });\n\n  if (activeFilters.length > 0) {\n    sections.push(`\"FILTROS APLICADOS\"`);\n    activeFilters.forEach(([key, value]) => {\n      const filterLabel = key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');\n      sections.push(`\"${filterLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 3: ESTADÍSTICAS ==========\n  const statsEntries = Object.entries(statistics).filter(([_, value]) => value !== undefined);\n  \n  if (statsEntries.length > 0) {\n    sections.push(`\"ESTADÍSTICAS\"`);\n    statsEntries.forEach(([key, value]) => {\n      const statLabel = key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n      sections.push(`\"${statLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 4: DATOS ==========\n  sections.push(`\"DATOS DEL REPORTE\"`);\n  sections.push(''); // Línea en blanco\n\n  // Crear encabezados de columnas\n  const headerRow = headers.map(h => {\n    const label = h.label;\n    // Escapar comillas dobles y envolver en comillas si contiene comas, comillas o saltos de línea\n    if (label.includes(',') || label.includes('\"') || label.includes('\\n')) {\n      return `\"${label.replace(/\"/g, '\"\"')}\"`;\n    }\n    return label;\n  }).join(',');\n  sections.push(headerRow);\n\n  // Crear filas de datos\n  if (data.length === 0) {\n    sections.push(`\"No hay datos disponibles\"`);\n  } else {\n    data.forEach(row => {\n      const dataRow = headers.map(header => {\n        const value = getNestedValue(row, header.key);\n        const stringValue = String(value || '');\n        // Escapar comillas dobles y envolver en comillas si contiene comas, comillas o saltos de línea\n        if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n          return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n        }\n        return stringValue; // No envolver en comillas si no es necesario\n      }).join(',');\n      sections.push(dataRow);\n    });\n  }\n\n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 5: RESUMEN FINAL ==========\n  sections.push(`\"RESUMEN\"`);\n  sections.push(`\"Total de registros:\",\"${data.length}\"`);\n  sections.push(`\"Reporte generado el:\",\"${currentDate}\"`);\n  \n  return sections.join('\\n');\n};\n\n/**\n * Format statistics for CSV export\n * @param {Array} data - Data array to analyze\n * @param {string} statusField - Field name containing status\n * @returns {Object} Statistics object\n */\nexport const generateStatistics = (data, statusField = 'estado') => {\n  const total = data.length;\n  const stats = {\n    'Total de Registros': total\n  };\n\n  // Count by status\n  const statusCounts = {};\n  data.forEach(item => {\n    const status = normalizeStatus(item[statusField]);\n    statusCounts[status] = (statusCounts[status] || 0) + 1;\n  });\n\n  Object.entries(statusCounts).forEach(([status, count]) => {\n    stats[status] = `${count} (${((count / total) * 100).toFixed(1)}%)`;\n  });\n\n  return stats;\n};\n\n/**\n * Download data as CSV file with UTF-8 BOM for proper Excel encoding\n * @param {string} csvContent - CSV content as string\n * @param {string} filename - Name of the file to download\n */\nexport const downloadCSV = (csvContent, filename) => {\n  // Add UTF-8 BOM for proper Excel encoding of special characters (ñ, á, é, í, ó, ú)\n  const BOM = '\\uFEFF';\n\n  // Ensure filename has .csv extension\n  const csvFilename = filename.endsWith('.csv') ? filename : `${filename}.csv`;\n\n  const blob = new Blob([BOM + csvContent], {\n    type: 'text/csv;charset=utf-8;'\n  });\n\n  const link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', csvFilename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n};\n\n/**\n * Get nested value from object using dot notation\n * @param {Object} obj - Object to get value from\n * @param {string} path - Path to value (e.g., 'sede.direccion')\n * @returns {any} Value at path or undefined\n */\nexport const getNestedValue = (obj, path) => {\n  return path.split('.').reduce((current, key) => current?.[key], obj);\n};\n\n/**\n * Format date for CSV export\n * @param {string|Date} date - Date to format\n * @returns {string} Formatted date string\n */\nexport const formatDateForCSV = (date) => {\n  if (!date) return '';\n  try {\n    return new Date(date).toLocaleDateString('es-ES');\n  } catch {\n    return String(date);\n  }\n};\n\n/**\n * Format currency for CSV export\n * @param {number} amount - Amount to format\n * @returns {string} Formatted currency string\n */\nexport const formatCurrencyForCSV = (amount) => {\n  if (amount === null || amount === undefined) return '';\n  try {\n    return new Intl.NumberFormat('es-CO', {\n      style: 'currency',\n      currency: 'COP',\n      minimumFractionDigits: 0\n    }).format(amount);\n  } catch {\n    return String(amount);\n  }\n};\n\n/**\n * Calculate age from birth date\n * @param {string|Date} birthDate - Birth date\n * @returns {string} Age string or empty string\n */\nexport const calculateAge = (birthDate) => {\n  if (!birthDate) return '';\n  try {\n    const birth = new Date(birthDate);\n    const today = new Date();\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n      age--;\n    }\n    return age > 0 ? `${age} años` : '';\n  } catch {\n    return '';\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}