{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/LoadingSpinner.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * LoadingSpinner component - Reusable loading spinner with optional text\n * \n * @param {Object} props\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Spinner size\n * @param {'blue'|'gray'|'white'} props.color - Spinner color\n * @param {string} props.text - Optional loading text\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'md',\n  color = 'blue',\n  text = '',\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8',\n    xl: 'w-12 h-12'\n  };\n  const colorClasses = {\n    blue: 'text-blue-600',\n    gray: 'text-gray-600',\n    white: 'text-white'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex flex-col items-center justify-center ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `animate-spin rounded-full border-2 border-gray-300 border-t-2 ${colorClasses[color]} ${sizeClasses[size]}`,\n      role: \"status\",\n      \"aria-label\": \"Loading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), text && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `mt-2 text-sm ${colorClasses[color]}`,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nLoadingSpinner.propTypes = {\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  color: PropTypes.oneOf(['blue', 'gray', 'white']),\n  text: PropTypes.string,\n  className: PropTypes.string\n};\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","LoadingSpinner","size","color","text","className","sizeClasses","sm","md","lg","xl","colorClasses","blue","gray","white","children","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","oneOf","string","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/LoadingSpinner.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * LoadingSpinner component - Reusable loading spinner with optional text\n * \n * @param {Object} props\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Spinner size\n * @param {'blue'|'gray'|'white'} props.color - Spinner color\n * @param {string} props.text - Optional loading text\n * @param {string} props.className - Additional CSS classes\n */\nconst LoadingSpinner = ({\n  size = 'md',\n  color = 'blue',\n  text = '',\n  className = ''\n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8',\n    xl: 'w-12 h-12'\n  };\n\n  const colorClasses = {\n    blue: 'text-blue-600',\n    gray: 'text-gray-600',\n    white: 'text-white'\n  };\n\n  return (\n    <div className={`flex flex-col items-center justify-center ${className}`}>\n      <div\n        className={`animate-spin rounded-full border-2 border-gray-300 border-t-2 ${colorClasses[color]} ${sizeClasses[size]}`}\n        role=\"status\"\n        aria-label=\"Loading\"\n      >\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      {text && (\n        <p className={`mt-2 text-sm ${colorClasses[color]}`}>\n          {text}\n        </p>\n      )}\n    </div>\n  );\n};\n\nLoadingSpinner.propTypes = {\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  color: PropTypes.oneOf(['blue', 'gray', 'white']),\n  text: PropTypes.string,\n  className: PropTypes.string\n};\n\nexport default LoadingSpinner;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,cAAc,GAAGA,CAAC;EACtBC,IAAI,GAAG,IAAI;EACXC,KAAK,GAAG,MAAM;EACdC,IAAI,GAAG,EAAE;EACTC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAG;IAClBC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE,SAAS;IACbC,EAAE,EAAE;EACN,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE,eAAe;IACrBC,KAAK,EAAE;EACT,CAAC;EAED,oBACEd,OAAA;IAAKK,SAAS,EAAE,6CAA6CA,SAAS,EAAG;IAAAU,QAAA,gBACvEf,OAAA;MACEK,SAAS,EAAE,iEAAiEM,YAAY,CAACR,KAAK,CAAC,IAAIG,WAAW,CAACJ,IAAI,CAAC,EAAG;MACvHc,IAAI,EAAC,QAAQ;MACb,cAAW,SAAS;MAAAD,QAAA,eAEpBf,OAAA;QAAMK,SAAS,EAAC,SAAS;QAAAU,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACLhB,IAAI,iBACHJ,OAAA;MAAGK,SAAS,EAAE,gBAAgBM,YAAY,CAACR,KAAK,CAAC,EAAG;MAAAY,QAAA,EACjDX;IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,EAAA,GAnCIpB,cAAc;AAqCpBA,cAAc,CAACqB,SAAS,GAAG;EACzBpB,IAAI,EAAEJ,SAAS,CAACyB,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EAC/CpB,KAAK,EAAEL,SAAS,CAACyB,KAAK,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EACjDnB,IAAI,EAAEN,SAAS,CAAC0B,MAAM;EACtBnB,SAAS,EAAEP,SAAS,CAAC0B;AACvB,CAAC;AAED,eAAevB,cAAc;AAAC,IAAAoB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}