{"ast":null,"code":"import _objectSpread from\"/Users/todoporunalma/Desktop/corporacion_react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import StatCard from'./StatCard';/**\n * StatsGrid component for displaying multiple StatCards in a responsive grid\n * \n * @param {Object} props\n * @param {Array} props.stats - Array of stat objects with StatCard props\n * @param {2|3|4|5} props.columns - Number of columns on desktop\n * @param {'sm'|'md'|'lg'} props.gap - Gap between cards\n * @param {string} props.className - Additional CSS classes\n */import{jsx as _jsx}from\"react/jsx-runtime\";const StatsGrid=_ref=>{let{stats,columns=4,gap='md',className=''}=_ref;// Gap styles - responsive\nconst gapStyles={sm:'gap-3 md:gap-4',md:'gap-4 md:gap-6',lg:'gap-6 md:gap-8'};// Column styles for different breakpoints\nconst columnStyles={2:'md:grid-cols-2',3:'md:grid-cols-2 lg:grid-cols-3',4:'md:grid-cols-2 lg:grid-cols-4',5:'md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5'};const gridClasses=\"\\n    grid\\n    grid-cols-1\\n    \".concat(columnStyles[columns],\"\\n    \").concat(gapStyles[gap],\"\\n    \").concat(className,\"\\n  \").trim().replace(/\\s+/g,' ');return/*#__PURE__*/_jsx(\"div\",{className:gridClasses,children:stats.map((stat,index)=>/*#__PURE__*/_jsx(StatCard,_objectSpread({},stat),stat.key||index))});};export default StatsGrid;","map":{"version":3,"names":["React","StatCard","jsx","_jsx","StatsGrid","_ref","stats","columns","gap","className","gapStyles","sm","md","lg","columnStyles","gridClasses","concat","trim","replace","children","map","stat","index","_objectSpread","key"],"sources":["/Users/todoporunalma/Desktop/corporacion_react/src/components/UI/Card/StatsGrid.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatCard from './StatCard';\n\n/**\n * StatsGrid component for displaying multiple StatCards in a responsive grid\n * \n * @param {Object} props\n * @param {Array} props.stats - Array of stat objects with StatCard props\n * @param {2|3|4|5} props.columns - Number of columns on desktop\n * @param {'sm'|'md'|'lg'} props.gap - Gap between cards\n * @param {string} props.className - Additional CSS classes\n */\nconst StatsGrid = ({\n  stats,\n  columns = 4,\n  gap = 'md',\n  className = ''\n}) => {\n  // Gap styles - responsive\n  const gapStyles = {\n    sm: 'gap-3 md:gap-4',\n    md: 'gap-4 md:gap-6',\n    lg: 'gap-6 md:gap-8'\n  };\n\n  // Column styles for different breakpoints\n  const columnStyles = {\n    2: 'md:grid-cols-2',\n    3: 'md:grid-cols-2 lg:grid-cols-3',\n    4: 'md:grid-cols-2 lg:grid-cols-4',\n    5: 'md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5'\n  };\n\n  const gridClasses = `\n    grid\n    grid-cols-1\n    ${columnStyles[columns]}\n    ${gapStyles[gap]}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div className={gridClasses}>\n      {stats.map((stat, index) => (\n        <StatCard\n          key={stat.key || index}\n          {...stat}\n        />\n      ))}\n    </div>\n  );\n};\n\nStatsGrid.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      icon: PropTypes.string.isRequired,\n      color: PropTypes.oneOf(['blue', 'green', 'red', 'purple', 'orange', 'gray']),\n      subtitle: PropTypes.string,\n      trend: PropTypes.shape({\n        value: PropTypes.number.isRequired,\n        isPositive: PropTypes.bool.isRequired\n      }),\n      onClick: PropTypes.func,\n      loading: PropTypes.bool,\n      key: PropTypes.string\n    })\n  ).isRequired,\n  columns: PropTypes.oneOf([2, 3, 4, 5]),\n  gap: PropTypes.oneOf(['sm', 'md', 'lg']),\n  className: PropTypes.string\n};\n\nexport default StatsGrid;\n"],"mappings":"mIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA,OAAAC,GAAA,IAAAC,IAAA,yBASA,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAKZ,IALa,CACjBC,KAAK,CACLC,OAAO,CAAG,CAAC,CACXC,GAAG,CAAG,IAAI,CACVC,SAAS,CAAG,EACd,CAAC,CAAAJ,IAAA,CACC;AACA,KAAM,CAAAK,SAAS,CAAG,CAChBC,EAAE,CAAE,gBAAgB,CACpBC,EAAE,CAAE,gBAAgB,CACpBC,EAAE,CAAE,gBACN,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,CACnB,CAAC,CAAE,gBAAgB,CACnB,CAAC,CAAE,+BAA+B,CAClC,CAAC,CAAE,+BAA+B,CAClC,CAAC,CAAE,8CACL,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,oCAAAC,MAAA,CAGhBF,YAAY,CAACP,OAAO,CAAC,WAAAS,MAAA,CACrBN,SAAS,CAACF,GAAG,CAAC,WAAAQ,MAAA,CACdP,SAAS,SACXQ,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAE7B,mBACEf,IAAA,QAAKM,SAAS,CAAEM,WAAY,CAAAI,QAAA,CACzBb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACrBnB,IAAA,CAACF,QAAQ,CAAAsB,aAAA,IAEHF,IAAI,EADHA,IAAI,CAACG,GAAG,EAAIF,KAElB,CACF,CAAC,CACC,CAAC,CAEV,CAAC,CAwBD,cAAe,CAAAlB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}