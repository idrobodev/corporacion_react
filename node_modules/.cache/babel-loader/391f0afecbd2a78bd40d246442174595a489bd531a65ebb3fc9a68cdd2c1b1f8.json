{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/GradientText.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * GradientText component - Text with gradient color effect\n * \n * @param {Object} props\n * @param {React.ReactNode} props.children - Text content\n * @param {string} props.from - Starting gradient color (Tailwind color class)\n * @param {string} props.to - Ending gradient color (Tailwind color class)\n * @param {string} props.className - Additional CSS classes\n * @param {React.ElementType} props.as - HTML element to render as\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GradientText = ({\n  children,\n  from = 'blue-600',\n  to = 'purple-600',\n  className = '',\n  as: Component = 'span'\n}) => {\n  const gradientClass = `bg-gradient-to-r from-${from} to-${to} bg-clip-text text-transparent`;\n  return /*#__PURE__*/_jsxDEV(Component, {\n    className: `${gradientClass} ${className}`,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = GradientText;\nGradientText.propTypes = {\n  children: PropTypes.node.isRequired,\n  from: PropTypes.string,\n  to: PropTypes.string,\n  className: PropTypes.string,\n  as: PropTypes.elementType\n};\nexport default GradientText;\nvar _c;\n$RefreshReg$(_c, \"GradientText\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","GradientText","children","from","to","className","as","Component","gradientClass","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","isRequired","string","elementType","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/GradientText.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * GradientText component - Text with gradient color effect\n * \n * @param {Object} props\n * @param {React.ReactNode} props.children - Text content\n * @param {string} props.from - Starting gradient color (Tailwind color class)\n * @param {string} props.to - Ending gradient color (Tailwind color class)\n * @param {string} props.className - Additional CSS classes\n * @param {React.ElementType} props.as - HTML element to render as\n */\nconst GradientText = ({\n  children,\n  from = 'blue-600',\n  to = 'purple-600',\n  className = '',\n  as: Component = 'span'\n}) => {\n  const gradientClass = `bg-gradient-to-r from-${from} to-${to} bg-clip-text text-transparent`;\n\n  return (\n    <Component className={`${gradientClass} ${className}`}>\n      {children}\n    </Component>\n  );\n};\n\nGradientText.propTypes = {\n  children: PropTypes.node.isRequired,\n  from: PropTypes.string,\n  to: PropTypes.string,\n  className: PropTypes.string,\n  as: PropTypes.elementType\n};\n\nexport default GradientText;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,YAAY,GAAGA,CAAC;EACpBC,QAAQ;EACRC,IAAI,GAAG,UAAU;EACjBC,EAAE,GAAG,YAAY;EACjBC,SAAS,GAAG,EAAE;EACdC,EAAE,EAAEC,SAAS,GAAG;AAClB,CAAC,KAAK;EACJ,MAAMC,aAAa,GAAG,yBAAyBL,IAAI,OAAOC,EAAE,gCAAgC;EAE5F,oBACEJ,OAAA,CAACO,SAAS;IAACF,SAAS,EAAE,GAAGG,aAAa,IAAIH,SAAS,EAAG;IAAAH,QAAA,EACnDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB,CAAC;AAACC,EAAA,GAdIZ,YAAY;AAgBlBA,YAAY,CAACa,SAAS,GAAG;EACvBZ,QAAQ,EAAEJ,SAAS,CAACiB,IAAI,CAACC,UAAU;EACnCb,IAAI,EAAEL,SAAS,CAACmB,MAAM;EACtBb,EAAE,EAAEN,SAAS,CAACmB,MAAM;EACpBZ,SAAS,EAAEP,SAAS,CAACmB,MAAM;EAC3BX,EAAE,EAAER,SAAS,CAACoB;AAChB,CAAC;AAED,eAAejB,YAAY;AAAC,IAAAY,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}