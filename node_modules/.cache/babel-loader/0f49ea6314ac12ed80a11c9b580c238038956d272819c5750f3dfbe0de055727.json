{"ast":null,"code":"import{useState,useEffect}from'react';/**\n * useDebounce hook - Debounce a value\n * \n * @param {any} value - Value to debounce\n * @param {number} delay - Delay in milliseconds\n * @returns {any} - Debounced value\n */const useDebounce=function(value){let delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:300;const[debouncedValue,setDebouncedValue]=useState(value);useEffect(()=>{const timer=setTimeout(()=>{setDebouncedValue(value);},delay);return()=>{clearTimeout(timer);};},[value,delay]);return debouncedValue;};export default useDebounce;","map":{"version":3,"names":["useState","useEffect","useDebounce","value","delay","arguments","length","undefined","debouncedValue","setDebouncedValue","timer","setTimeout","clearTimeout"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/hooks/useDebounce.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * useDebounce hook - Debounce a value\n * \n * @param {any} value - Value to debounce\n * @param {number} delay - Delay in milliseconds\n * @returns {any} - Debounced value\n */\nconst useDebounce = (value, delay = 300) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport default useDebounce;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,WAAW,CAAG,QAAAA,CAACC,KAAK,CAAkB,IAAhB,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,GAAG,CACrC,KAAM,CAACG,cAAc,CAAEC,iBAAiB,CAAC,CAAGT,QAAQ,CAACG,KAAK,CAAC,CAE3DF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,KAAK,CAAGC,UAAU,CAAC,IAAM,CAC7BF,iBAAiB,CAACN,KAAK,CAAC,CAC1B,CAAC,CAAEC,KAAK,CAAC,CAET,MAAO,IAAM,CACXQ,YAAY,CAACF,KAAK,CAAC,CACrB,CAAC,CACH,CAAC,CAAE,CAACP,KAAK,CAAEC,KAAK,CAAC,CAAC,CAElB,MAAO,CAAAI,cAAc,CACvB,CAAC,CAED,cAAe,CAAAN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}