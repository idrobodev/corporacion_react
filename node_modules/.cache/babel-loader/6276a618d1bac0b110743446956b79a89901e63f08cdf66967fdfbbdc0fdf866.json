{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Badge/StatusToggle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StatusBadge from './StatusBadge';\n\n/**\n * StatusToggle component for toggling between different status states\n * \n * @param {Object} props\n * @param {string} props.currentStatus - Current status value\n * @param {Array} props.statuses - Array of status objects with value, label, and variant\n * @param {Function} props.onChange - Callback when status changes\n * @param {boolean} props.disabled - Disabled state\n * @param {boolean} props.loading - Loading state\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusToggle = ({\n  currentStatus,\n  statuses,\n  onChange,\n  disabled = false,\n  loading = false,\n  className = '',\n  ...rest\n}) => {\n  _s();\n  const [isChanging, setIsChanging] = useState(false);\n\n  // Find current status config\n  const currentStatusConfig = statuses.find(s => s.value === currentStatus) || statuses[0];\n\n  // Find next status in cycle\n  const getNextStatus = () => {\n    const currentIndex = statuses.findIndex(s => s.value === currentStatus);\n    const nextIndex = (currentIndex + 1) % statuses.length;\n    return statuses[nextIndex];\n  };\n  const nextStatus = getNextStatus();\n  const handleClick = async () => {\n    if (disabled || loading || isChanging) return;\n    setIsChanging(true);\n    try {\n      await onChange(nextStatus.value);\n    } catch (error) {\n      console.error('Error changing status:', error);\n    } finally {\n      setIsChanging(false);\n    }\n  };\n  const isDisabled = disabled || loading || isChanging;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-block ${className}`,\n    title: isDisabled ? '' : `Cambiar a ${nextStatus.label}`,\n    children: /*#__PURE__*/_jsxDEV(StatusBadge, {\n      status: isChanging || loading ? 'Cambiando...' : currentStatusConfig.label,\n      variant: currentStatusConfig.variant,\n      icon: isChanging || loading ? 'fas fa-spinner fa-spin' : undefined,\n      onClick: isDisabled ? undefined : handleClick,\n      className: isDisabled ? 'opacity-50 cursor-not-allowed' : '',\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(StatusToggle, \"0gyjCafQwlrJ6RpHB5ae4po1BkI=\");\n_c = StatusToggle;\nStatusToggle.propTypes = {\n  currentStatus: PropTypes.string.isRequired,\n  statuses: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    variant: PropTypes.oneOf(['success', 'warning', 'danger', 'info', 'default']).isRequired\n  })).isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  className: PropTypes.string\n};\nexport default StatusToggle;\nvar _c;\n$RefreshReg$(_c, \"StatusToggle\");","map":{"version":3,"names":["React","useState","PropTypes","StatusBadge","jsxDEV","_jsxDEV","StatusToggle","currentStatus","statuses","onChange","disabled","loading","className","rest","_s","isChanging","setIsChanging","currentStatusConfig","find","s","value","getNextStatus","currentIndex","findIndex","nextIndex","length","nextStatus","handleClick","error","console","isDisabled","title","label","children","status","variant","icon","undefined","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","arrayOf","shape","oneOf","func","bool","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Badge/StatusToggle.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport StatusBadge from './StatusBadge';\n\n/**\n * StatusToggle component for toggling between different status states\n * \n * @param {Object} props\n * @param {string} props.currentStatus - Current status value\n * @param {Array} props.statuses - Array of status objects with value, label, and variant\n * @param {Function} props.onChange - Callback when status changes\n * @param {boolean} props.disabled - Disabled state\n * @param {boolean} props.loading - Loading state\n * @param {string} props.className - Additional CSS classes\n */\nconst StatusToggle = ({\n  currentStatus,\n  statuses,\n  onChange,\n  disabled = false,\n  loading = false,\n  className = '',\n  ...rest\n}) => {\n  const [isChanging, setIsChanging] = useState(false);\n\n  // Find current status config\n  const currentStatusConfig = statuses.find(s => s.value === currentStatus) || statuses[0];\n\n  // Find next status in cycle\n  const getNextStatus = () => {\n    const currentIndex = statuses.findIndex(s => s.value === currentStatus);\n    const nextIndex = (currentIndex + 1) % statuses.length;\n    return statuses[nextIndex];\n  };\n\n  const nextStatus = getNextStatus();\n\n  const handleClick = async () => {\n    if (disabled || loading || isChanging) return;\n\n    setIsChanging(true);\n    try {\n      await onChange(nextStatus.value);\n    } catch (error) {\n      console.error('Error changing status:', error);\n    } finally {\n      setIsChanging(false);\n    }\n  };\n\n  const isDisabled = disabled || loading || isChanging;\n\n  return (\n    <div className={`inline-block ${className}`} title={isDisabled ? '' : `Cambiar a ${nextStatus.label}`}>\n      <StatusBadge\n        status={isChanging || loading ? 'Cambiando...' : currentStatusConfig.label}\n        variant={currentStatusConfig.variant}\n        icon={isChanging || loading ? 'fas fa-spinner fa-spin' : undefined}\n        onClick={isDisabled ? undefined : handleClick}\n        className={isDisabled ? 'opacity-50 cursor-not-allowed' : ''}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nStatusToggle.propTypes = {\n  currentStatus: PropTypes.string.isRequired,\n  statuses: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      variant: PropTypes.oneOf(['success', 'warning', 'danger', 'info', 'default']).isRequired\n    })\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  className: PropTypes.string\n};\n\nexport default StatusToggle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}