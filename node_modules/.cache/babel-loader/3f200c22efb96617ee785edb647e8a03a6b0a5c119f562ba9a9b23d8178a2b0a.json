{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\n\n/**\n * Custom hook for pagination logic\n * \n * @param {Array} data - The array of data to paginate\n * @param {number} pageSize - Number of items per page (default: 10)\n * @returns {Object} Pagination state and functions\n * \n * @example\n * const { \n *   currentPage, \n *   totalPages, \n *   paginatedData, \n *   setPage, \n *   nextPage, \n *   prevPage \n * } = usePagination(items, 10);\n */\nexport const usePagination = (data, pageSize = 10) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Calculate total pages\n  const totalPages = useMemo(() => {\n    return Math.ceil(data.length / pageSize);\n  }, [data.length, pageSize]);\n\n  // Calculate start and end indices\n  const {\n    startIndex,\n    endIndex\n  } = useMemo(() => {\n    const start = (currentPage - 1) * pageSize;\n    const end = start + pageSize;\n    return {\n      startIndex: start,\n      endIndex: end\n    };\n  }, [currentPage, pageSize]);\n\n  // Calculate paginated data slice\n  const paginatedData = useMemo(() => {\n    return data.slice(startIndex, endIndex);\n  }, [data, startIndex, endIndex]);\n\n  // Set page function with validation\n  const setPage = page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n\n  // Navigate to next page\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prev => prev + 1);\n    }\n  };\n\n  // Navigate to previous page\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prev => prev - 1);\n    }\n  };\n\n  // Reset to first page\n  const resetPage = () => {\n    setCurrentPage(1);\n  };\n  return {\n    currentPage,\n    totalPages,\n    pageSize,\n    setPage,\n    nextPage,\n    prevPage,\n    resetPage,\n    paginatedData,\n    startIndex,\n    endIndex,\n    // Additional helper properties\n    totalItems: data.length,\n    hasNextPage: currentPage < totalPages,\n    hasPrevPage: currentPage > 1,\n    startItem: data.length > 0 ? startIndex + 1 : 0,\n    endItem: Math.min(endIndex, data.length)\n  };\n};\n_s(usePagination, \"Ysq78DC5shIwwPO294ITEPVmAXs=\");\nexport default usePagination;","map":{"version":3,"names":["useState","useMemo","usePagination","data","pageSize","_s","currentPage","setCurrentPage","totalPages","Math","ceil","length","startIndex","endIndex","start","end","paginatedData","slice","setPage","page","nextPage","prev","prevPage","resetPage","totalItems","hasNextPage","hasPrevPage","startItem","endItem","min"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/hooks/usePagination.js"],"sourcesContent":["import { useState, useMemo } from 'react';\n\n/**\n * Custom hook for pagination logic\n * \n * @param {Array} data - The array of data to paginate\n * @param {number} pageSize - Number of items per page (default: 10)\n * @returns {Object} Pagination state and functions\n * \n * @example\n * const { \n *   currentPage, \n *   totalPages, \n *   paginatedData, \n *   setPage, \n *   nextPage, \n *   prevPage \n * } = usePagination(items, 10);\n */\nexport const usePagination = (data, pageSize = 10) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Calculate total pages\n  const totalPages = useMemo(() => {\n    return Math.ceil(data.length / pageSize);\n  }, [data.length, pageSize]);\n\n  // Calculate start and end indices\n  const { startIndex, endIndex } = useMemo(() => {\n    const start = (currentPage - 1) * pageSize;\n    const end = start + pageSize;\n    return { startIndex: start, endIndex: end };\n  }, [currentPage, pageSize]);\n\n  // Calculate paginated data slice\n  const paginatedData = useMemo(() => {\n    return data.slice(startIndex, endIndex);\n  }, [data, startIndex, endIndex]);\n\n  // Set page function with validation\n  const setPage = (page) => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n\n  // Navigate to next page\n  const nextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prev => prev + 1);\n    }\n  };\n\n  // Navigate to previous page\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prev => prev - 1);\n    }\n  };\n\n  // Reset to first page\n  const resetPage = () => {\n    setCurrentPage(1);\n  };\n\n  return {\n    currentPage,\n    totalPages,\n    pageSize,\n    setPage,\n    nextPage,\n    prevPage,\n    resetPage,\n    paginatedData,\n    startIndex,\n    endIndex,\n    // Additional helper properties\n    totalItems: data.length,\n    hasNextPage: currentPage < totalPages,\n    hasPrevPage: currentPage > 1,\n    startItem: data.length > 0 ? startIndex + 1 : 0,\n    endItem: Math.min(endIndex, data.length)\n  };\n};\n\nexport default usePagination;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,OAAO;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,QAAQ,GAAG,EAAE,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAEjD;EACA,MAAMQ,UAAU,GAAGP,OAAO,CAAC,MAAM;IAC/B,OAAOQ,IAAI,CAACC,IAAI,CAACP,IAAI,CAACQ,MAAM,GAAGP,QAAQ,CAAC;EAC1C,CAAC,EAAE,CAACD,IAAI,CAACQ,MAAM,EAAEP,QAAQ,CAAC,CAAC;;EAE3B;EACA,MAAM;IAAEQ,UAAU;IAAEC;EAAS,CAAC,GAAGZ,OAAO,CAAC,MAAM;IAC7C,MAAMa,KAAK,GAAG,CAACR,WAAW,GAAG,CAAC,IAAIF,QAAQ;IAC1C,MAAMW,GAAG,GAAGD,KAAK,GAAGV,QAAQ;IAC5B,OAAO;MAAEQ,UAAU,EAAEE,KAAK;MAAED,QAAQ,EAAEE;IAAI,CAAC;EAC7C,CAAC,EAAE,CAACT,WAAW,EAAEF,QAAQ,CAAC,CAAC;;EAE3B;EACA,MAAMY,aAAa,GAAGf,OAAO,CAAC,MAAM;IAClC,OAAOE,IAAI,CAACc,KAAK,CAACL,UAAU,EAAEC,QAAQ,CAAC;EACzC,CAAC,EAAE,CAACV,IAAI,EAAES,UAAU,EAAEC,QAAQ,CAAC,CAAC;;EAEhC;EACA,MAAMK,OAAO,GAAIC,IAAI,IAAK;IACxB,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAIX,UAAU,EAAE;MACnCD,cAAc,CAACY,IAAI,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAId,WAAW,GAAGE,UAAU,EAAE;MAC5BD,cAAc,CAACc,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAClC;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIhB,WAAW,GAAG,CAAC,EAAE;MACnBC,cAAc,CAACc,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAClC;EACF,CAAC;;EAED;EACA,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBhB,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,OAAO;IACLD,WAAW;IACXE,UAAU;IACVJ,QAAQ;IACRc,OAAO;IACPE,QAAQ;IACRE,QAAQ;IACRC,SAAS;IACTP,aAAa;IACbJ,UAAU;IACVC,QAAQ;IACR;IACAW,UAAU,EAAErB,IAAI,CAACQ,MAAM;IACvBc,WAAW,EAAEnB,WAAW,GAAGE,UAAU;IACrCkB,WAAW,EAAEpB,WAAW,GAAG,CAAC;IAC5BqB,SAAS,EAAExB,IAAI,CAACQ,MAAM,GAAG,CAAC,GAAGC,UAAU,GAAG,CAAC,GAAG,CAAC;IAC/CgB,OAAO,EAAEnB,IAAI,CAACoB,GAAG,CAAChB,QAAQ,EAAEV,IAAI,CAACQ,MAAM;EACzC,CAAC;AACH,CAAC;AAACN,EAAA,CAhEWH,aAAa;AAkE1B,eAAeA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}