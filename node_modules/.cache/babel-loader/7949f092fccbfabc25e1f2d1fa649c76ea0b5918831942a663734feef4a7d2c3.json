{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * GradientText component - Text with gradient color effect\n * \n * @param {Object} props\n * @param {React.ReactNode} props.children - Text content\n * @param {string} props.from - Starting gradient color (Tailwind color class)\n * @param {string} props.to - Ending gradient color (Tailwind color class)\n * @param {string} props.className - Additional CSS classes\n * @param {React.ElementType} props.as - HTML element to render as\n */const GradientText=_ref=>{let{children,from='blue-600',to='purple-600',className='',as:Component='span'}=_ref;const gradientClass=\"bg-gradient-to-r from-\".concat(from,\" to-\").concat(to,\" bg-clip-text text-transparent\");return/*#__PURE__*/_jsx(Component,{className:\"\".concat(gradientClass,\" \").concat(className),children:children});};export default GradientText;","map":{"version":3,"names":["React","jsx","_jsx","GradientText","_ref","children","from","to","className","as","Component","gradientClass","concat"],"sources":["/Users/todoporunalma/Desktop/Corporacion/coptua_react/src/components/UI/GradientText.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * GradientText component - Text with gradient color effect\n * \n * @param {Object} props\n * @param {React.ReactNode} props.children - Text content\n * @param {string} props.from - Starting gradient color (Tailwind color class)\n * @param {string} props.to - Ending gradient color (Tailwind color class)\n * @param {string} props.className - Additional CSS classes\n * @param {React.ElementType} props.as - HTML element to render as\n */\nconst GradientText = ({\n  children,\n  from = 'blue-600',\n  to = 'purple-600',\n  className = '',\n  as: Component = 'span'\n}) => {\n  const gradientClass = `bg-gradient-to-r from-${from} to-${to} bg-clip-text text-transparent`;\n\n  return (\n    <Component className={`${gradientClass} ${className}`}>\n      {children}\n    </Component>\n  );\n};\n\nGradientText.propTypes = {\n  children: PropTypes.node.isRequired,\n  from: PropTypes.string,\n  to: PropTypes.string,\n  className: PropTypes.string,\n  as: PropTypes.elementType\n};\n\nexport default GradientText;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAMf,IANgB,CACpBC,QAAQ,CACRC,IAAI,CAAG,UAAU,CACjBC,EAAE,CAAG,YAAY,CACjBC,SAAS,CAAG,EAAE,CACdC,EAAE,CAAEC,SAAS,CAAG,MAClB,CAAC,CAAAN,IAAA,CACC,KAAM,CAAAO,aAAa,0BAAAC,MAAA,CAA4BN,IAAI,SAAAM,MAAA,CAAOL,EAAE,kCAAgC,CAE5F,mBACEL,IAAA,CAACQ,SAAS,EAACF,SAAS,IAAAI,MAAA,CAAKD,aAAa,MAAAC,MAAA,CAAIJ,SAAS,CAAG,CAAAH,QAAA,CACnDA,QAAQ,CACA,CAAC,CAEhB,CAAC,CAUD,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}