{"ast":null,"code":"import{useState,useEffect,useCallback}from'react';import{useIsMobile,useIsTablet,useIsDesktop}from'./useMediaQuery';/**\n * Custom hook para manejar el estado del sidebar a través de toda la aplicación\n * Permite abrir/cerrar y colapsar/expandir el sidebar, guardando el estado en localStorage\n * Incluye lógica responsive para manejar diferentes estados según el dispositivo\n */const useSidebar=()=>{// Detectar tipo de dispositivo\nconst isMobile=useIsMobile();const isTablet=useIsTablet();const isDesktop=useIsDesktop();// Estado para controlar si el sidebar está abierto en móvil\nconst[sidebarOpen,setSidebarOpen]=useState(()=>{try{const v=localStorage.getItem('sidebarOpen');return v?JSON.parse(v):false;}catch(_){return false;}});// Estado para controlar si el sidebar está colapsado en desktop\nconst[sidebarCollapsed,setSidebarCollapsed]=useState(()=>{try{const v=localStorage.getItem('sidebarCollapsed');return v?JSON.parse(v):false;}catch(_){return false;}});/**\n   * Auto-cerrar sidebar móvil al cambiar a desktop/tablet\n   * Auto-expandir sidebar al cambiar de desktop a tablet\n   */useEffect(()=>{// Si cambiamos a tablet o desktop, cerrar el sidebar móvil\nif(!isMobile&&sidebarOpen){setSidebarOpen(false);try{localStorage.setItem('sidebarOpen',JSON.stringify(false));}catch(_){}}// Si cambiamos a móvil o tablet, auto-expandir el sidebar (no colapsado)\nif((isMobile||isTablet)&&sidebarCollapsed){setSidebarCollapsed(false);try{localStorage.setItem('sidebarCollapsed',JSON.stringify(false));}catch(_){}}},[isMobile,isTablet,sidebarOpen,sidebarCollapsed]);/**\n   * Función para alternar el estado de apertura del sidebar en móvil\n   */const toggleSidebarOpen=useCallback(()=>{const next=!sidebarOpen;setSidebarOpen(next);try{localStorage.setItem('sidebarOpen',JSON.stringify(next));}catch(_){}},[sidebarOpen]);/**\n   * Función para alternar el estado de colapso del sidebar en desktop\n   */const toggleSidebarCollapsed=useCallback(()=>{const next=!sidebarCollapsed;setSidebarCollapsed(next);try{localStorage.setItem('sidebarCollapsed',JSON.stringify(next));}catch(_){}},[sidebarCollapsed]);/**\n   * Función para cerrar el sidebar si estamos en móvil\n   * Útil para cerrar automáticamente al hacer clic en un item del menú\n   */const closeIfMobile=useCallback(()=>{if(isMobile&&sidebarOpen){setSidebarOpen(false);try{localStorage.setItem('sidebarOpen',JSON.stringify(false));}catch(_){}}},[isMobile,sidebarOpen]);/**\n   * Función para abrir el sidebar (solo en móvil)\n   */const openSidebar=useCallback(()=>{if(isMobile){setSidebarOpen(true);try{localStorage.setItem('sidebarOpen',JSON.stringify(true));}catch(_){}}},[isMobile]);/**\n   * Función para cerrar el sidebar (solo en móvil)\n   */const closeSidebar=useCallback(()=>{if(isMobile){setSidebarOpen(false);try{localStorage.setItem('sidebarOpen',JSON.stringify(false));}catch(_){}}},[isMobile]);return{// Estados\nsidebarOpen,sidebarCollapsed,isMobile,isTablet,isDesktop,// Funciones de toggle\ntoggleSidebarOpen,toggleSidebarCollapsed,// Funciones de control\ncloseIfMobile,openSidebar,closeSidebar,// Estados derivados útiles\nisOverlay:isMobile,// El sidebar es overlay solo en móvil\ncanCollapse:isDesktop,// Solo se puede colapsar en desktop\nisVisible:isMobile?sidebarOpen:true// En desktop siempre visible, en móvil depende de sidebarOpen\n};};export default useSidebar;","map":{"version":3,"names":["useState","useEffect","useCallback","useIsMobile","useIsTablet","useIsDesktop","useSidebar","isMobile","isTablet","isDesktop","sidebarOpen","setSidebarOpen","v","localStorage","getItem","JSON","parse","_","sidebarCollapsed","setSidebarCollapsed","setItem","stringify","toggleSidebarOpen","next","toggleSidebarCollapsed","closeIfMobile","openSidebar","closeSidebar","isOverlay","canCollapse","isVisible"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/hooks/useSidebar.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { useIsMobile, useIsTablet, useIsDesktop } from './useMediaQuery';\n\n/**\n * Custom hook para manejar el estado del sidebar a través de toda la aplicación\n * Permite abrir/cerrar y colapsar/expandir el sidebar, guardando el estado en localStorage\n * Incluye lógica responsive para manejar diferentes estados según el dispositivo\n */\nconst useSidebar = () => {\n  // Detectar tipo de dispositivo\n  const isMobile = useIsMobile();\n  const isTablet = useIsTablet();\n  const isDesktop = useIsDesktop();\n\n  // Estado para controlar si el sidebar está abierto en móvil\n  const [sidebarOpen, setSidebarOpen] = useState(() => {\n    try {\n      const v = localStorage.getItem('sidebarOpen');\n      return v ? JSON.parse(v) : false;\n    } catch (_) {\n      return false;\n    }\n  });\n\n  // Estado para controlar si el sidebar está colapsado en desktop\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(() => {\n    try {\n      const v = localStorage.getItem('sidebarCollapsed');\n      return v ? JSON.parse(v) : false;\n    } catch (_) {\n      return false;\n    }\n  });\n\n  /**\n   * Auto-cerrar sidebar móvil al cambiar a desktop/tablet\n   * Auto-expandir sidebar al cambiar de desktop a tablet\n   */\n  useEffect(() => {\n    // Si cambiamos a tablet o desktop, cerrar el sidebar móvil\n    if (!isMobile && sidebarOpen) {\n      setSidebarOpen(false);\n      try {\n        localStorage.setItem('sidebarOpen', JSON.stringify(false));\n      } catch (_) {}\n    }\n\n    // Si cambiamos a móvil o tablet, auto-expandir el sidebar (no colapsado)\n    if ((isMobile || isTablet) && sidebarCollapsed) {\n      setSidebarCollapsed(false);\n      try {\n        localStorage.setItem('sidebarCollapsed', JSON.stringify(false));\n      } catch (_) {}\n    }\n  }, [isMobile, isTablet, sidebarOpen, sidebarCollapsed]);\n\n  /**\n   * Función para alternar el estado de apertura del sidebar en móvil\n   */\n  const toggleSidebarOpen = useCallback(() => {\n    const next = !sidebarOpen;\n    setSidebarOpen(next);\n    try { \n      localStorage.setItem('sidebarOpen', JSON.stringify(next)); \n    } catch (_) {}\n  }, [sidebarOpen]);\n\n  /**\n   * Función para alternar el estado de colapso del sidebar en desktop\n   */\n  const toggleSidebarCollapsed = useCallback(() => {\n    const next = !sidebarCollapsed;\n    setSidebarCollapsed(next);\n    try { \n      localStorage.setItem('sidebarCollapsed', JSON.stringify(next)); \n    } catch (_) {}\n  }, [sidebarCollapsed]);\n\n  /**\n   * Función para cerrar el sidebar si estamos en móvil\n   * Útil para cerrar automáticamente al hacer clic en un item del menú\n   */\n  const closeIfMobile = useCallback(() => {\n    if (isMobile && sidebarOpen) {\n      setSidebarOpen(false);\n      try {\n        localStorage.setItem('sidebarOpen', JSON.stringify(false));\n      } catch (_) {}\n    }\n  }, [isMobile, sidebarOpen]);\n\n  /**\n   * Función para abrir el sidebar (solo en móvil)\n   */\n  const openSidebar = useCallback(() => {\n    if (isMobile) {\n      setSidebarOpen(true);\n      try {\n        localStorage.setItem('sidebarOpen', JSON.stringify(true));\n      } catch (_) {}\n    }\n  }, [isMobile]);\n\n  /**\n   * Función para cerrar el sidebar (solo en móvil)\n   */\n  const closeSidebar = useCallback(() => {\n    if (isMobile) {\n      setSidebarOpen(false);\n      try {\n        localStorage.setItem('sidebarOpen', JSON.stringify(false));\n      } catch (_) {}\n    }\n  }, [isMobile]);\n\n  return { \n    // Estados\n    sidebarOpen, \n    sidebarCollapsed,\n    isMobile,\n    isTablet,\n    isDesktop,\n    \n    // Funciones de toggle\n    toggleSidebarOpen, \n    toggleSidebarCollapsed,\n    \n    // Funciones de control\n    closeIfMobile,\n    openSidebar,\n    closeSidebar,\n    \n    // Estados derivados útiles\n    isOverlay: isMobile, // El sidebar es overlay solo en móvil\n    canCollapse: isDesktop, // Solo se puede colapsar en desktop\n    isVisible: isMobile ? sidebarOpen : true, // En desktop siempre visible, en móvil depende de sidebarOpen\n  };\n};\n\nexport default useSidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}