{"ast":null,"code":"// Utilidades para manejo de archivos\n\n// Tipos de archivo y sus iconos\nexport const FILE_TYPES = {\n  // Documentos\n  pdf: {\n    icon: 'fas fa-file-pdf',\n    color: 'text-red-500',\n    category: 'document'\n  },\n  doc: {\n    icon: 'fas fa-file-word',\n    color: 'text-blue-500',\n    category: 'document'\n  },\n  docx: {\n    icon: 'fas fa-file-word',\n    color: 'text-blue-500',\n    category: 'document'\n  },\n  xls: {\n    icon: 'fas fa-file-excel',\n    color: 'text-green-500',\n    category: 'document'\n  },\n  xlsx: {\n    icon: 'fas fa-file-excel',\n    color: 'text-green-500',\n    category: 'document'\n  },\n  ppt: {\n    icon: 'fas fa-file-powerpoint',\n    color: 'text-orange-500',\n    category: 'document'\n  },\n  pptx: {\n    icon: 'fas fa-file-powerpoint',\n    color: 'text-orange-500',\n    category: 'document'\n  },\n  txt: {\n    icon: 'fas fa-file-alt',\n    color: 'text-gray-500',\n    category: 'document'\n  },\n  // Imágenes\n  jpg: {\n    icon: 'fas fa-file-image',\n    color: 'text-purple-500',\n    category: 'image'\n  },\n  jpeg: {\n    icon: 'fas fa-file-image',\n    color: 'text-purple-500',\n    category: 'image'\n  },\n  png: {\n    icon: 'fas fa-file-image',\n    color: 'text-purple-500',\n    category: 'image'\n  },\n  gif: {\n    icon: 'fas fa-file-image',\n    color: 'text-purple-500',\n    category: 'image'\n  },\n  svg: {\n    icon: 'fas fa-file-image',\n    color: 'text-purple-500',\n    category: 'image'\n  },\n  webp: {\n    icon: 'fas fa-file-image',\n    color: 'text-purple-500',\n    category: 'image'\n  },\n  // Videos\n  mp4: {\n    icon: 'fas fa-file-video',\n    color: 'text-red-600',\n    category: 'video'\n  },\n  avi: {\n    icon: 'fas fa-file-video',\n    color: 'text-red-600',\n    category: 'video'\n  },\n  mov: {\n    icon: 'fas fa-file-video',\n    color: 'text-red-600',\n    category: 'video'\n  },\n  wmv: {\n    icon: 'fas fa-file-video',\n    color: 'text-red-600',\n    category: 'video'\n  },\n  // Audio\n  mp3: {\n    icon: 'fas fa-file-audio',\n    color: 'text-indigo-500',\n    category: 'audio'\n  },\n  wav: {\n    icon: 'fas fa-file-audio',\n    color: 'text-indigo-500',\n    category: 'audio'\n  },\n  flac: {\n    icon: 'fas fa-file-audio',\n    color: 'text-indigo-500',\n    category: 'audio'\n  },\n  // Archivos comprimidos\n  zip: {\n    icon: 'fas fa-file-archive',\n    color: 'text-yellow-600',\n    category: 'archive'\n  },\n  rar: {\n    icon: 'fas fa-file-archive',\n    color: 'text-yellow-600',\n    category: 'archive'\n  },\n  '7z': {\n    icon: 'fas fa-file-archive',\n    color: 'text-yellow-600',\n    category: 'archive'\n  },\n  // Código\n  js: {\n    icon: 'fas fa-file-code',\n    color: 'text-yellow-500',\n    category: 'code'\n  },\n  html: {\n    icon: 'fas fa-file-code',\n    color: 'text-orange-600',\n    category: 'code'\n  },\n  css: {\n    icon: 'fas fa-file-code',\n    color: 'text-blue-600',\n    category: 'code'\n  },\n  json: {\n    icon: 'fas fa-file-code',\n    color: 'text-green-600',\n    category: 'code'\n  },\n  // Default\n  default: {\n    icon: 'fas fa-file',\n    color: 'text-gray-400',\n    category: 'other'\n  }\n};\n\n// Obtener información del tipo de archivo\nexport const getFileType = fileName => {\n  var _fileName$split$pop;\n  const extension = (_fileName$split$pop = fileName.split('.').pop()) === null || _fileName$split$pop === void 0 ? void 0 : _fileName$split$pop.toLowerCase();\n  return FILE_TYPES[extension] || FILE_TYPES.default;\n};\n\n// Formatear tamaño de archivo\nexport const formatFileSize = bytes => {\n  if (!bytes || bytes === 0) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n};\n\n// Formatear fecha\nexport const formatDate = dateString => {\n  if (!dateString) return 'N/A';\n  const date = new Date(dateString);\n  const now = new Date();\n  const diffTime = Math.abs(now - date);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  if (diffDays === 1) return 'Ayer';\n  if (diffDays < 7) return `Hace ${diffDays} días`;\n  if (diffDays < 30) return `Hace ${Math.ceil(diffDays / 7)} semanas`;\n  return date.toLocaleDateString('es-ES', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\n// Validar archivo para upload\nexport const validateFile = (file, maxSize = 10 * 1024 * 1024) => {\n  var _file$name$split$pop;\n  const errors = [];\n  if (file.size > maxSize) {\n    errors.push(`El archivo es muy grande (máx. ${formatFileSize(maxSize)})`);\n  }\n\n  // Validar tipos peligrosos\n  const dangerousTypes = ['.exe', '.bat', '.cmd', '.scr', '.pif', '.com'];\n  const extension = '.' + ((_file$name$split$pop = file.name.split('.').pop()) === null || _file$name$split$pop === void 0 ? void 0 : _file$name$split$pop.toLowerCase());\n  if (dangerousTypes.includes(extension)) {\n    errors.push('Tipo de archivo no permitido por seguridad');\n  }\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n// Generar breadcrumbs\nexport const generateBreadcrumbs = currentPath => {\n  if (!currentPath) return [{\n    name: 'Raíz',\n    path: ''\n  }];\n  const parts = currentPath.split('/').filter(Boolean);\n  const breadcrumbs = [{\n    name: 'Raíz',\n    path: ''\n  }];\n  let currentBreadcrumbPath = '';\n  parts.forEach((part, index) => {\n    currentBreadcrumbPath += (index === 0 ? '' : '/') + part;\n    breadcrumbs.push({\n      name: part,\n      path: currentBreadcrumbPath\n    });\n  });\n  return breadcrumbs;\n};\n\n// Filtrar archivos por categoría\nexport const filterFilesByCategory = (files, category) => {\n  if (category === 'all') return files;\n  return files.filter(file => {\n    const fileType = getFileType(file.name);\n    return fileType.category === category;\n  });\n};\n\n// Obtener estadísticas de archivos\nexport const getFileStats = files => {\n  const stats = {\n    total: files.length,\n    totalSize: 0,\n    categories: {}\n  };\n  files.forEach(file => {\n    var _file$metadata;\n    const size = ((_file$metadata = file.metadata) === null || _file$metadata === void 0 ? void 0 : _file$metadata.size) || 0;\n    stats.totalSize += size;\n    const fileType = getFileType(file.name);\n    const category = fileType.category;\n    if (!stats.categories[category]) {\n      stats.categories[category] = {\n        count: 0,\n        size: 0\n      };\n    }\n    stats.categories[category].count++;\n    stats.categories[category].size += size;\n  });\n  return stats;\n};\n\n// Buscar archivos\nexport const searchFiles = (files, searchTerm, searchIn = ['name']) => {\n  if (!searchTerm.trim()) return files;\n  const term = searchTerm.toLowerCase();\n  return files.filter(file => {\n    return searchIn.some(field => {\n      var _file$name$split$pop2;\n      switch (field) {\n        case 'name':\n          return file.name.toLowerCase().includes(term);\n        case 'extension':\n          const ext = (_file$name$split$pop2 = file.name.split('.').pop()) === null || _file$name$split$pop2 === void 0 ? void 0 : _file$name$split$pop2.toLowerCase();\n          return ext === null || ext === void 0 ? void 0 : ext.includes(term);\n        case 'category':\n          const fileType = getFileType(file.name);\n          return fileType.category.includes(term);\n        default:\n          return false;\n      }\n    });\n  });\n};\n\n// Ordenar archivos\nexport const sortFiles = (files, sortBy, sortOrder = 'asc') => {\n  return [...files].sort((a, b) => {\n    var _a$metadata, _b$metadata;\n    let aValue, bValue;\n    switch (sortBy) {\n      case 'size':\n        aValue = ((_a$metadata = a.metadata) === null || _a$metadata === void 0 ? void 0 : _a$metadata.size) || 0;\n        bValue = ((_b$metadata = b.metadata) === null || _b$metadata === void 0 ? void 0 : _b$metadata.size) || 0;\n        break;\n      case 'date':\n        aValue = new Date(a.created_at || 0);\n        bValue = new Date(b.created_at || 0);\n        break;\n      case 'type':\n        aValue = getFileType(a.name).category;\n        bValue = getFileType(b.name).category;\n        break;\n      default:\n        // name\n        aValue = a.name.toLowerCase();\n        bValue = b.name.toLowerCase();\n    }\n    if (sortOrder === 'desc') {\n      return aValue < bValue ? 1 : -1;\n    }\n    return aValue > bValue ? 1 : -1;\n  });\n};","map":{"version":3,"names":["FILE_TYPES","pdf","icon","color","category","doc","docx","xls","xlsx","ppt","pptx","txt","jpg","jpeg","png","gif","svg","webp","mp4","avi","mov","wmv","mp3","wav","flac","zip","rar","js","html","css","json","default","getFileType","fileName","_fileName$split$pop","extension","split","pop","toLowerCase","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","date","Date","now","diffTime","abs","diffDays","ceil","toLocaleDateString","year","month","day","validateFile","file","maxSize","_file$name$split$pop","errors","size","push","dangerousTypes","name","includes","isValid","length","generateBreadcrumbs","currentPath","path","parts","filter","Boolean","breadcrumbs","currentBreadcrumbPath","forEach","part","index","filterFilesByCategory","files","fileType","getFileStats","stats","total","totalSize","categories","_file$metadata","metadata","count","searchFiles","searchTerm","searchIn","trim","term","some","field","_file$name$split$pop2","ext","sortFiles","sortBy","sortOrder","sort","a","b","_a$metadata","_b$metadata","aValue","bValue","created_at"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/utils/fileUtils.js"],"sourcesContent":["// Utilidades para manejo de archivos\n\n// Tipos de archivo y sus iconos\nexport const FILE_TYPES = {\n  // Documentos\n  pdf: { icon: 'fas fa-file-pdf', color: 'text-red-500', category: 'document' },\n  doc: { icon: 'fas fa-file-word', color: 'text-blue-500', category: 'document' },\n  docx: { icon: 'fas fa-file-word', color: 'text-blue-500', category: 'document' },\n  xls: { icon: 'fas fa-file-excel', color: 'text-green-500', category: 'document' },\n  xlsx: { icon: 'fas fa-file-excel', color: 'text-green-500', category: 'document' },\n  ppt: { icon: 'fas fa-file-powerpoint', color: 'text-orange-500', category: 'document' },\n  pptx: { icon: 'fas fa-file-powerpoint', color: 'text-orange-500', category: 'document' },\n  txt: { icon: 'fas fa-file-alt', color: 'text-gray-500', category: 'document' },\n  \n  // Imágenes\n  jpg: { icon: 'fas fa-file-image', color: 'text-purple-500', category: 'image' },\n  jpeg: { icon: 'fas fa-file-image', color: 'text-purple-500', category: 'image' },\n  png: { icon: 'fas fa-file-image', color: 'text-purple-500', category: 'image' },\n  gif: { icon: 'fas fa-file-image', color: 'text-purple-500', category: 'image' },\n  svg: { icon: 'fas fa-file-image', color: 'text-purple-500', category: 'image' },\n  webp: { icon: 'fas fa-file-image', color: 'text-purple-500', category: 'image' },\n  \n  // Videos\n  mp4: { icon: 'fas fa-file-video', color: 'text-red-600', category: 'video' },\n  avi: { icon: 'fas fa-file-video', color: 'text-red-600', category: 'video' },\n  mov: { icon: 'fas fa-file-video', color: 'text-red-600', category: 'video' },\n  wmv: { icon: 'fas fa-file-video', color: 'text-red-600', category: 'video' },\n  \n  // Audio\n  mp3: { icon: 'fas fa-file-audio', color: 'text-indigo-500', category: 'audio' },\n  wav: { icon: 'fas fa-file-audio', color: 'text-indigo-500', category: 'audio' },\n  flac: { icon: 'fas fa-file-audio', color: 'text-indigo-500', category: 'audio' },\n  \n  // Archivos comprimidos\n  zip: { icon: 'fas fa-file-archive', color: 'text-yellow-600', category: 'archive' },\n  rar: { icon: 'fas fa-file-archive', color: 'text-yellow-600', category: 'archive' },\n  '7z': { icon: 'fas fa-file-archive', color: 'text-yellow-600', category: 'archive' },\n  \n  // Código\n  js: { icon: 'fas fa-file-code', color: 'text-yellow-500', category: 'code' },\n  html: { icon: 'fas fa-file-code', color: 'text-orange-600', category: 'code' },\n  css: { icon: 'fas fa-file-code', color: 'text-blue-600', category: 'code' },\n  json: { icon: 'fas fa-file-code', color: 'text-green-600', category: 'code' },\n  \n  // Default\n  default: { icon: 'fas fa-file', color: 'text-gray-400', category: 'other' }\n};\n\n// Obtener información del tipo de archivo\nexport const getFileType = (fileName) => {\n  const extension = fileName.split('.').pop()?.toLowerCase();\n  return FILE_TYPES[extension] || FILE_TYPES.default;\n};\n\n// Formatear tamaño de archivo\nexport const formatFileSize = (bytes) => {\n  if (!bytes || bytes === 0) return '0 B';\n  \n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n};\n\n// Formatear fecha\nexport const formatDate = (dateString) => {\n  if (!dateString) return 'N/A';\n  \n  const date = new Date(dateString);\n  const now = new Date();\n  const diffTime = Math.abs(now - date);\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  \n  if (diffDays === 1) return 'Ayer';\n  if (diffDays < 7) return `Hace ${diffDays} días`;\n  if (diffDays < 30) return `Hace ${Math.ceil(diffDays / 7)} semanas`;\n  \n  return date.toLocaleDateString('es-ES', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n};\n\n// Validar archivo para upload\nexport const validateFile = (file, maxSize = 10 * 1024 * 1024) => {\n  const errors = [];\n  \n  if (file.size > maxSize) {\n    errors.push(`El archivo es muy grande (máx. ${formatFileSize(maxSize)})`);\n  }\n  \n  // Validar tipos peligrosos\n  const dangerousTypes = ['.exe', '.bat', '.cmd', '.scr', '.pif', '.com'];\n  const extension = '.' + file.name.split('.').pop()?.toLowerCase();\n  \n  if (dangerousTypes.includes(extension)) {\n    errors.push('Tipo de archivo no permitido por seguridad');\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n};\n\n// Generar breadcrumbs\nexport const generateBreadcrumbs = (currentPath) => {\n  if (!currentPath) return [{ name: 'Raíz', path: '' }];\n  \n  const parts = currentPath.split('/').filter(Boolean);\n  const breadcrumbs = [{ name: 'Raíz', path: '' }];\n  \n  let currentBreadcrumbPath = '';\n  parts.forEach((part, index) => {\n    currentBreadcrumbPath += (index === 0 ? '' : '/') + part;\n    breadcrumbs.push({\n      name: part,\n      path: currentBreadcrumbPath\n    });\n  });\n  \n  return breadcrumbs;\n};\n\n// Filtrar archivos por categoría\nexport const filterFilesByCategory = (files, category) => {\n  if (category === 'all') return files;\n  \n  return files.filter(file => {\n    const fileType = getFileType(file.name);\n    return fileType.category === category;\n  });\n};\n\n// Obtener estadísticas de archivos\nexport const getFileStats = (files) => {\n  const stats = {\n    total: files.length,\n    totalSize: 0,\n    categories: {}\n  };\n  \n  files.forEach(file => {\n    const size = file.metadata?.size || 0;\n    stats.totalSize += size;\n    \n    const fileType = getFileType(file.name);\n    const category = fileType.category;\n    \n    if (!stats.categories[category]) {\n      stats.categories[category] = { count: 0, size: 0 };\n    }\n    \n    stats.categories[category].count++;\n    stats.categories[category].size += size;\n  });\n  \n  return stats;\n};\n\n// Buscar archivos\nexport const searchFiles = (files, searchTerm, searchIn = ['name']) => {\n  if (!searchTerm.trim()) return files;\n  \n  const term = searchTerm.toLowerCase();\n  \n  return files.filter(file => {\n    return searchIn.some(field => {\n      switch (field) {\n        case 'name':\n          return file.name.toLowerCase().includes(term);\n        case 'extension':\n          const ext = file.name.split('.').pop()?.toLowerCase();\n          return ext?.includes(term);\n        case 'category':\n          const fileType = getFileType(file.name);\n          return fileType.category.includes(term);\n        default:\n          return false;\n      }\n    });\n  });\n};\n\n// Ordenar archivos\nexport const sortFiles = (files, sortBy, sortOrder = 'asc') => {\n  return [...files].sort((a, b) => {\n    let aValue, bValue;\n    \n    switch (sortBy) {\n      case 'size':\n        aValue = a.metadata?.size || 0;\n        bValue = b.metadata?.size || 0;\n        break;\n      case 'date':\n        aValue = new Date(a.created_at || 0);\n        bValue = new Date(b.created_at || 0);\n        break;\n      case 'type':\n        aValue = getFileType(a.name).category;\n        bValue = getFileType(b.name).category;\n        break;\n      default: // name\n        aValue = a.name.toLowerCase();\n        bValue = b.name.toLowerCase();\n    }\n    \n    if (sortOrder === 'desc') {\n      return aValue < bValue ? 1 : -1;\n    }\n    return aValue > bValue ? 1 : -1;\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}