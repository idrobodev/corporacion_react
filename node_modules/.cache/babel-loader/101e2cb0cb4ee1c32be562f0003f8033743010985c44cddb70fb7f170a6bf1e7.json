{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/pages/Dashboard/Finance.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService } from \"shared/services\";\nimport { useFilters, usePagination, useModal } from \"shared/hooks\";\nimport { LoadingSpinner, FilterBar, DataTable, Pagination, StatusToggle, ActionDropdown, FormModal, FormInput, FormSelect, FormTextarea } from \"components/UI\";\nimport { validateMensualidadRelations } from \"shared/utils/validationUtils\";\n\n// Custom component for combined month-year filter\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MonthYearSelect = ({\n  value,\n  onChange,\n  label = \"Período\"\n}) => {\n  _s();\n  const months = useMemo(() => [{\n    value: 1,\n    label: 'Enero'\n  }, {\n    value: 2,\n    label: 'Febrero'\n  }, {\n    value: 3,\n    label: 'Marzo'\n  }, {\n    value: 4,\n    label: 'Abril'\n  }, {\n    value: 5,\n    label: 'Mayo'\n  }, {\n    value: 6,\n    label: 'Junio'\n  }, {\n    value: 7,\n    label: 'Julio'\n  }, {\n    value: 8,\n    label: 'Agosto'\n  }, {\n    value: 9,\n    label: 'Septiembre'\n  }, {\n    value: 10,\n    label: 'Octubre'\n  }, {\n    value: 11,\n    label: 'Noviembre'\n  }, {\n    value: 12,\n    label: 'Diciembre'\n  }], []);\n  const years = useMemo(() => Array.from({\n    length: 11\n  }, (_, i) => 2020 + i), []);\n  const options = useMemo(() => {\n    const opts = [{\n      value: 'all',\n      label: 'Todos'\n    }];\n    years.forEach(year => {\n      months.forEach(month => {\n        opts.push({\n          value: `${month.value}-${year}`,\n          label: `${month.label} ${year}`\n        });\n      });\n    });\n    return opts;\n  }, [months, years]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-sm font-medium text-gray-700 mb-1\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: value,\n      onChange: e => onChange(e.target.value),\n      className: \"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthYearSelect, \"re9eDlTFHnBz5W0wnC9J3mQbztw=\");\n_c = MonthYearSelect;\nconst Finance = /*#__PURE__*/_s2(/*#__PURE__*/React.memo(_c2 = _s2(() => {\n  _s2();\n  const [mensualidades, setMensualidades] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [sedes, setSedes] = useState([]);\n  const [acudientes, setAcudientes] = useState([]);\n  const [filteredAcudientes, setFilteredAcudientes] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({\n    participant_id: '',\n    id_acudiente: '',\n    mes: '',\n    año: new Date().getFullYear(),\n    valor: '',\n    status: 'PAGADA',\n    metodo_pago: 'TRANSFERENCIA',\n    fecha_pago: '',\n    observaciones: ''\n  });\n\n  // Use custom hooks\n  const {\n    filters,\n    setFilter,\n    clearFilters\n  } = useFilters({\n    periodo: 'all',\n    sede: 'all',\n    estado: 'all',\n    busqueda: ''\n  });\n  const {\n    isOpen: showModal,\n    openModal: openModalHook,\n    closeModal,\n    modalData,\n    updateModalData\n  } = useModal();\n\n  // Memoized form handlers to prevent unnecessary re-renders\n  const handleFormDataChange = useCallback((field, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  }, []);\n  const months = useMemo(() => [{\n    value: 1,\n    label: 'Enero'\n  }, {\n    value: 2,\n    label: 'Febrero'\n  }, {\n    value: 3,\n    label: 'Marzo'\n  }, {\n    value: 4,\n    label: 'Abril'\n  }, {\n    value: 5,\n    label: 'Mayo'\n  }, {\n    value: 6,\n    label: 'Junio'\n  }, {\n    value: 7,\n    label: 'Julio'\n  }, {\n    value: 8,\n    label: 'Agosto'\n  }, {\n    value: 9,\n    label: 'Septiembre'\n  }, {\n    value: 10,\n    label: 'Octubre'\n  }, {\n    value: 11,\n    label: 'Noviembre'\n  }, {\n    value: 12,\n    label: 'Diciembre'\n  }], []);\n  const years = useMemo(() => Array.from({\n    length: 11\n  }, (_, i) => 2020 + i), []);\n  const getMonthLabel = useCallback(mes => {\n    const month = months.find(m => m.value === mes);\n    return month ? month.label : mes.toString();\n  }, [months]);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        console.log('🔄 Cargando datos financieros...');\n        const [mensRes, partsRes, sedesRes, acudRes] = await Promise.all([dbService.getMensualidades(), dbService.getParticipantes(), dbService.getSedes(), dbService.getAcudientes()]);\n        console.log('📊 Resultados:', {\n          mensRes,\n          partsRes,\n          sedesRes,\n          acudRes\n        });\n\n        // Asegurar que siempre sean arrays (API service ya extrae el nested data)\n        const mensualidadesData = Array.isArray(mensRes.data) ? mensRes.data : [];\n        const participantesData = Array.isArray(partsRes.data) ? partsRes.data : [];\n        const sedesData = Array.isArray(sedesRes.data) ? sedesRes.data : [];\n        const acudientesData = Array.isArray(acudRes.data) ? acudRes.data : [];\n        setMensualidades(mensualidadesData);\n        setParticipants(participantesData);\n        setSedes(sedesData);\n        setAcudientes(acudientesData);\n        setFilteredAcudientes(acudientesData);\n        console.log('✅ Datos cargados:', {\n          mensualidades: mensualidadesData.length,\n          participantes: participantesData.length,\n          sedes: sedesData.length,\n          acudientes: acudientesData.length\n        });\n      } catch (err) {\n        console.error('❌ Error cargando datos financieros:', err);\n        setError(err.message || 'Error desconocido al cargar datos');\n        // Asegurar arrays vacíos en caso de error\n        setMensualidades([]);\n        setParticipants([]);\n        setSedes([]);\n        setAcudientes([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Filter acudientes when participant changes in form\n  useEffect(() => {\n    if (formData.participant_id) {\n      const filtered = acudientes.filter(a => a.id_participante === parseInt(formData.participant_id));\n      setFilteredAcudientes(filtered);\n      // Reset acudiente selection if current selection is not valid for new participant\n      if (formData.id_acudiente && !filtered.find(a => a.id_acudiente === parseInt(formData.id_acudiente))) {\n        setFormData(prev => ({\n          ...prev,\n          id_acudiente: ''\n        }));\n      }\n    } else {\n      setFilteredAcudientes(acudientes);\n    }\n  }, [formData.participant_id, acudientes, formData.id_acudiente]);\n  const filteredMensualidades = useMemo(() => {\n    // Asegurar que mensualidades siempre sea un array\n    const safeMensualidades = Array.isArray(mensualidades) ? mensualidades : [];\n    let filtered = safeMensualidades;\n    if (filters.periodo !== 'all') {\n      const [mes, año] = filters.periodo.split('-').map(Number);\n      filtered = filtered.filter(m => m.mes === mes && m.año === año);\n    }\n    if (filters.sede !== 'all') {\n      filtered = filtered.filter(m => m.sede_id === parseInt(filters.sede));\n    }\n    if (filters.estado !== 'all') {\n      filtered = filtered.filter(m => m.estado === filters.estado);\n    }\n    if (filters.busqueda) {\n      filtered = filtered.filter(m => (m.participant_documento || '').includes(filters.busqueda) || (m.acudiente_documento || '').includes(filters.busqueda));\n    }\n    return filtered;\n  }, [mensualidades, filters]);\n\n  // Use pagination hook\n  const {\n    currentPage,\n    totalPages,\n    paginatedData: paginatedMensualidades,\n    setPage\n  } = usePagination(filteredMensualidades, 10);\n  const openModal = useCallback((mensualidad = null) => {\n    if (mensualidad) {\n      // Pre-fill form with existing data\n      setFormData({\n        participant_id: mensualidad.participante_id || mensualidad.participant_id,\n        id_acudiente: mensualidad.id_acudiente || '',\n        mes: mensualidad.mes,\n        año: mensualidad.año,\n        valor: mensualidad.valor || mensualidad.monto,\n        status: mensualidad.estado || mensualidad.status,\n        metodo_pago: mensualidad.metodo_pago || 'TRANSFERENCIA',\n        fecha_pago: mensualidad.fecha_pago || '',\n        observaciones: mensualidad.observaciones || ''\n      });\n      updateModalData(mensualidad);\n    } else {\n      setFormData({\n        participant_id: '',\n        id_acudiente: '',\n        mes: '',\n        año: new Date().getFullYear(),\n        valor: '',\n        status: 'PAGADA',\n        metodo_pago: 'TRANSFERENCIA',\n        fecha_pago: '',\n        observaciones: ''\n      });\n      updateModalData(null);\n    }\n    openModalHook();\n  }, [openModalHook, updateModalData]);\n  const toggleStatus = useCallback(async (id, newStatus) => {\n    try {\n      await dbService.updateMensualidad(id, {\n        estado: newStatus\n      });\n      // Refresh data\n      const {\n        data\n      } = await dbService.getMensualidades();\n      setMensualidades(data || []);\n    } catch (err) {\n      console.error('Error updating status:', err);\n      // Optionally show error toast\n    }\n  }, []);\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n\n    // Validate fecha_pago is required when status is PAGADA\n    if (formData.status === 'PAGADA' && !formData.fecha_pago) {\n      alert('La fecha de pago es requerida cuando el estado es PAGADA');\n      return;\n    }\n\n    // Validate that participante and acudiente exist (if acudiente is provided)\n    try {\n      if (formData.id_acudiente) {\n        const relationsValidation = await validateMensualidadRelations(parseInt(formData.participant_id), parseInt(formData.id_acudiente));\n        if (!relationsValidation.isValid) {\n          alert(relationsValidation.error);\n          return;\n        }\n      }\n    } catch (err) {\n      console.error('Error validating relations:', err);\n      alert('Error al validar las relaciones: ' + (err.message || 'Error desconocido'));\n      return;\n    }\n    const submitData = {\n      participant_id: parseInt(formData.participant_id),\n      id_acudiente: formData.id_acudiente ? parseInt(formData.id_acudiente) : null,\n      mes: parseInt(formData.mes),\n      año: parseInt(formData.año),\n      monto: parseFloat(formData.valor),\n      estado: formData.status,\n      metodo_pago: formData.metodo_pago,\n      fecha_pago: formData.status === 'PAGADA' ? formData.fecha_pago : null,\n      observaciones: formData.observaciones || null\n    };\n    try {\n      if (modalData !== null && modalData !== void 0 && modalData.id) {\n        await dbService.updateMensualidad(modalData.id, submitData);\n      } else {\n        await dbService.createMensualidad(submitData);\n      }\n      closeModal();\n      const {\n        data\n      } = await dbService.getMensualidades();\n      setMensualidades(data || []);\n    } catch (err) {\n      console.error('Error saving payment:', err);\n      alert('Error al guardar la mensualidad: ' + (err.message || 'Error desconocido'));\n    }\n  }, [formData, modalData, closeModal]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      title: \"Mensualidades\",\n      subtitle: \"Cargando mensualidades...\",\n      loading: true,\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n      title: \"Mensualidades\",\n      subtitle: \"Error al cargar datos\",\n      loading: false,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 border border-red-200 rounded-lg p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-600\",\n            children: [\"Error loading payments: \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    title: \"Mensualidades\",\n    subtitle: \"Pagadas, pendientes y vencidas\",\n    extraActions: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => openModal(),\n      className: \"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), \"Nueva Mensualidad\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"px-4 md:px-6 py-4 md:py-6\",\n      children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n        filters: [{\n          type: 'custom',\n          name: 'periodo',\n          component: MonthYearSelect,\n          props: {\n            label: 'Período'\n          }\n        }, {\n          type: 'select',\n          name: 'sede',\n          label: 'Sede',\n          placeholder: 'Todas',\n          options: [{\n            value: 'all',\n            label: 'Todas'\n          }, ...sedes.map(s => ({\n            value: s.id.toString(),\n            label: s.nombre\n          }))]\n        }, {\n          type: 'select',\n          name: 'estado',\n          label: 'Estado',\n          placeholder: 'Todos',\n          options: [{\n            value: 'all',\n            label: 'Todos'\n          }, {\n            value: 'PAGADA',\n            label: 'Pagada'\n          }, {\n            value: 'PENDIENTE',\n            label: 'Pendiente'\n          }]\n        }, {\n          type: 'search',\n          name: 'busqueda',\n          label: 'Búsqueda por Documento',\n          placeholder: 'Número de documento...'\n        }],\n        values: filters,\n        onChange: setFilter,\n        onClear: clearFilters,\n        showClearButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(DataTable, {\n          data: paginatedMensualidades,\n          columns: [{\n            key: 'participant_name',\n            header: 'Participante',\n            render: row => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-900\",\n              children: row.participant_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 23\n            }, this)\n          }, {\n            key: 'acudiente_name',\n            header: 'Acudiente',\n            render: row => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-700\",\n              children: row.acudiente_name || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 23\n            }, this)\n          }, {\n            key: 'mes',\n            header: 'Mes',\n            render: row => getMonthLabel(row.mes)\n          }, {\n            key: 'valor',\n            header: 'Cantidad',\n            render: row => `$${(row.valor || row.monto || 0).toLocaleString()}`\n          }, {\n            key: 'metodo_pago',\n            header: 'Método de Pago',\n            render: row => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600\",\n              children: row.metodo_pago === 'TRANSFERENCIA' ? 'Transferencia' : row.metodo_pago === 'EFECTIVO' ? 'Efectivo' : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 23\n            }, this)\n          }, {\n            key: 'status',\n            header: 'Estado',\n            render: row => /*#__PURE__*/_jsxDEV(StatusToggle, {\n              currentStatus: row.status || row.estado,\n              statuses: [{\n                value: 'PAGADA',\n                label: 'PAGADA',\n                variant: 'success'\n              }, {\n                value: 'PENDIENTE',\n                label: 'PENDIENTE',\n                variant: 'danger'\n              }],\n              onChange: newStatus => toggleStatus(row.id, newStatus)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 23\n            }, this)\n          }, {\n            key: 'observaciones',\n            header: 'Observaciones',\n            render: row => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-600 truncate max-w-xs block\",\n              title: row.observaciones || '',\n              children: row.observaciones ? row.observaciones.length > 30 ? row.observaciones.substring(0, 30) + '...' : row.observaciones : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 23\n            }, this)\n          }, {\n            key: 'actions',\n            header: 'Acciones',\n            render: row => /*#__PURE__*/_jsxDEV(ActionDropdown, {\n              actions: [{\n                label: 'Ver',\n                icon: 'fas fa-eye',\n                onClick: () => openModal(row)\n              }, {\n                label: 'Editar',\n                icon: 'fas fa-edit',\n                onClick: () => openModal(row)\n              }]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 23\n            }, this)\n          }],\n          keyExtractor: row => row.id,\n          loading: loading,\n          emptyState: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8 text-gray-500\",\n            children: \"No hay mensualidades que mostrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n          currentPage: currentPage,\n          totalPages: totalPages,\n          onPageChange: setPage,\n          itemsPerPage: 10,\n          totalItems: filteredMensualidades.length,\n          showInfo: true,\n          className: \"mt-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormModal, {\n      isOpen: showModal,\n      onClose: closeModal,\n      title: modalData ? 'Ver/Editar Mensualidad' : 'Nueva Mensualidad',\n      onSubmit: handleSubmit,\n      submitLabel: \"Guardar\",\n      size: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n          label: \"Participante\",\n          name: \"participant_id\",\n          value: formData.participant_id,\n          onChange: value => handleFormDataChange('participant_id', value),\n          options: participants.map(p => ({\n            value: p.id,\n            label: `${p.nombres} ${p.apellidos} - ${p.documento}`\n          })),\n          placeholder: \"Seleccionar Participante\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n          label: \"Acudiente\",\n          name: \"id_acudiente\",\n          value: formData.id_acudiente,\n          onChange: value => handleFormDataChange('id_acudiente', value),\n          options: filteredAcudientes.map(a => ({\n            value: a.id_acudiente || a.id,\n            label: `${a.nombres} ${a.apellidos} - ${a.parentesco}`\n          })),\n          placeholder: \"Seleccionar Acudiente\",\n          disabled: !formData.participant_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n            label: \"Mes\",\n            name: \"mes\",\n            value: formData.mes,\n            onChange: value => handleFormDataChange('mes', value),\n            options: months.map(m => ({\n              value: m.value,\n              label: m.label\n            })),\n            placeholder: \"Seleccionar Mes\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n            label: \"A\\xF1o\",\n            name: \"a\\xF1o\",\n            value: formData.año,\n            onChange: value => handleFormDataChange('año', value),\n            options: years.map(y => ({\n              value: y,\n              label: y.toString()\n            })),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Valor\",\n          name: \"valor\",\n          type: \"number\",\n          value: formData.valor,\n          onChange: value => handleFormDataChange('valor', value),\n          placeholder: \"Valor\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n            label: \"Estado\",\n            name: \"status\",\n            value: formData.status,\n            onChange: value => handleFormDataChange('status', value),\n            options: [{\n              value: 'PAGADA',\n              label: 'Pagada'\n            }, {\n              value: 'PENDIENTE',\n              label: 'Pendiente'\n            }],\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n            label: \"M\\xE9todo de Pago\",\n            name: \"metodo_pago\",\n            value: formData.metodo_pago,\n            onChange: value => handleFormDataChange('metodo_pago', value),\n            options: [{\n              value: 'TRANSFERENCIA',\n              label: 'Transferencia'\n            }, {\n              value: 'EFECTIVO',\n              label: 'Efectivo'\n            }],\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }, this), formData.status === 'PAGADA' && /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Fecha de Pago\",\n          name: \"fecha_pago\",\n          type: \"date\",\n          value: formData.fecha_pago,\n          onChange: value => handleFormDataChange('fecha_pago', value),\n          required: formData.status === 'PAGADA'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormTextarea, {\n          label: \"Observaciones\",\n          name: \"observaciones\",\n          value: formData.observaciones,\n          onChange: value => handleFormDataChange('observaciones', value),\n          placeholder: \"Observaciones adicionales...\",\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 15\n        }, this), modalData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold text-gray-700 mb-2\",\n            children: \"Informaci\\xF3n Completa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"Participante:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: modalData.participant_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"Acudiente:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: modalData.acudiente_name || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"M\\xE9todo de Pago:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: modalData.metodo_pago === 'TRANSFERENCIA' ? 'Transferencia' : modalData.metodo_pago === 'EFECTIVO' ? 'Efectivo' : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"Fecha de Pago:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: modalData.fecha_pago ? new Date(modalData.fecha_pago).toLocaleDateString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 21\n            }, this), modalData.observaciones && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-span-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"Observaciones:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ml-2 mt-1 text-gray-700\",\n                children: modalData.observaciones\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n}, \"XQgXUx0IcrW3iUVGEgHDV/4bq3E=\", false, function () {\n  return [useFilters, useModal, usePagination];\n})), \"XQgXUx0IcrW3iUVGEgHDV/4bq3E=\", false, function () {\n  return [useFilters, useModal, usePagination];\n});\n_c3 = Finance;\nexport default Finance;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MonthYearSelect\");\n$RefreshReg$(_c2, \"Finance$React.memo\");\n$RefreshReg$(_c3, \"Finance\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","DashboardLayout","dbService","useFilters","usePagination","useModal","LoadingSpinner","FilterBar","DataTable","Pagination","StatusToggle","ActionDropdown","FormModal","FormInput","FormSelect","FormTextarea","validateMensualidadRelations","jsxDEV","_jsxDEV","MonthYearSelect","value","onChange","label","_s","months","years","Array","from","length","_","i","options","opts","forEach","year","month","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","e","target","map","option","_c","Finance","_s2","memo","_c2","mensualidades","setMensualidades","participants","setParticipants","sedes","setSedes","acudientes","setAcudientes","filteredAcudientes","setFilteredAcudientes","error","setError","loading","setLoading","formData","setFormData","participant_id","id_acudiente","mes","año","Date","getFullYear","valor","status","metodo_pago","fecha_pago","observaciones","filters","setFilter","clearFilters","periodo","sede","estado","busqueda","isOpen","showModal","openModal","openModalHook","closeModal","modalData","updateModalData","handleFormDataChange","field","prev","getMonthLabel","find","m","toString","loadData","console","log","mensRes","partsRes","sedesRes","acudRes","Promise","all","getMensualidades","getParticipantes","getSedes","getAcudientes","mensualidadesData","isArray","data","participantesData","sedesData","acudientesData","participantes","err","message","filtered","filter","a","id_participante","parseInt","filteredMensualidades","safeMensualidades","split","Number","sede_id","participant_documento","includes","acudiente_documento","currentPage","totalPages","paginatedData","paginatedMensualidades","setPage","mensualidad","participante_id","monto","toggleStatus","id","newStatus","updateMensualidad","handleSubmit","preventDefault","alert","relationsValidation","isValid","submitData","parseFloat","createMensualidad","title","subtitle","extraActions","onClick","type","name","component","props","placeholder","s","nombre","values","onClear","showClearButton","columns","key","header","render","row","participant_name","acudiente_name","toLocaleString","currentStatus","statuses","variant","substring","actions","icon","keyExtractor","emptyState","onPageChange","itemsPerPage","totalItems","showInfo","onClose","onSubmit","submitLabel","size","p","nombres","apellidos","documento","required","parentesco","disabled","y","rows","toLocaleDateString","_c3","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/pages/Dashboard/Finance.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService } from \"shared/services\";\nimport { useFilters, usePagination, useModal } from \"shared/hooks\";\nimport {\n  LoadingSpinner,\n  FilterBar,\n  DataTable,\n  Pagination,\n  StatusToggle,\n  ActionDropdown,\n  FormModal,\n  FormInput,\n  FormSelect,\n  FormTextarea\n} from \"components/UI\";\nimport { validateMensualidadRelations } from \"shared/utils/validationUtils\";\n\n// Custom component for combined month-year filter\nconst MonthYearSelect = ({ value, onChange, label = \"Período\" }) => {\n  const months = useMemo(() => [\n    { value: 1, label: 'Enero' },\n    { value: 2, label: 'Febrero' },\n    { value: 3, label: 'Marzo' },\n    { value: 4, label: 'Abril' },\n    { value: 5, label: 'Mayo' },\n    { value: 6, label: 'Junio' },\n    { value: 7, label: 'Julio' },\n    { value: 8, label: 'Agosto' },\n    { value: 9, label: 'Septiembre' },\n    { value: 10, label: 'Octubre' },\n    { value: 11, label: 'Noviembre' },\n    { value: 12, label: 'Diciembre' }\n  ], []);\n\n  const years = useMemo(() => Array.from({ length: 11 }, (_, i) => 2020 + i), []);\n\n  const options = useMemo(() => {\n    const opts = [{ value: 'all', label: 'Todos' }];\n    years.forEach(year => {\n      months.forEach(month => {\n        opts.push({\n          value: `${month.value}-${year}`,\n          label: `${month.label} ${year}`\n        });\n      });\n    });\n    return opts;\n  }, [months, years]);\n\n  return (\n    <div className=\"w-full\">\n      <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n        {label}\n      </label>\n      <select\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n      >\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nconst Finance = React.memo(() => {\n  const [mensualidades, setMensualidades] = useState([]);\n  const [participants, setParticipants] = useState([]);\n  const [sedes, setSedes] = useState([]);\n  const [acudientes, setAcudientes] = useState([]);\n  const [filteredAcudientes, setFilteredAcudientes] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [formData, setFormData] = useState({ \n    participant_id: '', \n    id_acudiente: '',\n    mes: '', \n    año: new Date().getFullYear(), \n    valor: '', \n    status: 'PAGADA',\n    metodo_pago: 'TRANSFERENCIA',\n    fecha_pago: '',\n    observaciones: ''\n  });\n  \n  // Use custom hooks\n  const { filters, setFilter, clearFilters } = useFilters({\n    periodo: 'all',\n    sede: 'all',\n    estado: 'all',\n    busqueda: ''\n  });\n  const { isOpen: showModal, openModal: openModalHook, closeModal, modalData, updateModalData } = useModal();\n\n  // Memoized form handlers to prevent unnecessary re-renders\n  const handleFormDataChange = useCallback((field, value) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  }, []);\n\n  const months = useMemo(() => [\n    { value: 1, label: 'Enero' },\n    { value: 2, label: 'Febrero' },\n    { value: 3, label: 'Marzo' },\n    { value: 4, label: 'Abril' },\n    { value: 5, label: 'Mayo' },\n    { value: 6, label: 'Junio' },\n    { value: 7, label: 'Julio' },\n    { value: 8, label: 'Agosto' },\n    { value: 9, label: 'Septiembre' },\n    { value: 10, label: 'Octubre' },\n    { value: 11, label: 'Noviembre' },\n    { value: 12, label: 'Diciembre' }\n  ], []);\n\n  const years = useMemo(() => Array.from({ length: 11 }, (_, i) => 2020 + i), []);\n\n  const getMonthLabel = useCallback((mes) => {\n    const month = months.find(m => m.value === mes);\n    return month ? month.label : mes.toString();\n  }, [months]);\n\n\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        console.log('🔄 Cargando datos financieros...');\n        \n        const [mensRes, partsRes, sedesRes, acudRes] = await Promise.all([\n          dbService.getMensualidades(),\n          dbService.getParticipantes(),\n          dbService.getSedes(),\n          dbService.getAcudientes()\n        ]);\n        \n        console.log('📊 Resultados:', { mensRes, partsRes, sedesRes, acudRes });\n        \n        // Asegurar que siempre sean arrays (API service ya extrae el nested data)\n        const mensualidadesData = Array.isArray(mensRes.data) ? mensRes.data : [];\n        const participantesData = Array.isArray(partsRes.data) ? partsRes.data : [];\n        const sedesData = Array.isArray(sedesRes.data) ? sedesRes.data : [];\n        const acudientesData = Array.isArray(acudRes.data) ? acudRes.data : [];\n        \n        setMensualidades(mensualidadesData);\n        setParticipants(participantesData);\n        setSedes(sedesData);\n        setAcudientes(acudientesData);\n        setFilteredAcudientes(acudientesData);\n\n        console.log('✅ Datos cargados:', {\n          mensualidades: mensualidadesData.length,\n          participantes: participantesData.length,\n          sedes: sedesData.length,\n          acudientes: acudientesData.length\n        });\n      } catch (err) {\n        console.error('❌ Error cargando datos financieros:', err);\n        setError(err.message || 'Error desconocido al cargar datos');\n        // Asegurar arrays vacíos en caso de error\n        setMensualidades([]);\n        setParticipants([]);\n        setSedes([]);\n        setAcudientes([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Filter acudientes when participant changes in form\n  useEffect(() => {\n    if (formData.participant_id) {\n      const filtered = acudientes.filter(a => a.id_participante === parseInt(formData.participant_id));\n      setFilteredAcudientes(filtered);\n      // Reset acudiente selection if current selection is not valid for new participant\n      if (formData.id_acudiente && !filtered.find(a => a.id_acudiente === parseInt(formData.id_acudiente))) {\n        setFormData(prev => ({ ...prev, id_acudiente: '' }));\n      }\n    } else {\n      setFilteredAcudientes(acudientes);\n    }\n  }, [formData.participant_id, acudientes, formData.id_acudiente]);\n\n  const filteredMensualidades = useMemo(() => {\n    // Asegurar que mensualidades siempre sea un array\n    const safeMensualidades = Array.isArray(mensualidades) ? mensualidades : [];\n    let filtered = safeMensualidades;\n\n    if (filters.periodo !== 'all') {\n      const [mes, año] = filters.periodo.split('-').map(Number);\n      filtered = filtered.filter(m => m.mes === mes && m.año === año);\n    }\n    if (filters.sede !== 'all') {\n      filtered = filtered.filter(m => m.sede_id === parseInt(filters.sede));\n    }\n    if (filters.estado !== 'all') {\n      filtered = filtered.filter(m => m.estado === filters.estado);\n    }\n    if (filters.busqueda) {\n      filtered = filtered.filter(m =>\n        (m.participant_documento || '').includes(filters.busqueda) ||\n        (m.acudiente_documento || '').includes(filters.busqueda)\n      );\n    }\n    return filtered;\n  }, [mensualidades, filters]);\n\n  // Use pagination hook\n  const {\n    currentPage,\n    totalPages,\n    paginatedData: paginatedMensualidades,\n    setPage\n  } = usePagination(filteredMensualidades, 10);\n\n  const openModal = useCallback((mensualidad = null) => {\n    if (mensualidad) {\n      // Pre-fill form with existing data\n      setFormData({\n        participant_id: mensualidad.participante_id || mensualidad.participant_id,\n        id_acudiente: mensualidad.id_acudiente || '',\n        mes: mensualidad.mes,\n        año: mensualidad.año,\n        valor: mensualidad.valor || mensualidad.monto,\n        status: mensualidad.estado || mensualidad.status,\n        metodo_pago: mensualidad.metodo_pago || 'TRANSFERENCIA',\n        fecha_pago: mensualidad.fecha_pago || '',\n        observaciones: mensualidad.observaciones || ''\n      });\n      updateModalData(mensualidad);\n    } else {\n      setFormData({ \n        participant_id: '', \n        id_acudiente: '',\n        mes: '', \n        año: new Date().getFullYear(), \n        valor: '', \n        status: 'PAGADA',\n        metodo_pago: 'TRANSFERENCIA',\n        fecha_pago: '',\n        observaciones: ''\n      });\n      updateModalData(null);\n    }\n    openModalHook();\n  }, [openModalHook, updateModalData]);\n\n  const toggleStatus = useCallback(async (id, newStatus) => {\n    try {\n      await dbService.updateMensualidad(id, { estado: newStatus });\n      // Refresh data\n      const { data } = await dbService.getMensualidades();\n      setMensualidades(data || []);\n    } catch (err) {\n      console.error('Error updating status:', err);\n      // Optionally show error toast\n    }\n  }, []);\n\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    \n    // Validate fecha_pago is required when status is PAGADA\n    if (formData.status === 'PAGADA' && !formData.fecha_pago) {\n      alert('La fecha de pago es requerida cuando el estado es PAGADA');\n      return;\n    }\n    \n    // Validate that participante and acudiente exist (if acudiente is provided)\n    try {\n      if (formData.id_acudiente) {\n        const relationsValidation = await validateMensualidadRelations(\n          parseInt(formData.participant_id),\n          parseInt(formData.id_acudiente)\n        );\n        \n        if (!relationsValidation.isValid) {\n          alert(relationsValidation.error);\n          return;\n        }\n      }\n    } catch (err) {\n      console.error('Error validating relations:', err);\n      alert('Error al validar las relaciones: ' + (err.message || 'Error desconocido'));\n      return;\n    }\n    \n    const submitData = {\n      participant_id: parseInt(formData.participant_id),\n      id_acudiente: formData.id_acudiente ? parseInt(formData.id_acudiente) : null,\n      mes: parseInt(formData.mes),\n      año: parseInt(formData.año),\n      monto: parseFloat(formData.valor),\n      estado: formData.status,\n      metodo_pago: formData.metodo_pago,\n      fecha_pago: formData.status === 'PAGADA' ? formData.fecha_pago : null,\n      observaciones: formData.observaciones || null\n    };\n    \n    try {\n      if (modalData?.id) {\n        await dbService.updateMensualidad(modalData.id, submitData);\n      } else {\n        await dbService.createMensualidad(submitData);\n      }\n      closeModal();\n      const { data } = await dbService.getMensualidades();\n      setMensualidades(data || []);\n    } catch (err) {\n      console.error('Error saving payment:', err);\n      alert('Error al guardar la mensualidad: ' + (err.message || 'Error desconocido'));\n    }\n  }, [formData, modalData, closeModal]);\n\n  if (loading) {\n    return (\n      <DashboardLayout\n        title=\"Mensualidades\"\n        subtitle=\"Cargando mensualidades...\"\n        loading={true}\n      >\n        <LoadingSpinner />\n      </DashboardLayout>\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout\n        title=\"Mensualidades\"\n        subtitle=\"Error al cargar datos\"\n        loading={false}\n      >\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading payments: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout\n      title=\"Mensualidades\"\n      subtitle=\"Pagadas, pendientes y vencidas\"\n      extraActions={\n        <button onClick={() => openModal()} className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\">\n          <i className=\"fas fa-plus mr-2\"></i>Nueva Mensualidad\n        </button>\n      }\n    >\n      <section className=\"px-4 md:px-6 py-4 md:py-6\">\n            <FilterBar\n              filters={[\n                {\n                  type: 'custom',\n                  name: 'periodo',\n                  component: MonthYearSelect,\n                  props: { label: 'Período' }\n                },\n                {\n                  type: 'select',\n                  name: 'sede',\n                  label: 'Sede',\n                  placeholder: 'Todas',\n                  options: [\n                    { value: 'all', label: 'Todas' },\n                    ...sedes.map(s => ({ value: s.id.toString(), label: s.nombre }))\n                  ]\n                },\n                {\n                  type: 'select',\n                  name: 'estado',\n                  label: 'Estado',\n                  placeholder: 'Todos',\n                  options: [\n                    { value: 'all', label: 'Todos' },\n                    { value: 'PAGADA', label: 'Pagada' },\n                    { value: 'PENDIENTE', label: 'Pendiente' }\n                  ]\n                },\n                {\n                  type: 'search',\n                  name: 'busqueda',\n                  label: 'Búsqueda por Documento',\n                  placeholder: 'Número de documento...'\n                }\n              ]}\n              values={filters}\n              onChange={setFilter}\n              onClear={clearFilters}\n              showClearButton={true}\n            />\n            <div className=\"mt-6\">\n              <DataTable\n                data={paginatedMensualidades}\n                columns={[\n                  {\n                    key: 'participant_name',\n                    header: 'Participante',\n                    render: (row) => (\n                      <span className=\"font-medium text-gray-900\">{row.participant_name}</span>\n                    )\n                  },\n                  {\n                    key: 'acudiente_name',\n                    header: 'Acudiente',\n                    render: (row) => (\n                      <span className=\"text-gray-700\">{row.acudiente_name || 'N/A'}</span>\n                    )\n                  },\n                  {\n                    key: 'mes',\n                    header: 'Mes',\n                    render: (row) => getMonthLabel(row.mes)\n                  },\n                  {\n                    key: 'valor',\n                    header: 'Cantidad',\n                    render: (row) => `$${(row.valor || row.monto || 0).toLocaleString()}`\n                  },\n                  {\n                    key: 'metodo_pago',\n                    header: 'Método de Pago',\n                    render: (row) => (\n                      <span className=\"text-sm text-gray-600\">\n                        {row.metodo_pago === 'TRANSFERENCIA' ? 'Transferencia' : \n                         row.metodo_pago === 'EFECTIVO' ? 'Efectivo' : 'N/A'}\n                      </span>\n                    )\n                  },\n                  {\n                    key: 'status',\n                    header: 'Estado',\n                    render: (row) => (\n                      <StatusToggle\n                        currentStatus={row.status || row.estado}\n                        statuses={[\n                          { value: 'PAGADA', label: 'PAGADA', variant: 'success' },\n                          { value: 'PENDIENTE', label: 'PENDIENTE', variant: 'danger' }\n                        ]}\n                        onChange={(newStatus) => toggleStatus(row.id, newStatus)}\n                      />\n                    )\n                  },\n                  {\n                    key: 'observaciones',\n                    header: 'Observaciones',\n                    render: (row) => (\n                      <span className=\"text-sm text-gray-600 truncate max-w-xs block\" title={row.observaciones || ''}>\n                        {row.observaciones ? \n                          (row.observaciones.length > 30 ? \n                            row.observaciones.substring(0, 30) + '...' : \n                            row.observaciones) : \n                          '-'}\n                      </span>\n                    )\n                  },\n                  {\n                    key: 'actions',\n                    header: 'Acciones',\n                    render: (row) => (\n                      <ActionDropdown\n                        actions={[\n                          {\n                            label: 'Ver',\n                            icon: 'fas fa-eye',\n                            onClick: () => openModal(row)\n                          },\n                          {\n                            label: 'Editar',\n                            icon: 'fas fa-edit',\n                            onClick: () => openModal(row)\n                          }\n                        ]}\n                      />\n                    )\n                  }\n                ]}\n                keyExtractor={(row) => row.id}\n                loading={loading}\n                emptyState={\n                  <div className=\"text-center py-8 text-gray-500\">\n                    No hay mensualidades que mostrar\n                  </div>\n                }\n              />\n              {totalPages > 1 && (\n                <Pagination\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  onPageChange={setPage}\n                  itemsPerPage={10}\n                  totalItems={filteredMensualidades.length}\n                  showInfo={true}\n                  className=\"mt-4\"\n                />\n              )}\n            </div>\n          </section>\n\n          {/* Modal */}\n          <FormModal\n            isOpen={showModal}\n            onClose={closeModal}\n            title={modalData ? 'Ver/Editar Mensualidad' : 'Nueva Mensualidad'}\n            onSubmit={handleSubmit}\n            submitLabel=\"Guardar\"\n            size=\"lg\"\n          >\n            <div className=\"space-y-4\">\n              <FormSelect\n                label=\"Participante\"\n                name=\"participant_id\"\n                value={formData.participant_id}\n                onChange={(value) => handleFormDataChange('participant_id', value)}\n                options={participants.map(p => ({\n                  value: p.id,\n                  label: `${p.nombres} ${p.apellidos} - ${p.documento}`\n                }))}\n                placeholder=\"Seleccionar Participante\"\n                required\n              />\n              \n              <FormSelect\n                label=\"Acudiente\"\n                name=\"id_acudiente\"\n                value={formData.id_acudiente}\n                onChange={(value) => handleFormDataChange('id_acudiente', value)}\n                options={filteredAcudientes.map(a => ({\n                  value: a.id_acudiente || a.id,\n                  label: `${a.nombres} ${a.apellidos} - ${a.parentesco}`\n                }))}\n                placeholder=\"Seleccionar Acudiente\"\n                disabled={!formData.participant_id}\n              />\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormSelect\n                  label=\"Mes\"\n                  name=\"mes\"\n                  value={formData.mes}\n                  onChange={(value) => handleFormDataChange('mes', value)}\n                  options={months.map(m => ({\n                    value: m.value,\n                    label: m.label\n                  }))}\n                  placeholder=\"Seleccionar Mes\"\n                  required\n                />\n                \n                <FormSelect\n                  label=\"Año\"\n                  name=\"año\"\n                  value={formData.año}\n                  onChange={(value) => handleFormDataChange('año', value)}\n                  options={years.map(y => ({\n                    value: y,\n                    label: y.toString()\n                  }))}\n                  required\n                />\n              </div>\n              \n              <FormInput\n                label=\"Valor\"\n                name=\"valor\"\n                type=\"number\"\n                value={formData.valor}\n                onChange={(value) => handleFormDataChange('valor', value)}\n                placeholder=\"Valor\"\n                required\n              />\n              \n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormSelect\n                  label=\"Estado\"\n                  name=\"status\"\n                  value={formData.status}\n                  onChange={(value) => handleFormDataChange('status', value)}\n                  options={[\n                    { value: 'PAGADA', label: 'Pagada' },\n                    { value: 'PENDIENTE', label: 'Pendiente' }\n                  ]}\n                  required\n                />\n                \n                <FormSelect\n                  label=\"Método de Pago\"\n                  name=\"metodo_pago\"\n                  value={formData.metodo_pago}\n                  onChange={(value) => handleFormDataChange('metodo_pago', value)}\n                  options={[\n                    { value: 'TRANSFERENCIA', label: 'Transferencia' },\n                    { value: 'EFECTIVO', label: 'Efectivo' }\n                  ]}\n                  required\n                />\n              </div>\n              \n              {formData.status === 'PAGADA' && (\n                <FormInput\n                  label=\"Fecha de Pago\"\n                  name=\"fecha_pago\"\n                  type=\"date\"\n                  value={formData.fecha_pago}\n                  onChange={(value) => handleFormDataChange('fecha_pago', value)}\n                  required={formData.status === 'PAGADA'}\n                />\n              )}\n              \n              <FormTextarea\n                label=\"Observaciones\"\n                name=\"observaciones\"\n                value={formData.observaciones}\n                onChange={(value) => handleFormDataChange('observaciones', value)}\n                placeholder=\"Observaciones adicionales...\"\n                rows={3}\n              />\n              \n              {modalData && (\n                <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n                  <h4 className=\"font-semibold text-gray-700 mb-2\">Información Completa</h4>\n                  <div className=\"grid grid-cols-2 gap-2 text-sm\">\n                    <div>\n                      <span className=\"text-gray-600\">Participante:</span>\n                      <span className=\"ml-2 font-medium\">{modalData.participant_name}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Acudiente:</span>\n                      <span className=\"ml-2 font-medium\">{modalData.acudiente_name || 'N/A'}</span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Método de Pago:</span>\n                      <span className=\"ml-2 font-medium\">\n                        {modalData.metodo_pago === 'TRANSFERENCIA' ? 'Transferencia' : \n                         modalData.metodo_pago === 'EFECTIVO' ? 'Efectivo' : 'N/A'}\n                      </span>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Fecha de Pago:</span>\n                      <span className=\"ml-2 font-medium\">\n                        {modalData.fecha_pago ? new Date(modalData.fecha_pago).toLocaleDateString() : 'N/A'}\n                      </span>\n                    </div>\n                    {modalData.observaciones && (\n                      <div className=\"col-span-2\">\n                        <span className=\"text-gray-600\">Observaciones:</span>\n                        <p className=\"ml-2 mt-1 text-gray-700\">{modalData.observaciones}</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          </FormModal>\n        </DashboardLayout>\n      );\n    });\n\nexport default Finance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}