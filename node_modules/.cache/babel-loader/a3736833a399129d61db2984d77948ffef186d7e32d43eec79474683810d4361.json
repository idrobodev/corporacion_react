{"ast":null,"code":"import _objectSpread from\"/Users/todoporunalma/Desktop/corporacion_react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import FormModal from'../../UI/Modal/FormModal';import FormInput from'../../UI/Form/FormInput';import FormSelect from'../../UI/Form/FormSelect';import FormTextarea from'../../UI/Form/FormTextarea';import FormGroup from'../../UI/Form/FormGroup';/**\n * EditFormModal component - Composite modal for editing entities\n * Combines FormModal with common edit patterns including form state management\n *\n * @param {Object} props\n * @param {boolean} props.isOpen - Modal open state\n * @param {Function} props.onClose - Close handler\n * @param {string} props.title - Modal title\n * @param {Object} props.initialData - Initial form data for editing\n * @param {Function} props.onSubmit - Submit handler (receives form data)\n * @param {React.ReactNode} props.children - Form fields (receives formData and handleChange)\n * @param {Array} props.fields - Field configuration array (alternative to children)\n * @param {string} props.submitLabel - Submit button label\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Modal size\n * @param {Function} props.validate - Optional validation function\n * @param {string} props.className - Additional CSS classes\n */import{jsx as _jsx}from\"react/jsx-runtime\";const EditFormModal=_ref=>{let{isOpen,onClose,title,initialData,onSubmit,children,fields,submitLabel='Guardar Cambios',size='lg',validate,className=''}=_ref;const[formData,setFormData]=useState(initialData||{});const[errors,setErrors]=useState({});const[loading,setLoading]=useState(false);const[submitError,setSubmitError]=useState('');// Update form data when initialData changes\nuseEffect(()=>{if(initialData){setFormData(initialData);setErrors({});setSubmitError('');}},[initialData,isOpen]);const handleChange=(name,value)=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// Clear field error when user starts typing\nif(errors[name]){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:''}));}};const handleSubmit=async e=>{e.preventDefault();setSubmitError('');// Run validation if provided\nif(validate){const validationErrors=validate(formData);if(Object.keys(validationErrors).length>0){setErrors(validationErrors);return;}}setLoading(true);try{await onSubmit(formData);if(typeof onClose==='function'){onClose();}else{console.error('onClose is not a function in EditFormModal');}// Reset form after successful submission\nsetFormData(initialData||{});setErrors({});}catch(error){setSubmitError(error.message||'Error al guardar los cambios');}finally{setLoading(false);}};const handleClose=()=>{if(!loading){setFormData(initialData||{});setErrors({});setSubmitError('');if(typeof onClose==='function'){onClose();}else{console.error('onClose is not a function in EditFormModal');}}};// Function to render form fields from configuration\nconst renderFields=()=>{if(!fields||!Array.isArray(fields))return null;return/*#__PURE__*/_jsx(FormGroup,{columns:2,children:fields.map((field,index)=>{const fieldProps=_objectSpread({key:field.name||index,name:field.name,label:field.label,value:formData[field.name]||'',onChange:value=>handleChange(field.name,value),error:errors[field.name],required:field.required,placeholder:field.placeholder,disabled:field.disabled},field);switch(field.type){case'select':return/*#__PURE__*/_jsx(FormSelect,_objectSpread(_objectSpread({},fieldProps),{},{options:field.options||[]}));case'textarea':return/*#__PURE__*/_jsx(FormTextarea,_objectSpread({},fieldProps));case'text':case'email':case'password':case'number':case'tel':case'date':default:return/*#__PURE__*/_jsx(FormInput,_objectSpread(_objectSpread({},fieldProps),{},{type:field.type||'text'}));}})});};return/*#__PURE__*/_jsx(FormModal,{isOpen:isOpen,onClose:handleClose,title:title,onSubmit:handleSubmit,loading:loading,error:submitError,submitLabel:submitLabel,size:size,className:className,children:fields?renderFields():typeof children==='function'?children({formData,handleChange,errors}):React.Children.map(children,child=>/*#__PURE__*/React.isValidElement(child)?/*#__PURE__*/React.cloneElement(child,{formData,handleChange,errors}):child)});};export default EditFormModal;","map":{"version":3,"names":["React","useState","useEffect","FormModal","FormInput","FormSelect","FormTextarea","FormGroup","jsx","_jsx","EditFormModal","_ref","isOpen","onClose","title","initialData","onSubmit","children","fields","submitLabel","size","validate","className","formData","setFormData","errors","setErrors","loading","setLoading","submitError","setSubmitError","handleChange","name","value","prev","_objectSpread","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","console","error","message","handleClose","renderFields","Array","isArray","columns","map","field","index","fieldProps","key","label","onChange","required","placeholder","disabled","type","options","Children","child","isValidElement","cloneElement"],"sources":["/Users/todoporunalma/Desktop/corporacion_react/src/components/common/CRUDModals/EditFormModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport FormModal from '../../UI/Modal/FormModal';\nimport FormInput from '../../UI/Form/FormInput';\nimport FormSelect from '../../UI/Form/FormSelect';\nimport FormTextarea from '../../UI/Form/FormTextarea';\nimport FormGroup from '../../UI/Form/FormGroup';\n\n/**\n * EditFormModal component - Composite modal for editing entities\n * Combines FormModal with common edit patterns including form state management\n *\n * @param {Object} props\n * @param {boolean} props.isOpen - Modal open state\n * @param {Function} props.onClose - Close handler\n * @param {string} props.title - Modal title\n * @param {Object} props.initialData - Initial form data for editing\n * @param {Function} props.onSubmit - Submit handler (receives form data)\n * @param {React.ReactNode} props.children - Form fields (receives formData and handleChange)\n * @param {Array} props.fields - Field configuration array (alternative to children)\n * @param {string} props.submitLabel - Submit button label\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Modal size\n * @param {Function} props.validate - Optional validation function\n * @param {string} props.className - Additional CSS classes\n */\nconst EditFormModal = ({\n  isOpen,\n  onClose,\n  title,\n  initialData,\n  onSubmit,\n  children,\n  fields,\n  submitLabel = 'Guardar Cambios',\n  size = 'lg',\n  validate,\n  className = ''\n}) => {\n  const [formData, setFormData] = useState(initialData || {});\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n\n  // Update form data when initialData changes\n  useEffect(() => {\n    if (initialData) {\n      setFormData(initialData);\n      setErrors({});\n      setSubmitError('');\n    }\n  }, [initialData, isOpen]);\n\n  const handleChange = (name, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear field error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitError('');\n\n    // Run validation if provided\n    if (validate) {\n      const validationErrors = validate(formData);\n      if (Object.keys(validationErrors).length > 0) {\n        setErrors(validationErrors);\n        return;\n      }\n    }\n\n    setLoading(true);\n    try {\n      await onSubmit(formData);\n      if (typeof onClose === 'function') {\n        onClose();\n      } else {\n        console.error('onClose is not a function in EditFormModal');\n      }\n      // Reset form after successful submission\n      setFormData(initialData || {});\n      setErrors({});\n    } catch (error) {\n      setSubmitError(error.message || 'Error al guardar los cambios');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    if (!loading) {\n      setFormData(initialData || {});\n      setErrors({});\n      setSubmitError('');\n      if (typeof onClose === 'function') {\n        onClose();\n      } else {\n        console.error('onClose is not a function in EditFormModal');\n      }\n    }\n  };\n\n  // Function to render form fields from configuration\n  const renderFields = () => {\n    if (!fields || !Array.isArray(fields)) return null;\n\n    return (\n      <FormGroup columns={2}>\n        {fields.map((field, index) => {\n          const fieldProps = {\n            key: field.name || index,\n            name: field.name,\n            label: field.label,\n            value: formData[field.name] || '',\n            onChange: (value) => handleChange(field.name, value),\n            error: errors[field.name],\n            required: field.required,\n            placeholder: field.placeholder,\n            disabled: field.disabled,\n            ...field\n          };\n\n          switch (field.type) {\n            case 'select':\n              return (\n                <FormSelect\n                  {...fieldProps}\n                  options={field.options || []}\n                />\n              );\n            case 'textarea':\n              return (\n                <FormTextarea\n                  {...fieldProps}\n                />\n              );\n            case 'text':\n            case 'email':\n            case 'password':\n            case 'number':\n            case 'tel':\n            case 'date':\n            default:\n              return (\n                <FormInput\n                  {...fieldProps}\n                  type={field.type || 'text'}\n                />\n              );\n          }\n        })}\n      </FormGroup>\n    );\n  };\n\n  return (\n    <FormModal\n      isOpen={isOpen}\n      onClose={handleClose}\n      title={title}\n      onSubmit={handleSubmit}\n      loading={loading}\n      error={submitError}\n      submitLabel={submitLabel}\n      size={size}\n      className={className}\n    >\n      {fields ? renderFields() : (\n        typeof children === 'function'\n          ? children({ formData, handleChange, errors })\n          : React.Children.map(children, child =>\n              React.isValidElement(child)\n                ? React.cloneElement(child, { formData, handleChange, errors })\n                : child\n            )\n      )}\n    </FormModal>\n  );\n};\n\nEditFormModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  initialData: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node\n  ]),\n  fields: PropTypes.array,\n  submitLabel: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  validate: PropTypes.func,\n  className: PropTypes.string\n};\n\nexport default EditFormModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}