{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Card/StatsGrid.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StatCard from './StatCard';\n\n/**\n * StatsGrid component for displaying multiple StatCards in a responsive grid\n * \n * @param {Object} props\n * @param {Array} props.stats - Array of stat objects with StatCard props\n * @param {2|3|4|5} props.columns - Number of columns on desktop\n * @param {'sm'|'md'|'lg'} props.gap - Gap between cards\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatsGrid = ({\n  stats,\n  columns = 4,\n  gap = 'md',\n  className = ''\n}) => {\n  // Gap styles - responsive\n  const gapStyles = {\n    sm: 'gap-3 md:gap-4',\n    md: 'gap-4 md:gap-6',\n    lg: 'gap-6 md:gap-8'\n  };\n\n  // Column styles for different breakpoints\n  const columnStyles = {\n    2: 'md:grid-cols-2',\n    3: 'md:grid-cols-2 lg:grid-cols-3',\n    4: 'md:grid-cols-2 lg:grid-cols-4',\n    5: 'md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5'\n  };\n  const gridClasses = `\n    grid\n    grid-cols-1\n    ${columnStyles[columns]}\n    ${gapStyles[gap]}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: gridClasses,\n    children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(StatCard, {\n      ...stat\n    }, stat.key || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = StatsGrid;\nStatsGrid.propTypes = {\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    icon: PropTypes.string.isRequired,\n    color: PropTypes.oneOf(['blue', 'green', 'red', 'purple', 'orange', 'gray']),\n    subtitle: PropTypes.string,\n    trend: PropTypes.shape({\n      value: PropTypes.number.isRequired,\n      isPositive: PropTypes.bool.isRequired\n    }),\n    onClick: PropTypes.func,\n    loading: PropTypes.bool,\n    key: PropTypes.string\n  })).isRequired,\n  columns: PropTypes.oneOf([2, 3, 4, 5]),\n  gap: PropTypes.oneOf(['sm', 'md', 'lg']),\n  className: PropTypes.string\n};\nexport default StatsGrid;\nvar _c;\n$RefreshReg$(_c, \"StatsGrid\");","map":{"version":3,"names":["React","PropTypes","StatCard","jsxDEV","_jsxDEV","StatsGrid","stats","columns","gap","className","gapStyles","sm","md","lg","columnStyles","gridClasses","trim","replace","children","map","stat","index","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","shape","title","string","isRequired","value","oneOfType","number","icon","color","oneOf","subtitle","trend","isPositive","bool","onClick","func","loading","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Card/StatsGrid.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport StatCard from './StatCard';\n\n/**\n * StatsGrid component for displaying multiple StatCards in a responsive grid\n * \n * @param {Object} props\n * @param {Array} props.stats - Array of stat objects with StatCard props\n * @param {2|3|4|5} props.columns - Number of columns on desktop\n * @param {'sm'|'md'|'lg'} props.gap - Gap between cards\n * @param {string} props.className - Additional CSS classes\n */\nconst StatsGrid = ({\n  stats,\n  columns = 4,\n  gap = 'md',\n  className = ''\n}) => {\n  // Gap styles - responsive\n  const gapStyles = {\n    sm: 'gap-3 md:gap-4',\n    md: 'gap-4 md:gap-6',\n    lg: 'gap-6 md:gap-8'\n  };\n\n  // Column styles for different breakpoints\n  const columnStyles = {\n    2: 'md:grid-cols-2',\n    3: 'md:grid-cols-2 lg:grid-cols-3',\n    4: 'md:grid-cols-2 lg:grid-cols-4',\n    5: 'md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5'\n  };\n\n  const gridClasses = `\n    grid\n    grid-cols-1\n    ${columnStyles[columns]}\n    ${gapStyles[gap]}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div className={gridClasses}>\n      {stats.map((stat, index) => (\n        <StatCard\n          key={stat.key || index}\n          {...stat}\n        />\n      ))}\n    </div>\n  );\n};\n\nStatsGrid.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      icon: PropTypes.string.isRequired,\n      color: PropTypes.oneOf(['blue', 'green', 'red', 'purple', 'orange', 'gray']),\n      subtitle: PropTypes.string,\n      trend: PropTypes.shape({\n        value: PropTypes.number.isRequired,\n        isPositive: PropTypes.bool.isRequired\n      }),\n      onClick: PropTypes.func,\n      loading: PropTypes.bool,\n      key: PropTypes.string\n    })\n  ).isRequired,\n  columns: PropTypes.oneOf([2, 3, 4, 5]),\n  gap: PropTypes.oneOf(['sm', 'md', 'lg']),\n  className: PropTypes.string\n};\n\nexport default StatsGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}