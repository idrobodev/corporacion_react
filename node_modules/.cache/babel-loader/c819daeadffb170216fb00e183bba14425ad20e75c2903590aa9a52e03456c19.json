{"ast":null,"code":"import _objectSpread from\"/Users/todoporunalma/Desktop/coptua/corporacion_react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect,useMemo}from'react';import{dbService}from'../services/database';import useDebouncedSearch from'./useDebouncedSearch';// Hook personalizado para manejar datos financieros\nexport const useFinanceData=()=>{const[state,setState]=useState({mensualidades:[],participants:[],sedes:[],error:null,loading:true});const[filters,setFilters]=useState({month:'all',sede:'all',year:'all'});const[searchTerm,setSearchTerm]=useState('');const[debouncedSearch]=useDebouncedSearch(searchTerm);// Cargar datos iniciales\nuseEffect(()=>{const loadData=async()=>{try{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true}));const[mensRes,partsRes,sedesRes]=await Promise.all([dbService.getMensualidades(),dbService.getParticipantes(),dbService.getSedes()]);setState({mensualidades:mensRes.data||[],participants:partsRes.data||[],sedes:sedesRes.data||[],error:null,loading:false});}catch(err){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:err.message,loading:false}));}};loadData();},[]);// Datos filtrados\nconst filteredData=useMemo(()=>{let filtered=state.mensualidades;if(filters.month!=='all'){filtered=filtered.filter(m=>m.mes===parseInt(filters.month));}if(filters.sede!=='all'){filtered=filtered.filter(m=>m.sede_id===parseInt(filters.sede));}if(filters.year!=='all'){filtered=filtered.filter(m=>m.año===parseInt(filters.year));}if(debouncedSearch){const searchLower=debouncedSearch.toLowerCase();filtered=filtered.filter(m=>(m.participant_name||'').toLowerCase().includes(searchLower));}return filtered;},[state.mensualidades,filters,debouncedSearch]);// Funciones de actualización\nconst updateFilters=newFilters=>{setFilters(prev=>_objectSpread(_objectSpread({},prev),newFilters));};const refreshData=async()=>{try{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true}));const{data}=await dbService.getMensualidades();setState(prev=>_objectSpread(_objectSpread({},prev),{},{mensualidades:data||[],loading:false}));}catch(err){setState(prev=>_objectSpread(_objectSpread({},prev),{},{error:err.message,loading:false}));}};return _objectSpread(_objectSpread({},state),{},{filters,searchTerm,filteredData,setSearchTerm,updateFilters,refreshData});};export default useFinanceData;","map":{"version":3,"names":["useState","useEffect","useMemo","dbService","useDebouncedSearch","useFinanceData","state","setState","mensualidades","participants","sedes","error","loading","filters","setFilters","month","sede","year","searchTerm","setSearchTerm","debouncedSearch","loadData","prev","_objectSpread","mensRes","partsRes","sedesRes","Promise","all","getMensualidades","getParticipantes","getSedes","data","err","message","filteredData","filtered","filter","m","mes","parseInt","sede_id","año","searchLower","toLowerCase","participant_name","includes","updateFilters","newFilters","refreshData"],"sources":["/Users/todoporunalma/Desktop/coptua/corporacion_react/src/shared/hooks/useFinanceData.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport { dbService } from '../services/database';\nimport useDebouncedSearch from './useDebouncedSearch';\n\n// Hook personalizado para manejar datos financieros\nexport const useFinanceData = () => {\n  const [state, setState] = useState({\n    mensualidades: [],\n    participants: [],\n    sedes: [],\n    error: null,\n    loading: true\n  });\n\n  const [filters, setFilters] = useState({ \n    month: 'all', \n    sede: 'all', \n    year: 'all' \n  });\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [debouncedSearch] = useDebouncedSearch(searchTerm);\n\n  // Cargar datos iniciales\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setState(prev => ({ ...prev, loading: true }));\n        \n        const [mensRes, partsRes, sedesRes] = await Promise.all([\n          dbService.getMensualidades(),\n          dbService.getParticipantes(),\n          dbService.getSedes()\n        ]);\n\n        setState({\n          mensualidades: mensRes.data || [],\n          participants: partsRes.data || [],\n          sedes: sedesRes.data || [],\n          error: null,\n          loading: false\n        });\n      } catch (err) {\n        setState(prev => ({\n          ...prev,\n          error: err.message,\n          loading: false\n        }));\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Datos filtrados\n  const filteredData = useMemo(() => {\n    let filtered = state.mensualidades;\n\n    if (filters.month !== 'all') {\n      filtered = filtered.filter(m => m.mes === parseInt(filters.month));\n    }\n    \n    if (filters.sede !== 'all') {\n      filtered = filtered.filter(m => m.sede_id === parseInt(filters.sede));\n    }\n    \n    if (filters.year !== 'all') {\n      filtered = filtered.filter(m => m.año === parseInt(filters.year));\n    }\n    \n    if (debouncedSearch) {\n      const searchLower = debouncedSearch.toLowerCase();\n      filtered = filtered.filter(m =>\n        (m.participant_name || '').toLowerCase().includes(searchLower)\n      );\n    }\n\n    return filtered;\n  }, [state.mensualidades, filters, debouncedSearch]);\n\n  // Funciones de actualización\n  const updateFilters = (newFilters) => {\n    setFilters(prev => ({ ...prev, ...newFilters }));\n  };\n\n  const refreshData = async () => {\n    try {\n      setState(prev => ({ ...prev, loading: true }));\n      const { data } = await dbService.getMensualidades();\n      setState(prev => ({\n        ...prev,\n        mensualidades: data || [],\n        loading: false\n      }));\n    } catch (err) {\n      setState(prev => ({\n        ...prev,\n        error: err.message,\n        loading: false\n      }));\n    }\n  };\n\n  return {\n    ...state,\n    filters,\n    searchTerm,\n    filteredData,\n    setSearchTerm,\n    updateFilters,\n    refreshData\n  };\n};\n\nexport default useFinanceData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}