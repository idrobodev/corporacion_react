{"ast":null,"code":"import _objectSpread from\"/Users/todoporunalma/Desktop/corporacion_react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useCallback,useMemo,useEffect,useRef}from'react';import{formatosApi}from'shared/services/formatosApi';import{dbService,ROLES}from'shared/services';import{useDebouncedSearch}from'shared/hooks';const useFileManager=()=>{// Basic state\nconst[currentPath,setCurrentPath]=useState('');const[files,setFiles]=useState([]);const[folders,setFolders]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[uploading,setUploading]=useState(false);const[isAdmin,setIsAdmin]=useState(false);const[notifications,setNotifications]=useState([]);// Ref to prevent double loading in strict mode\nconst hasLoadedRef=useRef(false);// Additional state for enhanced functionality\nconst[searchTerm,setSearchTerm]=useState('');const debouncedSearchTerm=useDebouncedSearch(searchTerm,300);const[newFolderName,setNewFolderName]=useState('');const[renamingFolder,setRenamingFolder]=useState(null);// {folderName, newName}\n// Simple notification helper\nconst addNotification=useCallback(function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';const id=Date.now();setNotifications(prev=>[...prev,{id,message,type}]);setTimeout(()=>setNotifications(prev=>prev.filter(n=>n.id!==id)),5000);},[]);// Load files and folders\nconst loadFiles=useCallback(async function(){let path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';setLoading(true);try{const result=await formatosApi.listFiles(path);const{files:loadedFiles,folders:loadedFolders}=result;setFiles(loadedFiles||[]);setFolders(loadedFolders||[]);setCurrentPath(path);}catch(error){addNotification(\"Error loading files: \".concat(error.message),'error');setFiles([]);setFolders([]);}finally{setLoading(false);}},[addNotification]);// Check admin permission on mount\nconst checkAdmin=useCallback(async()=>{try{const admin=await dbService.hasPermission(ROLES.ADMINISTRADOR);setIsAdmin(admin);}catch(err){setError(err.message);}finally{setLoading(false);}},[]);// Load files on mount\nuseEffect(()=>{checkAdmin();},[checkAdmin]);useEffect(()=>{if(!hasLoadedRef.current){hasLoadedRef.current=true;const savedPath=localStorage.getItem('lastFileManagerPath')||'';loadFiles(savedPath);}},[loadFiles]);// Save current path to cache\nuseEffect(()=>{localStorage.setItem('lastFileManagerPath',currentPath);},[currentPath]);// Navigation functions\nconst navigateToPath=targetPath=>{loadFiles(targetPath);};const navigateToFolder=folderName=>{const newPath=currentPath?\"\".concat(currentPath,\"/\").concat(folderName):folderName;loadFiles(newPath);};const handleBreadcrumbClick=pathPrefix=>{navigateToPath(pathPrefix);};// Folder CRUD functions\nconst handleCreateFolder=async()=>{if(!isAdmin||!newFolderName.trim())return;try{await formatosApi.createFolder(newFolderName.trim(),currentPath);addNotification('Folder created successfully','success');setNewFolderName('');loadFiles(currentPath);}catch(error){addNotification(\"Error creating folder: \".concat(error.message),'error');}};const handleRenameFolder=async oldName=>{if(!isAdmin||!renamingFolder||!renamingFolder.newName.trim())return;try{await formatosApi.renameFolder(oldName,renamingFolder.newName.trim(),currentPath);addNotification('Folder renamed successfully','success');setRenamingFolder(null);loadFiles(currentPath);}catch(error){addNotification(\"Error renaming folder: \".concat(error.message),'error');setRenamingFolder(null);}};const startRename=folder=>{setRenamingFolder({folderName:folder,newName:folder});};const cancelRename=()=>{setRenamingFolder(null);};const updateRenameName=newName=>{setRenamingFolder(prev=>_objectSpread(_objectSpread({},prev),{},{newName}));};const handleDeleteFolder=async folderName=>{if(!isAdmin||!window.confirm(\"Delete folder '\".concat(folderName,\"' and all contents?\")))return;try{// Find the folder ID\nconst folder=folders.find(f=>f.nombre===folderName);if(!folder){addNotification('Folder not found','error');return;}await formatosApi.deleteFolder(folder.id);addNotification('Folder deleted successfully','success');loadFiles(currentPath);}catch(error){addNotification(\"Error deleting folder: \".concat(error.message),'error');}};// File CRUD functions\nconst handleDeleteFile=async fileName=>{if(!isAdmin||!window.confirm(\"Delete file '\".concat(fileName,\"'?\")))return;try{// Find the file ID\nconst file=files.find(f=>f.nombre===fileName);if(!file){addNotification('File not found','error');return;}await formatosApi.deleteFile(file.id);addNotification('File deleted successfully','success');loadFiles(currentPath);}catch(error){addNotification(\"Error deleting file: \".concat(error.message),'error');}};const handleDownload=async fileName=>{try{// Find the file ID\nconst file=files.find(f=>f.nombre===fileName);if(!file){addNotification('File not found','error');return;}const blob=await formatosApi.downloadFile(file.id);const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=fileName;a.click();URL.revokeObjectURL(url);}catch(error){addNotification(\"Error downloading file: \".concat(error.message),'error');}};// Upload files\nconst onDrop=async acceptedFiles=>{console.log('onDrop called with files:',acceptedFiles);if(!isAdmin){console.log('onDrop: User is not admin');addNotification('Permission denied: Admin access required for uploads','error');return;}setUploading(true);try{console.log('onDrop: Starting upload for',acceptedFiles.length,'files');for(const file of acceptedFiles){await formatosApi.uploadFile(file);}addNotification(\"\".concat(acceptedFiles.length,\" files uploaded successfully\"),'success');loadFiles(currentPath);}catch(error){console.error('onDrop: Upload error:',error);addNotification(\"Upload error: \".concat(error.message),'error');}finally{setUploading(false);}};// Filtered files (only by search term)\nconst filteredAndSortedFiles=useMemo(()=>{return files.filter(file=>{const matchesSearch=file.nombre.toLowerCase().includes(debouncedSearchTerm.toLowerCase());return matchesSearch;}).sort((a,b)=>{// Sort by creation date (newest first)\nreturn new Date(b.createdAt||0)-new Date(a.createdAt||0);});},[files,debouncedSearchTerm]);return{// State\ncurrentPath,files,folders,loading,error,uploading,isAdmin,notifications,searchTerm,debouncedSearchTerm,newFolderName,renamingFolder,filteredAndSortedFiles,// Setters\nsetSearchTerm,setNewFolderName,setRenamingFolder,setUploading,setError,// Functions\nloadFiles,addNotification,checkAdmin,navigateToPath,navigateToFolder,handleBreadcrumbClick,handleCreateFolder,handleRenameFolder,startRename,cancelRename,updateRenameName,handleDeleteFolder,handleDeleteFile,handleDownload,onDrop};};export default useFileManager;","map":{"version":3,"names":["useState","useCallback","useMemo","useEffect","useRef","formatosApi","dbService","ROLES","useDebouncedSearch","useFileManager","currentPath","setCurrentPath","files","setFiles","folders","setFolders","loading","setLoading","error","setError","uploading","setUploading","isAdmin","setIsAdmin","notifications","setNotifications","hasLoadedRef","searchTerm","setSearchTerm","debouncedSearchTerm","newFolderName","setNewFolderName","renamingFolder","setRenamingFolder","addNotification","message","type","arguments","length","undefined","id","Date","now","prev","setTimeout","filter","n","loadFiles","path","result","listFiles","loadedFiles","loadedFolders","concat","checkAdmin","admin","hasPermission","ADMINISTRADOR","err","current","savedPath","localStorage","getItem","setItem","navigateToPath","targetPath","navigateToFolder","folderName","newPath","handleBreadcrumbClick","pathPrefix","handleCreateFolder","trim","createFolder","handleRenameFolder","oldName","newName","renameFolder","startRename","folder","cancelRename","updateRenameName","_objectSpread","handleDeleteFolder","window","confirm","find","f","nombre","deleteFolder","handleDeleteFile","fileName","file","deleteFile","handleDownload","blob","downloadFile","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","onDrop","acceptedFiles","console","log","uploadFile","filteredAndSortedFiles","matchesSearch","toLowerCase","includes","sort","b","createdAt"],"sources":["/Users/todoporunalma/Desktop/corporacion_react/src/pages/Dashboard/Formatos/hooks/useFileManager.js"],"sourcesContent":["import { useState, useCallback, useMemo, useEffect, useRef } from 'react';\nimport { formatosApi } from 'shared/services/formatosApi';\nimport { dbService, ROLES } from 'shared/services';\nimport { useDebouncedSearch } from 'shared/hooks';\n\nconst useFileManager = () => {\n  // Basic state\n  const [currentPath, setCurrentPath] = useState('');\n  const [files, setFiles] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  // Ref to prevent double loading in strict mode\n  const hasLoadedRef = useRef(false);\n\n  // Additional state for enhanced functionality\n  const [searchTerm, setSearchTerm] = useState('');\n  const debouncedSearchTerm = useDebouncedSearch(searchTerm, 300);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [renamingFolder, setRenamingFolder] = useState(null); // {folderName, newName}\n\n\n  // Simple notification helper\n  const addNotification = useCallback((message, type = 'info') => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, { id, message, type }]);\n    setTimeout(() => setNotifications(prev => prev.filter(n => n.id !== id)), 5000);\n  }, []);\n\n  // Load files and folders\n  const loadFiles = useCallback(async (path = '') => {\n    setLoading(true);\n    try {\n      const result = await formatosApi.listFiles(path);\n\n      const { files: loadedFiles, folders: loadedFolders } = result;\n      setFiles(loadedFiles || []);\n      setFolders(loadedFolders || []);\n      setCurrentPath(path);\n    } catch (error) {\n      addNotification(`Error loading files: ${error.message}`, 'error');\n      setFiles([]);\n      setFolders([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [addNotification]);\n\n  // Check admin permission on mount\n  const checkAdmin = useCallback(async () => {\n    try {\n      const admin = await dbService.hasPermission(ROLES.ADMINISTRADOR);\n      setIsAdmin(admin);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Load files on mount\n  useEffect(() => {\n    checkAdmin();\n  }, [checkAdmin]);\n\n  useEffect(() => {\n    if (!hasLoadedRef.current) {\n      hasLoadedRef.current = true;\n      const savedPath = localStorage.getItem('lastFileManagerPath') || '';\n      loadFiles(savedPath);\n    }\n  }, [loadFiles]);\n\n  // Save current path to cache\n  useEffect(() => {\n    localStorage.setItem('lastFileManagerPath', currentPath);\n  }, [currentPath]);\n\n  // Navigation functions\n  const navigateToPath = (targetPath) => {\n    loadFiles(targetPath);\n  };\n\n  const navigateToFolder = (folderName) => {\n    const newPath = currentPath ? `${currentPath}/${folderName}` : folderName;\n    loadFiles(newPath);\n  };\n\n  const handleBreadcrumbClick = (pathPrefix) => {\n    navigateToPath(pathPrefix);\n  };\n\n  // Folder CRUD functions\n  const handleCreateFolder = async () => {\n    if (!isAdmin || !newFolderName.trim()) return;\n    try {\n      await formatosApi.createFolder(newFolderName.trim(), currentPath);\n      addNotification('Folder created successfully', 'success');\n      setNewFolderName('');\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error creating folder: ${error.message}`, 'error');\n    }\n  };\n\n  const handleRenameFolder = async (oldName) => {\n    if (!isAdmin || !renamingFolder || !renamingFolder.newName.trim()) return;\n    try {\n      await formatosApi.renameFolder(oldName, renamingFolder.newName.trim(), currentPath);\n      addNotification('Folder renamed successfully', 'success');\n      setRenamingFolder(null);\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error renaming folder: ${error.message}`, 'error');\n      setRenamingFolder(null);\n    }\n  };\n\n  const startRename = (folder) => {\n    setRenamingFolder({ folderName: folder, newName: folder });\n  };\n\n  const cancelRename = () => {\n    setRenamingFolder(null);\n  };\n\n  const updateRenameName = (newName) => {\n    setRenamingFolder(prev => ({ ...prev, newName }));\n  };\n\n  const handleDeleteFolder = async (folderName) => {\n    if (!isAdmin || !window.confirm(`Delete folder '${folderName}' and all contents?`)) return;\n    try {\n      // Find the folder ID\n      const folder = folders.find(f => f.nombre === folderName);\n      if (!folder) {\n        addNotification('Folder not found', 'error');\n        return;\n      }\n      await formatosApi.deleteFolder(folder.id);\n      addNotification('Folder deleted successfully', 'success');\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error deleting folder: ${error.message}`, 'error');\n    }\n  };\n\n  // File CRUD functions\n  const handleDeleteFile = async (fileName) => {\n    if (!isAdmin || !window.confirm(`Delete file '${fileName}'?`)) return;\n    try {\n      // Find the file ID\n      const file = files.find(f => f.nombre === fileName);\n      if (!file) {\n        addNotification('File not found', 'error');\n        return;\n      }\n      await formatosApi.deleteFile(file.id);\n      addNotification('File deleted successfully', 'success');\n      loadFiles(currentPath);\n    } catch (error) {\n      addNotification(`Error deleting file: ${error.message}`, 'error');\n    }\n  };\n\n  const handleDownload = async (fileName) => {\n    try {\n      // Find the file ID\n      const file = files.find(f => f.nombre === fileName);\n      if (!file) {\n        addNotification('File not found', 'error');\n        return;\n      }\n      const blob = await formatosApi.downloadFile(file.id);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = fileName;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (error) {\n      addNotification(`Error downloading file: ${error.message}`, 'error');\n    }\n  };\n\n  // Upload files\n  const onDrop = async (acceptedFiles) => {\n    console.log('onDrop called with files:', acceptedFiles);\n    if (!isAdmin) {\n      console.log('onDrop: User is not admin');\n      addNotification('Permission denied: Admin access required for uploads', 'error');\n      return;\n    }\n\n    setUploading(true);\n    try {\n      console.log('onDrop: Starting upload for', acceptedFiles.length, 'files');\n      for (const file of acceptedFiles) {\n        await formatosApi.uploadFile(file);\n      }\n      addNotification(`${acceptedFiles.length} files uploaded successfully`, 'success');\n      loadFiles(currentPath);\n    } catch (error) {\n      console.error('onDrop: Upload error:', error);\n      addNotification(`Upload error: ${error.message}`, 'error');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  // Filtered files (only by search term)\n  const filteredAndSortedFiles = useMemo(() => {\n    return files.filter(file => {\n      const matchesSearch = file.nombre.toLowerCase().includes(debouncedSearchTerm.toLowerCase());\n      return matchesSearch;\n    }).sort((a, b) => {\n      // Sort by creation date (newest first)\n      return new Date(b.createdAt || 0) - new Date(a.createdAt || 0);\n    });\n  }, [files, debouncedSearchTerm]);\n\n  return {\n    // State\n    currentPath,\n    files,\n    folders,\n    loading,\n    error,\n    uploading,\n    isAdmin,\n    notifications,\n    searchTerm,\n    debouncedSearchTerm,\n    newFolderName,\n    renamingFolder,\n    filteredAndSortedFiles,\n\n    // Setters\n    setSearchTerm,\n    setNewFolderName,\n    setRenamingFolder,\n    setUploading,\n    setError,\n\n    // Functions\n    loadFiles,\n    addNotification,\n    checkAdmin,\n    navigateToPath,\n    navigateToFolder,\n    handleBreadcrumbClick,\n    handleCreateFolder,\n    handleRenameFolder,\n    startRename,\n    cancelRename,\n    updateRenameName,\n    handleDeleteFolder,\n    handleDeleteFile,\n    handleDownload,\n    onDrop,\n  };\n};\n\nexport default useFileManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}