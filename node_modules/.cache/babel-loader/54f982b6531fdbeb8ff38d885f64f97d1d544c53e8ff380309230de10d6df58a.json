{"ast":null,"code":"import _objectSpread from\"/Users/todoporunalma/Desktop/ol/corporacion_react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/todoporunalma/Desktop/ol/corporacion_react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"label\",\"name\",\"value\",\"onChange\",\"options\",\"error\",\"required\",\"disabled\",\"placeholder\",\"className\"];import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";/**\n * FormSelect component - Styled select dropdown with label and error handling\n * \n * @param {Object} props\n * @param {string} props.label - Select label\n * @param {string} props.name - Select name\n * @param {string|number} props.value - Selected value\n * @param {Function} props.onChange - Change handler\n * @param {Array} props.options - Array of {value, label} objects\n * @param {string} props.error - Error message\n * @param {boolean} props.required - Required field\n * @param {boolean} props.disabled - Disabled state\n * @param {string} props.placeholder - Placeholder text\n * @param {string} props.className - Additional CSS classes\n */const FormSelect=_ref=>{let{label,name,value,onChange,options,error,required=false,disabled=false,placeholder='Seleccionar...',className=''}=_ref,rest=_objectWithoutProperties(_ref,_excluded);const handleChange=e=>{const newValue=e.target.value;// Try to parse as number if the original value was a number\nconst parsedValue=!isNaN(newValue)&&newValue!==''?parseFloat(newValue):newValue;onChange(parsedValue);};const selectClasses=\"\\n    w-full\\n    border\\n    \".concat(error?'border-red-300':'border-gray-300',\"\\n    rounded-lg\\n    px-3\\n    py-2.5\\n    md:py-2\\n    focus:ring-2\\n    focus:ring-blue-500\\n    focus:border-transparent\\n    disabled:bg-gray-100\\n    disabled:cursor-not-allowed\\n    transition-colors\\n    min-h-[44px]\\n    md:min-h-0\\n    text-base\\n    \").concat(className,\"\\n  \").trim().replace(/\\s+/g,' ');return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full\",children:[label&&/*#__PURE__*/_jsxs(\"label\",{htmlFor:name,className:\"block text-sm font-medium text-gray-700 mb-2\",children:[label,required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread({id:name,name:name,value:value,onChange:handleChange,required:required,disabled:disabled,className:selectClasses},rest),{},{children:[placeholder&&/*#__PURE__*/_jsx(\"option\",{value:\"\",children:placeholder}),options.map((option,index)=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},index))]})),error&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-sm text-red-600\",children:error})]});};export default FormSelect;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","FormSelect","_ref","label","name","value","onChange","options","error","required","disabled","placeholder","className","rest","_objectWithoutProperties","_excluded","handleChange","e","newValue","target","parsedValue","isNaN","parseFloat","selectClasses","concat","trim","replace","children","htmlFor","_objectSpread","id","map","option","index"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Form/FormSelect.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * FormSelect component - Styled select dropdown with label and error handling\n * \n * @param {Object} props\n * @param {string} props.label - Select label\n * @param {string} props.name - Select name\n * @param {string|number} props.value - Selected value\n * @param {Function} props.onChange - Change handler\n * @param {Array} props.options - Array of {value, label} objects\n * @param {string} props.error - Error message\n * @param {boolean} props.required - Required field\n * @param {boolean} props.disabled - Disabled state\n * @param {string} props.placeholder - Placeholder text\n * @param {string} props.className - Additional CSS classes\n */\nconst FormSelect = ({\n  label,\n  name,\n  value,\n  onChange,\n  options,\n  error,\n  required = false,\n  disabled = false,\n  placeholder = 'Seleccionar...',\n  className = '',\n  ...rest\n}) => {\n  const handleChange = (e) => {\n    const newValue = e.target.value;\n    // Try to parse as number if the original value was a number\n    const parsedValue = !isNaN(newValue) && newValue !== '' ? parseFloat(newValue) : newValue;\n    onChange(parsedValue);\n  };\n\n  const selectClasses = `\n    w-full\n    border\n    ${error ? 'border-red-300' : 'border-gray-300'}\n    rounded-lg\n    px-3\n    py-2.5\n    md:py-2\n    focus:ring-2\n    focus:ring-blue-500\n    focus:border-transparent\n    disabled:bg-gray-100\n    disabled:cursor-not-allowed\n    transition-colors\n    min-h-[44px]\n    md:min-h-0\n    text-base\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label htmlFor={name} className=\"block text-sm font-medium text-gray-700 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <select\n        id={name}\n        name={name}\n        value={value}\n        onChange={handleChange}\n        required={required}\n        disabled={disabled}\n        className={selectClasses}\n        {...rest}\n      >\n        {placeholder && (\n          <option value=\"\">{placeholder}</option>\n        )}\n        {options.map((option, index) => (\n          <option key={index} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      \n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">\n          {error}\n        </p>\n      )}\n    </div>\n  );\n};\n\nFormSelect.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      label: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  error: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  className: PropTypes.string\n};\n\nexport default FormSelect;\n"],"mappings":"uZAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAYb,IAZc,CAClBC,KAAK,CACLC,IAAI,CACJC,KAAK,CACLC,QAAQ,CACRC,OAAO,CACPC,KAAK,CACLC,QAAQ,CAAG,KAAK,CAChBC,QAAQ,CAAG,KAAK,CAChBC,WAAW,CAAG,gBAAgB,CAC9BC,SAAS,CAAG,EAEd,CAAC,CAAAV,IAAA,CADIW,IAAI,CAAAC,wBAAA,CAAAZ,IAAA,CAAAa,SAAA,EAEP,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAAC,QAAQ,CAAGD,CAAC,CAACE,MAAM,CAACd,KAAK,CAC/B;AACA,KAAM,CAAAe,WAAW,CAAG,CAACC,KAAK,CAACH,QAAQ,CAAC,EAAIA,QAAQ,GAAK,EAAE,CAAGI,UAAU,CAACJ,QAAQ,CAAC,CAAGA,QAAQ,CACzFZ,QAAQ,CAACc,WAAW,CAAC,CACvB,CAAC,CAED,KAAM,CAAAG,aAAa,CAAG,iCAAAC,MAAA,CAGlBhB,KAAK,CAAG,gBAAgB,CAAG,iBAAiB,0QAAAgB,MAAA,CAc5CZ,SAAS,SACXa,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAE7B,mBACE1B,KAAA,QAAKY,SAAS,CAAC,QAAQ,CAAAe,QAAA,EACpBxB,KAAK,eACJH,KAAA,UAAO4B,OAAO,CAAExB,IAAK,CAACQ,SAAS,CAAC,8CAA8C,CAAAe,QAAA,EAC3ExB,KAAK,CACLM,QAAQ,eAAIX,IAAA,SAAMc,SAAS,CAAC,mBAAmB,CAAAe,QAAA,CAAC,GAAC,CAAM,CAAC,EACpD,CACR,cAED3B,KAAA,UAAA6B,aAAA,CAAAA,aAAA,EACEC,EAAE,CAAE1B,IAAK,CACTA,IAAI,CAAEA,IAAK,CACXC,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEU,YAAa,CACvBP,QAAQ,CAAEA,QAAS,CACnBC,QAAQ,CAAEA,QAAS,CACnBE,SAAS,CAAEW,aAAc,EACrBV,IAAI,MAAAc,QAAA,EAEPhB,WAAW,eACVb,IAAA,WAAQO,KAAK,CAAC,EAAE,CAAAsB,QAAA,CAAEhB,WAAW,CAAS,CACvC,CACAJ,OAAO,CAACwB,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,gBACzBnC,IAAA,WAAoBO,KAAK,CAAE2B,MAAM,CAAC3B,KAAM,CAAAsB,QAAA,CACrCK,MAAM,CAAC7B,KAAK,EADF8B,KAEL,CACT,CAAC,GACI,CAAC,CAERzB,KAAK,eACJV,IAAA,MAAGc,SAAS,CAAC,2BAA2B,CAAAe,QAAA,CACrCnB,KAAK,CACL,CACJ,EACE,CAAC,CAEV,CAAC,CAoBD,cAAe,CAAAP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}