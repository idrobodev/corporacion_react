{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Form/FormInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * FormInput component - Styled input field with label and error handling\n * \n * @param {Object} props\n * @param {string} props.label - Input label\n * @param {string} props.name - Input name\n * @param {'text'|'email'|'password'|'number'|'tel'|'date'} props.type - Input type\n * @param {string|number} props.value - Input value\n * @param {Function} props.onChange - Change handler\n * @param {string} props.error - Error message\n * @param {boolean} props.required - Required field\n * @param {boolean} props.disabled - Disabled state\n * @param {string} props.placeholder - Placeholder text\n * @param {string} props.icon - FontAwesome icon class\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormInput = ({\n  label,\n  name,\n  type = 'text',\n  value,\n  onChange,\n  error,\n  required = false,\n  disabled = false,\n  placeholder,\n  icon,\n  className = '',\n  ...rest\n}) => {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleChange = e => {\n    const newValue = type === 'number' ? parseFloat(e.target.value) || '' : e.target.value;\n    onChange(newValue);\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const inputType = type === 'password' && showPassword ? 'text' : type;\n  const inputClasses = `\n    w-full\n    border\n    ${error ? 'border-red-300' : 'border-gray-300'}\n    rounded-lg\n    px-3\n    py-2.5\n    md:py-2\n    ${icon ? 'pl-10' : ''}\n    focus:ring-2\n    focus:ring-blue-500\n    focus:border-transparent\n    disabled:bg-gray-100\n    disabled:cursor-not-allowed\n    transition-colors\n    min-h-[44px]\n    md:min-h-0\n    text-base\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: \"block text-sm font-medium text-gray-700 mb-2\",\n      children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 ml-1\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [icon && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `${icon} text-gray-400`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: name,\n        name: name,\n        type: inputType,\n        value: value,\n        onChange: handleChange,\n        placeholder: placeholder,\n        required: required,\n        disabled: disabled,\n        className: `${inputClasses} ${type === 'password' ? 'pr-10' : ''}`,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), type === 'password' && !disabled && !rest.readOnly && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: togglePasswordVisibility,\n        className: \"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600 focus:outline-none\",\n        title: showPassword ? 'Ocultar contrase単a' : 'Mostrar contrase単a',\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-1 text-sm text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(FormInput, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n_c = FormInput;\nFormInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'email', 'password', 'number', 'tel', 'date']),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  icon: PropTypes.string,\n  className: PropTypes.string\n};\nexport default FormInput;\nvar _c;\n$RefreshReg$(_c, \"FormInput\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","FormInput","label","name","type","value","onChange","error","required","disabled","placeholder","icon","className","rest","_s","showPassword","setShowPassword","handleChange","e","newValue","parseFloat","target","togglePasswordVisibility","inputType","inputClasses","trim","replace","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","readOnly","onClick","title","_c","propTypes","string","isRequired","oneOf","oneOfType","number","func","bool","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Form/FormInput.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * FormInput component - Styled input field with label and error handling\n * \n * @param {Object} props\n * @param {string} props.label - Input label\n * @param {string} props.name - Input name\n * @param {'text'|'email'|'password'|'number'|'tel'|'date'} props.type - Input type\n * @param {string|number} props.value - Input value\n * @param {Function} props.onChange - Change handler\n * @param {string} props.error - Error message\n * @param {boolean} props.required - Required field\n * @param {boolean} props.disabled - Disabled state\n * @param {string} props.placeholder - Placeholder text\n * @param {string} props.icon - FontAwesome icon class\n * @param {string} props.className - Additional CSS classes\n */\nconst FormInput = ({\n  label,\n  name,\n  type = 'text',\n  value,\n  onChange,\n  error,\n  required = false,\n  disabled = false,\n  placeholder,\n  icon,\n  className = '',\n  ...rest\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleChange = (e) => {\n    const newValue = type === 'number' ? parseFloat(e.target.value) || '' : e.target.value;\n    onChange(newValue);\n  };\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const inputType = type === 'password' && showPassword ? 'text' : type;\n\n  const inputClasses = `\n    w-full\n    border\n    ${error ? 'border-red-300' : 'border-gray-300'}\n    rounded-lg\n    px-3\n    py-2.5\n    md:py-2\n    ${icon ? 'pl-10' : ''}\n    focus:ring-2\n    focus:ring-blue-500\n    focus:border-transparent\n    disabled:bg-gray-100\n    disabled:cursor-not-allowed\n    transition-colors\n    min-h-[44px]\n    md:min-h-0\n    text-base\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label htmlFor={name} className=\"block text-sm font-medium text-gray-700 mb-2\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      \n      <div className=\"relative\">\n        {icon && (\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <i className={`${icon} text-gray-400`}></i>\n          </div>\n        )}\n\n        <input\n          id={name}\n          name={name}\n          type={inputType}\n          value={value}\n          onChange={handleChange}\n          placeholder={placeholder}\n          required={required}\n          disabled={disabled}\n          className={`${inputClasses} ${type === 'password' ? 'pr-10' : ''}`}\n          {...rest}\n        />\n\n        {type === 'password' && !disabled && !rest.readOnly && (\n          <button\n            type=\"button\"\n            onClick={togglePasswordVisibility}\n            className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-600 focus:outline-none\"\n            title={showPassword ? 'Ocultar contrase単a' : 'Mostrar contrase単a'}\n          >\n            <i className={`fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'}`}></i>\n          </button>\n        )}\n      </div>\n      \n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">\n          {error}\n        </p>\n      )}\n    </div>\n  );\n};\n\nFormInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'email', 'password', 'number', 'tel', 'date']),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  icon: PropTypes.string,\n  className: PropTypes.string\n};\n\nexport default FormInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}