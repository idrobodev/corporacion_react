{"ast":null,"code":"import React from'react';import Modal from'./Modal';import Button from'../Button/Button';/**\n * ViewModal component - Modal for displaying details in a two-column layout\n * \n * @param {Object} props\n * @param {boolean} props.isOpen - Modal open state\n * @param {Function} props.onClose - Close handler\n * @param {string} props.title - Modal title\n * @param {Array} props.data - Array of {label, value, fullWidth} objects\n * @param {React.ReactNode} props.actions - Optional action buttons\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Modal size\n * @param {string} props.className - Additional CSS classes\n */import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ViewModal=_ref=>{let{isOpen,onClose,title,data,actions,size='lg',className=''}=_ref;const footer=/*#__PURE__*/_jsxs(_Fragment,{children:[actions,/*#__PURE__*/_jsx(Button,{type:\"button\",variant:\"ghost\",onClick:onClose,children:\"Cerrar\"})]});return/*#__PURE__*/_jsx(Modal,{isOpen:isOpen,onClose:onClose,title:title,size:size,footer:footer,className:className,children:/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6\",children:data.map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 \".concat(item.fullWidth?'md:col-span-2':''),children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-600\",children:item.label}),/*#__PURE__*/_jsx(\"div\",{className:\"text-base text-gray-900\",children:typeof item.value==='string'||typeof item.value==='number'?/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold\",children:item.value}):item.value})]},index))})});};export default ViewModal;","map":{"version":3,"names":["React","Modal","Button","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ViewModal","_ref","isOpen","onClose","title","data","actions","size","className","footer","children","type","variant","onClick","map","item","index","concat","fullWidth","label","value"],"sources":["/Users/todoporunalma/Desktop/coptua/corporacion_react/src/components/UI/Modal/ViewModal.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport Button from '../Button/Button';\n\n/**\n * ViewModal component - Modal for displaying details in a two-column layout\n * \n * @param {Object} props\n * @param {boolean} props.isOpen - Modal open state\n * @param {Function} props.onClose - Close handler\n * @param {string} props.title - Modal title\n * @param {Array} props.data - Array of {label, value, fullWidth} objects\n * @param {React.ReactNode} props.actions - Optional action buttons\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Modal size\n * @param {string} props.className - Additional CSS classes\n */\nconst ViewModal = ({\n  isOpen,\n  onClose,\n  title,\n  data,\n  actions,\n  size = 'lg',\n  className = ''\n}) => {\n  const footer = (\n    <>\n      {actions}\n      <Button\n        type=\"button\"\n        variant=\"ghost\"\n        onClick={onClose}\n      >\n        Cerrar\n      </Button>\n    </>\n  );\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={title}\n      size={size}\n      footer={footer}\n      className={className}\n    >\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {data.map((item, index) => (\n          <div\n            key={index}\n            className={`space-y-2 ${item.fullWidth ? 'md:col-span-2' : ''}`}\n          >\n            <label className=\"block text-sm font-medium text-gray-600\">\n              {item.label}\n            </label>\n            <div className=\"text-base text-gray-900\">\n              {typeof item.value === 'string' || typeof item.value === 'number' ? (\n                <p className=\"font-semibold\">{item.value}</p>\n              ) : (\n                item.value\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nViewModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.node\n      ]).isRequired,\n      fullWidth: PropTypes.bool\n    })\n  ).isRequired,\n  actions: PropTypes.node,\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  className: PropTypes.string\n};\n\nexport default ViewModal;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAYA,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAQZ,IARa,CACjBC,MAAM,CACNC,OAAO,CACPC,KAAK,CACLC,IAAI,CACJC,OAAO,CACPC,IAAI,CAAG,IAAI,CACXC,SAAS,CAAG,EACd,CAAC,CAAAP,IAAA,CACC,KAAM,CAAAQ,MAAM,cACVV,KAAA,CAAAF,SAAA,EAAAa,QAAA,EACGJ,OAAO,cACRX,IAAA,CAACF,MAAM,EACLkB,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAC,OAAO,CACfC,OAAO,CAAEV,OAAQ,CAAAO,QAAA,CAClB,QAED,CAAQ,CAAC,EACT,CACH,CAED,mBACEf,IAAA,CAACH,KAAK,EACJU,MAAM,CAAEA,MAAO,CACfC,OAAO,CAAEA,OAAQ,CACjBC,KAAK,CAAEA,KAAM,CACbG,IAAI,CAAEA,IAAK,CACXE,MAAM,CAAEA,MAAO,CACfD,SAAS,CAAEA,SAAU,CAAAE,QAAA,cAErBf,IAAA,QAAKa,SAAS,CAAC,uCAAuC,CAAAE,QAAA,CACnDL,IAAI,CAACS,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACpBjB,KAAA,QAEES,SAAS,cAAAS,MAAA,CAAeF,IAAI,CAACG,SAAS,CAAG,eAAe,CAAG,EAAE,CAAG,CAAAR,QAAA,eAEhEf,IAAA,UAAOa,SAAS,CAAC,yCAAyC,CAAAE,QAAA,CACvDK,IAAI,CAACI,KAAK,CACN,CAAC,cACRxB,IAAA,QAAKa,SAAS,CAAC,yBAAyB,CAAAE,QAAA,CACrC,MAAO,CAAAK,IAAI,CAACK,KAAK,GAAK,QAAQ,EAAI,MAAO,CAAAL,IAAI,CAACK,KAAK,GAAK,QAAQ,cAC/DzB,IAAA,MAAGa,SAAS,CAAC,eAAe,CAAAE,QAAA,CAAEK,IAAI,CAACK,KAAK,CAAI,CAAC,CAE7CL,IAAI,CAACK,KACN,CACE,CAAC,GAZDJ,KAaF,CACN,CAAC,CACC,CAAC,CACD,CAAC,CAEZ,CAAC,CAsBD,cAAe,CAAAhB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}