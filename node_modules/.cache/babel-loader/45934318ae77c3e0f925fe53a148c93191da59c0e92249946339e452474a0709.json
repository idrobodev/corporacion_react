{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/common/CRUDModals/EditFormModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport FormModal from '../../UI/Modal/FormModal';\nimport FormInput from '../../UI/Form/FormInput';\nimport FormSelect from '../../UI/Form/FormSelect';\nimport FormTextarea from '../../UI/Form/FormTextarea';\nimport FormGroup from '../../UI/Form/FormGroup';\n\n/**\n * EditFormModal component - Composite modal for editing entities\n * Combines FormModal with common edit patterns including form state management\n *\n * @param {Object} props\n * @param {boolean} props.isOpen - Modal open state\n * @param {Function} props.onClose - Close handler\n * @param {string} props.title - Modal title\n * @param {Object} props.initialData - Initial form data for editing\n * @param {Function} props.onSubmit - Submit handler (receives form data)\n * @param {React.ReactNode} props.children - Form fields (receives formData and handleChange)\n * @param {Array} props.fields - Field configuration array (alternative to children)\n * @param {string} props.submitLabel - Submit button label\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Modal size\n * @param {Function} props.validate - Optional validation function\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditFormModal = ({\n  isOpen,\n  onClose,\n  title,\n  initialData,\n  onSubmit,\n  children,\n  fields,\n  submitLabel = 'Guardar Cambios',\n  size = 'lg',\n  validate,\n  className = ''\n}) => {\n  _s();\n  const [formData, setFormData] = useState(initialData || {});\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n\n  // Update form data when initialData changes\n  useEffect(() => {\n    if (initialData) {\n      setFormData(initialData);\n      setErrors({});\n      setSubmitError('');\n    }\n  }, [initialData, isOpen]);\n  const handleChange = (name, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear field error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitError('');\n\n    // Run validation if provided\n    if (validate) {\n      const validationErrors = validate(formData);\n      if (Object.keys(validationErrors).length > 0) {\n        setErrors(validationErrors);\n        return;\n      }\n    }\n    setLoading(true);\n    try {\n      await onSubmit(formData);\n      if (typeof onClose === 'function') {\n        onClose();\n      } else {\n        console.error('onClose is not a function in EditFormModal');\n      }\n      // Reset form after successful submission\n      setFormData(initialData || {});\n      setErrors({});\n    } catch (error) {\n      setSubmitError(error.message || 'Error al guardar los cambios');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClose = () => {\n    if (!loading) {\n      setFormData(initialData || {});\n      setErrors({});\n      setSubmitError('');\n      if (typeof onClose === 'function') {\n        onClose();\n      } else {\n        console.error('onClose is not a function in EditFormModal');\n      }\n    }\n  };\n\n  // Function to render form fields from configuration\n  const renderFields = () => {\n    if (!fields || !Array.isArray(fields)) return null;\n    return /*#__PURE__*/_jsxDEV(FormGroup, {\n      columns: 2,\n      children: fields.map((field, index) => {\n        const fieldProps = {\n          key: field.name || index,\n          name: field.name,\n          label: field.label,\n          value: formData[field.name] || '',\n          onChange: value => handleChange(field.name, value),\n          error: errors[field.name],\n          required: field.required,\n          placeholder: field.placeholder,\n          disabled: field.disabled,\n          ...field\n        };\n        switch (field.type) {\n          case 'select':\n            return /*#__PURE__*/_jsxDEV(FormSelect, {\n              ...fieldProps,\n              options: field.options || []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this);\n          case 'textarea':\n            return /*#__PURE__*/_jsxDEV(FormTextarea, {\n              ...fieldProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this);\n          case 'text':\n          case 'email':\n          case 'password':\n          case 'number':\n          case 'tel':\n          case 'date':\n          default:\n            return /*#__PURE__*/_jsxDEV(FormInput, {\n              ...fieldProps,\n              type: field.type || 'text'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(FormModal, {\n    isOpen: isOpen,\n    onClose: handleClose,\n    title: title,\n    onSubmit: handleSubmit,\n    loading: loading,\n    error: submitError,\n    submitLabel: submitLabel,\n    size: size,\n    className: className,\n    children: fields ? renderFields() : typeof children === 'function' ? children({\n      formData,\n      handleChange,\n      errors\n    }) : React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n      formData,\n      handleChange,\n      errors\n    }) : child)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(EditFormModal, \"xlTJhqZ5FKRkjvcBWmxIHdmY7uE=\");\n_c = EditFormModal;\nEditFormModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  initialData: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  fields: PropTypes.array,\n  submitLabel: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  validate: PropTypes.func,\n  className: PropTypes.string\n};\nexport default EditFormModal;\nvar _c;\n$RefreshReg$(_c, \"EditFormModal\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","FormModal","FormInput","FormSelect","FormTextarea","FormGroup","jsxDEV","_jsxDEV","EditFormModal","isOpen","onClose","title","initialData","onSubmit","children","fields","submitLabel","size","validate","className","_s","formData","setFormData","errors","setErrors","loading","setLoading","submitError","setSubmitError","handleChange","name","value","prev","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","console","error","message","handleClose","renderFields","Array","isArray","columns","map","field","index","fieldProps","key","label","onChange","required","placeholder","disabled","type","options","fileName","_jsxFileName","lineNumber","columnNumber","Children","child","isValidElement","cloneElement","_c","propTypes","bool","isRequired","func","string","object","oneOfType","node","array","oneOf","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/common/CRUDModals/EditFormModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport FormModal from '../../UI/Modal/FormModal';\nimport FormInput from '../../UI/Form/FormInput';\nimport FormSelect from '../../UI/Form/FormSelect';\nimport FormTextarea from '../../UI/Form/FormTextarea';\nimport FormGroup from '../../UI/Form/FormGroup';\n\n/**\n * EditFormModal component - Composite modal for editing entities\n * Combines FormModal with common edit patterns including form state management\n *\n * @param {Object} props\n * @param {boolean} props.isOpen - Modal open state\n * @param {Function} props.onClose - Close handler\n * @param {string} props.title - Modal title\n * @param {Object} props.initialData - Initial form data for editing\n * @param {Function} props.onSubmit - Submit handler (receives form data)\n * @param {React.ReactNode} props.children - Form fields (receives formData and handleChange)\n * @param {Array} props.fields - Field configuration array (alternative to children)\n * @param {string} props.submitLabel - Submit button label\n * @param {'sm'|'md'|'lg'|'xl'} props.size - Modal size\n * @param {Function} props.validate - Optional validation function\n * @param {string} props.className - Additional CSS classes\n */\nconst EditFormModal = ({\n  isOpen,\n  onClose,\n  title,\n  initialData,\n  onSubmit,\n  children,\n  fields,\n  submitLabel = 'Guardar Cambios',\n  size = 'lg',\n  validate,\n  className = ''\n}) => {\n  const [formData, setFormData] = useState(initialData || {});\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [submitError, setSubmitError] = useState('');\n\n  // Update form data when initialData changes\n  useEffect(() => {\n    if (initialData) {\n      setFormData(initialData);\n      setErrors({});\n      setSubmitError('');\n    }\n  }, [initialData, isOpen]);\n\n  const handleChange = (name, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear field error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitError('');\n\n    // Run validation if provided\n    if (validate) {\n      const validationErrors = validate(formData);\n      if (Object.keys(validationErrors).length > 0) {\n        setErrors(validationErrors);\n        return;\n      }\n    }\n\n    setLoading(true);\n    try {\n      await onSubmit(formData);\n      if (typeof onClose === 'function') {\n        onClose();\n      } else {\n        console.error('onClose is not a function in EditFormModal');\n      }\n      // Reset form after successful submission\n      setFormData(initialData || {});\n      setErrors({});\n    } catch (error) {\n      setSubmitError(error.message || 'Error al guardar los cambios');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleClose = () => {\n    if (!loading) {\n      setFormData(initialData || {});\n      setErrors({});\n      setSubmitError('');\n      if (typeof onClose === 'function') {\n        onClose();\n      } else {\n        console.error('onClose is not a function in EditFormModal');\n      }\n    }\n  };\n\n  // Function to render form fields from configuration\n  const renderFields = () => {\n    if (!fields || !Array.isArray(fields)) return null;\n\n    return (\n      <FormGroup columns={2}>\n        {fields.map((field, index) => {\n          const fieldProps = {\n            key: field.name || index,\n            name: field.name,\n            label: field.label,\n            value: formData[field.name] || '',\n            onChange: (value) => handleChange(field.name, value),\n            error: errors[field.name],\n            required: field.required,\n            placeholder: field.placeholder,\n            disabled: field.disabled,\n            ...field\n          };\n\n          switch (field.type) {\n            case 'select':\n              return (\n                <FormSelect\n                  {...fieldProps}\n                  options={field.options || []}\n                />\n              );\n            case 'textarea':\n              return (\n                <FormTextarea\n                  {...fieldProps}\n                />\n              );\n            case 'text':\n            case 'email':\n            case 'password':\n            case 'number':\n            case 'tel':\n            case 'date':\n            default:\n              return (\n                <FormInput\n                  {...fieldProps}\n                  type={field.type || 'text'}\n                />\n              );\n          }\n        })}\n      </FormGroup>\n    );\n  };\n\n  return (\n    <FormModal\n      isOpen={isOpen}\n      onClose={handleClose}\n      title={title}\n      onSubmit={handleSubmit}\n      loading={loading}\n      error={submitError}\n      submitLabel={submitLabel}\n      size={size}\n      className={className}\n    >\n      {fields ? renderFields() : (\n        typeof children === 'function'\n          ? children({ formData, handleChange, errors })\n          : React.Children.map(children, child =>\n              React.isValidElement(child)\n                ? React.cloneElement(child, { formData, handleChange, errors })\n                : child\n            )\n      )}\n    </FormModal>\n  );\n};\n\nEditFormModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  initialData: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.node\n  ]),\n  fields: PropTypes.array,\n  submitLabel: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'md', 'lg', 'xl']),\n  validate: PropTypes.func,\n  className: PropTypes.string\n};\n\nexport default EditFormModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}