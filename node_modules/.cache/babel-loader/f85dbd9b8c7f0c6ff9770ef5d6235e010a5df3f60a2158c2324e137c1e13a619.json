{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Badge/StatusBadge.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * StatusBadge component for displaying status indicators\n * \n * @param {Object} props\n * @param {string} props.status - Status text to display\n * @param {'success'|'warning'|'danger'|'info'|'default'} props.variant - Color variant\n * @param {'sm'|'md'|'lg'} props.size - Badge size\n * @param {string} props.icon - FontAwesome icon class\n * @param {Function} props.onClick - Click handler (makes badge clickable)\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StatusBadge = ({\n  status,\n  variant = 'default',\n  size = 'md',\n  icon,\n  onClick,\n  className = '',\n  ...rest\n}) => {\n  // Variant styles\n  const variantStyles = {\n    success: 'bg-green-100 text-green-800 hover:bg-green-200',\n    warning: 'bg-orange-100 text-orange-800 hover:bg-orange-200',\n    danger: 'bg-red-100 text-red-800 hover:bg-red-200',\n    info: 'bg-blue-100 text-blue-800 hover:bg-blue-200',\n    default: 'bg-gray-100 text-gray-800 hover:bg-gray-200'\n  };\n\n  // Size styles\n  const sizeStyles = {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-1 text-sm',\n    lg: 'px-3 py-1.5 text-base'\n  };\n\n  // Icon size styles\n  const iconSizeStyles = {\n    sm: 'text-xs',\n    md: 'text-sm',\n    lg: 'text-base'\n  };\n\n  // Base styles\n  const baseStyles = 'inline-flex items-center font-semibold rounded-full transition-colors duration-200';\n\n  // Clickable styles\n  const clickableStyles = onClick ? 'cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500' : '';\n\n  // Combine all styles\n  const badgeClasses = `\n    ${baseStyles}\n    ${variantStyles[variant]}\n    ${sizeStyles[size]}\n    ${clickableStyles}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [icon && /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `${icon} ${iconSizeStyles[size]} ${status ? 'mr-1.5' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), status]\n  }, void 0, true);\n  if (onClick) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: badgeClasses,\n      onClick: onClick,\n      ...rest,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: badgeClasses,\n    ...rest,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_c = StatusBadge;\nStatusBadge.propTypes = {\n  status: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['success', 'warning', 'danger', 'info', 'default']),\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string\n};\nexport default StatusBadge;\nvar _c;\n$RefreshReg$(_c, \"StatusBadge\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","StatusBadge","status","variant","size","icon","onClick","className","rest","variantStyles","success","warning","danger","info","default","sizeStyles","sm","md","lg","iconSizeStyles","baseStyles","clickableStyles","badgeClasses","trim","replace","content","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","propTypes","string","isRequired","oneOf","func","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/Badge/StatusBadge.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * StatusBadge component for displaying status indicators\n * \n * @param {Object} props\n * @param {string} props.status - Status text to display\n * @param {'success'|'warning'|'danger'|'info'|'default'} props.variant - Color variant\n * @param {'sm'|'md'|'lg'} props.size - Badge size\n * @param {string} props.icon - FontAwesome icon class\n * @param {Function} props.onClick - Click handler (makes badge clickable)\n * @param {string} props.className - Additional CSS classes\n */\nconst StatusBadge = ({\n  status,\n  variant = 'default',\n  size = 'md',\n  icon,\n  onClick,\n  className = '',\n  ...rest\n}) => {\n  // Variant styles\n  const variantStyles = {\n    success: 'bg-green-100 text-green-800 hover:bg-green-200',\n    warning: 'bg-orange-100 text-orange-800 hover:bg-orange-200',\n    danger: 'bg-red-100 text-red-800 hover:bg-red-200',\n    info: 'bg-blue-100 text-blue-800 hover:bg-blue-200',\n    default: 'bg-gray-100 text-gray-800 hover:bg-gray-200'\n  };\n\n  // Size styles\n  const sizeStyles = {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-1 text-sm',\n    lg: 'px-3 py-1.5 text-base'\n  };\n\n  // Icon size styles\n  const iconSizeStyles = {\n    sm: 'text-xs',\n    md: 'text-sm',\n    lg: 'text-base'\n  };\n\n  // Base styles\n  const baseStyles = 'inline-flex items-center font-semibold rounded-full transition-colors duration-200';\n\n  // Clickable styles\n  const clickableStyles = onClick ? 'cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500' : '';\n\n  // Combine all styles\n  const badgeClasses = `\n    ${baseStyles}\n    ${variantStyles[variant]}\n    ${sizeStyles[size]}\n    ${clickableStyles}\n    ${className}\n  `.trim().replace(/\\s+/g, ' ');\n\n  const content = (\n    <>\n      {icon && (\n        <i className={`${icon} ${iconSizeStyles[size]} ${status ? 'mr-1.5' : ''}`}></i>\n      )}\n      {status}\n    </>\n  );\n\n  if (onClick) {\n    return (\n      <button\n        type=\"button\"\n        className={badgeClasses}\n        onClick={onClick}\n        {...rest}\n      >\n        {content}\n      </button>\n    );\n  }\n\n  return (\n    <span className={badgeClasses} {...rest}>\n      {content}\n    </span>\n  );\n};\n\nStatusBadge.propTypes = {\n  status: PropTypes.string.isRequired,\n  variant: PropTypes.oneOf(['success', 'warning', 'danger', 'info', 'default']),\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n  className: PropTypes.string\n};\n\nexport default StatusBadge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}