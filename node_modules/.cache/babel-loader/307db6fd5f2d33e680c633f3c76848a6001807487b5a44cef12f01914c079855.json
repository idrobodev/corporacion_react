{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\n\n/**\n * useDataFetch hook - Fetch data with loading and error states\n * \n * @param {Function} fetchFn - Async function to fetch data\n * @param {Array} deps - Dependencies array\n * @returns {Object} - { data, loading, error, refetch }\n */\nconst useDataFetch = (fetchFn, deps = []) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await fetchFn();\n      setData(result);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchFn]);\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n  const refetch = useCallback(() => {\n    fetchData();\n  }, [fetchData]);\n  return {\n    data,\n    loading,\n    error,\n    refetch\n  };\n};\n_s(useDataFetch, \"DoyjYxnXXpHuD9WzSuiDodT9rZc=\");\nexport default useDataFetch;","map":{"version":3,"names":["useState","useEffect","useCallback","useDataFetch","fetchFn","deps","_s","data","setData","loading","setLoading","error","setError","fetchData","result","err","console","refetch"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/hooks/useDataFetch.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\n/**\n * useDataFetch hook - Fetch data with loading and error states\n * \n * @param {Function} fetchFn - Async function to fetch data\n * @param {Array} deps - Dependencies array\n * @returns {Object} - { data, loading, error, refetch }\n */\nconst useDataFetch = (fetchFn, deps = []) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await fetchFn();\n      setData(result);\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchFn]);\n\n  useEffect(() => {\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  const refetch = useCallback(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return {\n    data,\n    loading,\n    error,\n    refetch\n  };\n};\n\nexport default useDataFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,YAAY,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,SAAS,GAAGX,WAAW,CAAC,YAAY;IACxC,IAAI;MACFQ,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,MAAME,MAAM,GAAG,MAAMV,OAAO,CAAC,CAAC;MAC9BI,OAAO,CAACM,MAAM,CAAC;IACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEI,GAAG,CAAC;MAC1CH,QAAQ,CAACG,GAAG,CAAC;IACf,CAAC,SAAS;MACRL,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;EAEbH,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;IACX;EACF,CAAC,EAAER,IAAI,CAAC;EAER,MAAMY,OAAO,GAAGf,WAAW,CAAC,MAAM;IAChCW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,OAAO;IACLN,IAAI;IACJE,OAAO;IACPE,KAAK;IACLM;EACF,CAAC;AACH,CAAC;AAACX,EAAA,CAlCIH,YAAY;AAoClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}