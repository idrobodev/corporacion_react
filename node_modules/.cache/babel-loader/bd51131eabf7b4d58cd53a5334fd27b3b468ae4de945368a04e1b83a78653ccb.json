{"ast":null,"code":"var _jsxFileName = \"/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/State/LoadingState.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * LoadingState component - Display loading spinner with optional message\n * \n * @param {Object} props\n * @param {string} props.message - Loading message\n * @param {'sm'|'md'|'lg'} props.size - Spinner size\n * @param {boolean} props.fullScreen - Full screen overlay\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingState = ({\n  message = 'Cargando...',\n  size = 'md',\n  fullScreen = false,\n  className = ''\n}) => {\n  // Size styles\n  const sizeStyles = {\n    sm: 'text-2xl',\n    md: 'text-4xl',\n    lg: 'text-6xl'\n  };\n  const spinnerClasses = `fas fa-spinner fa-spin ${sizeStyles[size]} text-blue-600`;\n  const content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: spinnerClasses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-gray-600 font-medium\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n  if (fullScreen) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fixed inset-0 bg-white bg-opacity-90 flex items-center justify-center z-50 ${className}`,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex items-center justify-center py-12 ${className}`,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingState;\nLoadingState.propTypes = {\n  message: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  fullScreen: PropTypes.bool,\n  className: PropTypes.string\n};\nexport default LoadingState;\nvar _c;\n$RefreshReg$(_c, \"LoadingState\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","LoadingState","message","size","fullScreen","className","sizeStyles","sm","md","lg","spinnerClasses","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","oneOf","bool","$RefreshReg$"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/components/UI/State/LoadingState.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * LoadingState component - Display loading spinner with optional message\n * \n * @param {Object} props\n * @param {string} props.message - Loading message\n * @param {'sm'|'md'|'lg'} props.size - Spinner size\n * @param {boolean} props.fullScreen - Full screen overlay\n * @param {string} props.className - Additional CSS classes\n */\nconst LoadingState = ({\n  message = 'Cargando...',\n  size = 'md',\n  fullScreen = false,\n  className = ''\n}) => {\n  // Size styles\n  const sizeStyles = {\n    sm: 'text-2xl',\n    md: 'text-4xl',\n    lg: 'text-6xl'\n  };\n\n  const spinnerClasses = `fas fa-spinner fa-spin ${sizeStyles[size]} text-blue-600`;\n\n  const content = (\n    <div className=\"flex flex-col items-center justify-center\">\n      <i className={spinnerClasses}></i>\n      {message && (\n        <p className=\"mt-4 text-gray-600 font-medium\">{message}</p>\n      )}\n    </div>\n  );\n\n  if (fullScreen) {\n    return (\n      <div className={`fixed inset-0 bg-white bg-opacity-90 flex items-center justify-center z-50 ${className}`}>\n        {content}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`flex items-center justify-center py-12 ${className}`}>\n      {content}\n    </div>\n  );\n};\n\nLoadingState.propTypes = {\n  message: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'md', 'lg']),\n  fullScreen: PropTypes.bool,\n  className: PropTypes.string\n};\n\nexport default LoadingState;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,SAAAC,MAAA,IAAAC,OAAA;AASA,MAAMC,YAAY,GAAGA,CAAC;EACpBC,OAAO,GAAG,aAAa;EACvBC,IAAI,GAAG,IAAI;EACXC,UAAU,GAAG,KAAK;EAClBC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ;EACA,MAAMC,UAAU,GAAG;IACjBC,EAAE,EAAE,UAAU;IACdC,EAAE,EAAE,UAAU;IACdC,EAAE,EAAE;EACN,CAAC;EAED,MAAMC,cAAc,GAAG,0BAA0BJ,UAAU,CAACH,IAAI,CAAC,gBAAgB;EAEjF,MAAMQ,OAAO,gBACXX,OAAA;IAAKK,SAAS,EAAC,2CAA2C;IAAAO,QAAA,gBACxDZ,OAAA;MAAGK,SAAS,EAAEK;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCd,OAAO,iBACNF,OAAA;MAAGK,SAAS,EAAC,gCAAgC;MAAAO,QAAA,EAAEV;IAAO;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CACN;EAED,IAAIZ,UAAU,EAAE;IACd,oBACEJ,OAAA;MAAKK,SAAS,EAAE,8EAA8EA,SAAS,EAAG;MAAAO,QAAA,EACvGD;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEV;EAEA,oBACEhB,OAAA;IAAKK,SAAS,EAAE,0CAA0CA,SAAS,EAAG;IAAAO,QAAA,EACnED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACC,EAAA,GArCIhB,YAAY;AAuClBA,YAAY,CAACiB,SAAS,GAAG;EACvBhB,OAAO,EAAEJ,SAAS,CAACqB,MAAM;EACzBhB,IAAI,EAAEL,SAAS,CAACsB,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;EACzChB,UAAU,EAAEN,SAAS,CAACuB,IAAI;EAC1BhB,SAAS,EAAEP,SAAS,CAACqB;AACvB,CAAC;AAED,eAAelB,YAAY;AAAC,IAAAgB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}