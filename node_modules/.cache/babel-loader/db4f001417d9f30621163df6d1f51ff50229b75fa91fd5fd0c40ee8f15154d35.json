{"ast":null,"code":"import { ROLES } from './api';\nimport { dbService } from './database';\nconst STORAGE_BASE_URL = process.env.REACT_APP_STORAGE_BASE_URL;\nclass StorageService {\n  async isAdmin() {\n    return await dbService.hasPermission(ROLES.ADMINISTRADOR);\n  }\n  async upload(file, path = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n    if (file.size > 10 * 1024 * 1024) {\n      throw new Error('File size exceeds 10MB limit');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n  async deleteFile(fullPath) {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n  async listFiles(path = '') {\n    // Storage service no longer available - return empty result\n    return {\n      files: [],\n      folders: []\n    };\n  }\n  async deleteFolder(path) {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n  async createFolder(folderName, parentPath = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n  async renameFolder(oldName, newName, parentPath = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n  async getDownloadUrl(path) {\n    // Return public URL\n    return STORAGE_BASE_URL + '/' + path;\n  }\n}\nexport const storage = new StorageService();\nexport default storage;","map":{"version":3,"names":["ROLES","dbService","STORAGE_BASE_URL","process","env","REACT_APP_STORAGE_BASE_URL","StorageService","isAdmin","hasPermission","ADMINISTRADOR","upload","file","path","Error","size","deleteFile","fullPath","listFiles","files","folders","deleteFolder","createFolder","folderName","parentPath","renameFolder","oldName","newName","getDownloadUrl","storage"],"sources":["/Users/todoporunalma/Desktop/ol/corporacion_react/src/shared/services/storage.js"],"sourcesContent":["import { ROLES } from './api';\nimport { dbService } from './database';\n\nconst STORAGE_BASE_URL = process.env.REACT_APP_STORAGE_BASE_URL;\n\nclass StorageService {\n  async isAdmin() {\n    return await dbService.hasPermission(ROLES.ADMINISTRADOR);\n  }\n\n  async upload(file, path = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    if (file.size > 10 * 1024 * 1024) {\n      throw new Error('File size exceeds 10MB limit');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n\n  async deleteFile(fullPath) {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n\n  async listFiles(path = '') {\n    // Storage service no longer available - return empty result\n    return {\n      files: [],\n      folders: []\n    };\n  }\n\n  async deleteFolder(path) {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n\n  async createFolder(folderName, parentPath = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n\n  async renameFolder(oldName, newName, parentPath = '') {\n    if (!(await this.isAdmin())) {\n      throw new Error('Permission denied: Admin access required');\n    }\n\n    // Storage service no longer available - return error\n    throw new Error('Storage service is not available. Dashboard backend connection removed.');\n  }\n\n  async getDownloadUrl(path) {\n    // Return public URL\n    return STORAGE_BASE_URL + '/' + path;\n  }\n}\n\nexport const storage = new StorageService();\nexport default storage;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAC7B,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;AAE/D,MAAMC,cAAc,CAAC;EACnB,MAAMC,OAAOA,CAAA,EAAG;IACd,OAAO,MAAMN,SAAS,CAACO,aAAa,CAACR,KAAK,CAACS,aAAa,CAAC;EAC3D;EAEA,MAAMC,MAAMA,CAACC,IAAI,EAAEC,IAAI,GAAG,EAAE,EAAE;IAC5B,IAAI,EAAE,MAAM,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIM,KAAK,CAAC,0CAA0C,CAAC;IAC7D;IAEA,IAAIF,IAAI,CAACG,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,EAAE;MAChC,MAAM,IAAID,KAAK,CAAC,8BAA8B,CAAC;IACjD;;IAEA;IACA,MAAM,IAAIA,KAAK,CAAC,yEAAyE,CAAC;EAC5F;EAEA,MAAME,UAAUA,CAACC,QAAQ,EAAE;IACzB,IAAI,EAAE,MAAM,IAAI,CAACT,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIM,KAAK,CAAC,0CAA0C,CAAC;IAC7D;;IAEA;IACA,MAAM,IAAIA,KAAK,CAAC,yEAAyE,CAAC;EAC5F;EAEA,MAAMI,SAASA,CAACL,IAAI,GAAG,EAAE,EAAE;IACzB;IACA,OAAO;MACLM,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH;EAEA,MAAMC,YAAYA,CAACR,IAAI,EAAE;IACvB,IAAI,EAAE,MAAM,IAAI,CAACL,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIM,KAAK,CAAC,0CAA0C,CAAC;IAC7D;;IAEA;IACA,MAAM,IAAIA,KAAK,CAAC,yEAAyE,CAAC;EAC5F;EAEA,MAAMQ,YAAYA,CAACC,UAAU,EAAEC,UAAU,GAAG,EAAE,EAAE;IAC9C,IAAI,EAAE,MAAM,IAAI,CAAChB,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIM,KAAK,CAAC,0CAA0C,CAAC;IAC7D;;IAEA;IACA,MAAM,IAAIA,KAAK,CAAC,yEAAyE,CAAC;EAC5F;EAEA,MAAMW,YAAYA,CAACC,OAAO,EAAEC,OAAO,EAAEH,UAAU,GAAG,EAAE,EAAE;IACpD,IAAI,EAAE,MAAM,IAAI,CAAChB,OAAO,CAAC,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAIM,KAAK,CAAC,0CAA0C,CAAC;IAC7D;;IAEA;IACA,MAAM,IAAIA,KAAK,CAAC,yEAAyE,CAAC;EAC5F;EAEA,MAAMc,cAAcA,CAACf,IAAI,EAAE;IACzB;IACA,OAAOV,gBAAgB,GAAG,GAAG,GAAGU,IAAI;EACtC;AACF;AAEA,OAAO,MAAMgB,OAAO,GAAG,IAAItB,cAAc,CAAC,CAAC;AAC3C,eAAesB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}