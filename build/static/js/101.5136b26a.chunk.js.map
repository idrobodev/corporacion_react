{"version":3,"file":"static/js/101.5136b26a.chunk.js","mappings":"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","sources":["pages/Dashboard/Acudientes.jsx","shared/utils/validationUtils.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService } from \"shared/services\";\nimport { FilterBar } from \"components/UI/Filter\";\nimport { StatsGrid } from \"components/UI/Card\";\nimport { DataTable, ActionDropdown } from \"components/UI/Table\";\nimport { ViewDetailsModal, EditFormModal, CreateFormModal } from \"components/common/CRUDModals\";\nimport { useFilters, useModal } from \"shared/hooks\";\nimport { \n  validateAcudienteDocumentoUnico, \n  validateEmail,\n  validateParticipanteExists \n} from \"shared/utils/validationUtils\";\n\nconst AcudientesComponent = () => {\n  const [acudientes, setAcudientes] = useState([]);\n  const [participantes, setParticipantes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Use custom hooks\n  const { filters: filtros, setFilter, clearFilters } = useFilters({\n    participante: \"Todos\",\n    busqueda: \"\"\n  });\n  \n  const verModal = useModal();\n  const editarModal = useModal();\n  const crearModal = useModal();\n\n\n  // Función para cargar acudientes\n  const loadAcudientes = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Cargando acudientes...');\n\n      const result = await dbService.getAcudientes();\n      console.log('📊 Resultado acudientes:', result);\n\n      if (result.error) {\n        throw new Error(result.error.message || 'Error al cargar acudientes');\n      }\n\n      const acudientesData = Array.isArray(result.data?.data) ? result.data.data : [];\n      setAcudientes(acudientesData);\n      console.log('✅ Acudientes cargados:', acudientesData.length);\n    } catch (err) {\n      console.error('❌ Error cargando acudientes:', err);\n      setError(err.message || 'Error desconocido al cargar acudientes');\n      setAcudientes([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para cargar participantes\n  const loadParticipantes = useCallback(async () => {\n    try {\n      console.log('🔄 Cargando participantes...');\n      const result = await dbService.getParticipantes();\n\n      if (result.error) {\n        console.error('Error cargando participantes:', result.error);\n        setParticipantes([]);\n        return;\n      }\n\n      const participantesData = Array.isArray(result.data?.data) ? result.data.data : [];\n      setParticipantes(participantesData);\n      console.log('✅ Participantes cargados:', participantesData.length);\n    } catch (err) {\n      console.error('❌ Error cargando participantes:', err);\n      setParticipantes([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadAcudientes();\n    loadParticipantes();\n  }, [loadAcudientes, loadParticipantes]);\n\n  // Filtrar acudientes por nombre, documento y participante\n  const filteredAcudientes = useMemo(() => {\n    const safeAcudientes = Array.isArray(acudientes) ? acudientes : [];\n    let filtered = safeAcudientes;\n\n    // Filtrar por participante\n    if (filtros.participante !== \"Todos\") {\n      filtered = filtered.filter(a => {\n        const participanteId = a.id_participante || a.participante?.id_participante;\n        return participanteId && participanteId.toString() === filtros.participante;\n      });\n    }\n\n    // Filtrar por búsqueda (solo documento)\n    if (filtros.busqueda) {\n      filtered = filtered.filter(a =>\n        (a.numero_documento || '').includes(filtros.busqueda)\n      );\n    }\n\n    return filtered;\n  }, [acudientes, filtros]);\n\n  // Estadísticas\n  const statsData = useMemo(() => [\n    {\n      title: \"Total Acudientes\",\n      value: filteredAcudientes.length,\n      icon: \"fas fa-user-friends\",\n      color: \"blue\"\n    }\n  ], [filteredAcudientes]);\n\n  // Función para exportar a PDF\n  const handleExportPDF = useCallback(() => {\n    const printWindow = window.open('', '_blank');\n    const currentDate = new Date().toLocaleDateString('es-ES');\n\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Lista de Acudientes - ${currentDate}</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              margin: 20px;\n              color: #333;\n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n              border-bottom: 2px solid #333;\n              padding-bottom: 20px;\n            }\n            .header h1 {\n              color: #7c3aed;\n              margin: 0;\n              font-size: 24px;\n            }\n            .filters {\n              margin-bottom: 20px;\n              background: #f8f9fa;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .filters h3 {\n              margin: 0 0 10px 0;\n              color: #495057;\n            }\n            .filters p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin-top: 20px;\n            }\n            th, td {\n              border: 1px solid #ddd;\n              padding: 8px 12px;\n              text-align: left;\n            }\n            th {\n              background-color: #f8f9fa;\n              font-weight: bold;\n              color: #495057;\n            }\n            tr:nth-child(even) {\n              background-color: #f9f9f9;\n            }\n            .stats {\n              margin-top: 30px;\n              background: #ede9fe;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .stats h3 {\n              margin: 0 0 10px 0;\n              color: #7c3aed;\n            }\n            .stats p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            @media print {\n              body { margin: 0; }\n              .no-print { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Lista de Acudientes</h1>\n            <p>Corporación Todo por un Alma</p>\n            <p>Fecha de generación: ${currentDate}</p>\n          </div>\n\n          <div class=\"filters\">\n            <h3>Filtros aplicados:</h3>\n            <p><strong>Participante:</strong> ${filtros.participante === 'Todos' ? 'Todos los participantes' : (() => {\n              const p = participantes.find(part => (part.id_participante || part.id).toString() === filtros.participante);\n              return p?.nombre || `${p?.nombres || ''} ${p?.apellidos || ''}`.trim() || 'N/A';\n            })()}</p>\n            ${filtros.busqueda ? `<p><strong>Búsqueda:</strong> \"${filtros.busqueda}\"</p>` : ''}\n          </div>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Acudiente</th>\n                <th>Documento</th>\n                <th>Participante</th>\n                <th>Parentesco</th>\n                <th>Teléfono</th>\n                <th>Email</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${filteredAcudientes.map(acudiente => {\n                const participante = participantes.find(p =>\n                  (p.id_participante || p.id) === acudiente.id_participante\n                );\n                return `\n                  <tr>\n                    <td>${`${acudiente.nombres || ''} ${acudiente.apellidos || ''}`.trim() || 'N/A'}</td>\n                    <td>${acudiente.tipo_documento || 'CC'}: ${acudiente.numero_documento || 'N/A'}</td>\n                    <td>${participante?.nombre || `${participante?.nombres || ''} ${participante?.apellidos || ''}`.trim() || 'N/A'}</td>\n                    <td>${acudiente.parentesco || 'N/A'}</td>\n                    <td>${acudiente.telefono || 'N/A'}</td>\n                    <td>${acudiente.email || 'N/A'}</td>\n                  </tr>\n                `;\n              }).join('')}\n            </tbody>\n          </table>\n\n          <div class=\"stats\">\n            <h3>Estadísticas:</h3>\n            <p><strong>Total de acudientes:</strong> ${filteredAcudientes.length}</p>\n          </div>\n\n          <script>\n            window.onload = function() {\n              window.print();\n              setTimeout(function() {\n                window.close();\n              }, 1000);\n            }\n          </script>\n        </body>\n      </html>\n    `;\n\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }, [filtros, filteredAcudientes, participantes]);\n\n  if (loading) {\n    return (\n      <DashboardLayout title=\"Acudientes\" subtitle=\"Gestión de acudientes\" loading={true} loadingText=\"Cargando acudientes...\" />\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout title=\"Acudientes\" subtitle=\"Error al cargar datos\" loading={false}>\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading acudientes: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  // Configuración de filtros\n  const filterConfig = [\n    {\n      type: 'select',\n      name: 'participante',\n      label: 'Participante',\n      options: [\n        { value: 'Todos', label: 'Todos los Participantes' },\n        ...participantes.map(p => ({\n          value: (p.id_participante || p.id).toString(),\n          label: p.nombre || `${p.nombres} ${p.apellidos}` || 'Sin nombre'\n        }))\n      ]\n    },\n    {\n      type: 'search',\n      name: 'busqueda',\n      label: 'Búsqueda por Documento',\n      placeholder: 'Número de documento...'\n    }\n  ];\n\n  return (\n    <DashboardLayout \n      title=\"Gestión de Acudientes\" \n      subtitle=\"Administra los acudientes de los participantes\"\n      extraActions={\n        <div className=\"flex space-x-3\">\n          <button\n            onClick={handleExportPDF}\n            className=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors\"\n            title=\"Exportar lista filtrada a PDF\"\n          >\n            <i className=\"fas fa-file-pdf mr-2\"></i>\n            Exportar PDF\n          </button>\n          <button\n            onClick={() => crearModal.openModal()}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <i className=\"fas fa-plus mr-2\"></i>\n            Nuevo Acudiente\n          </button>\n        </div>\n      }\n    >\n      <section className=\"px-4 md:px-6 py-4 md:py-6\">\n        <FilterBar\n          filters={filterConfig}\n          values={filtros}\n          onChange={setFilter}\n          onClear={clearFilters}\n          showClearButton={true}\n        />\n\n        {/* Estadísticas Rápidas */}\n        <div className=\"mt-6\">\n          <StatsGrid\n            stats={statsData}\n            columns={3}\n            gap=\"md\"\n          />\n        </div>\n\n        {/* Tabla de Acudientes */}\n        <div className=\"mt-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">Lista de Acudientes</h3>\n          </div>\n\n          {filteredAcudientes.length === 0 ? (\n            <div className=\"p-12 text-center\">\n              <i className=\"fas fa-user-friends text-gray-300 text-4xl mb-4\"></i>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No se encontraron acudientes</h3>\n              <p className=\"text-gray-500\">No hay acudientes que coincidan con los filtros aplicados.</p>\n            </div>\n          ) : (\n            <DataTable\n              keyExtractor={(row) => row.id_acudiente || row.id}\n              columns={[\n                {\n                  key: 'acudiente',\n                  header: 'Acudiente',\n                  render: (acudiente) => (\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center mr-3\">\n                        <i className=\"fas fa-user-friends text-purple-600\"></i>\n                      </div>\n                      <div className=\"min-w-0 flex-1\">\n                        <p className=\"font-medium text-gray-900 truncate\">\n                          {`${acudiente.nombres || ''} ${acudiente.apellidos || ''}`.trim() || 'Sin nombre'}\n                        </p>\n                        <p className=\"text-sm text-gray-500 truncate\">\n                          {acudiente.tipo_documento || 'CC'}: {acudiente.numero_documento || 'N/A'}\n                        </p>\n                        {/* Mobile-only contact info */}\n                        <div className=\"md:hidden mt-1 space-y-1\">\n                          <p className=\"text-xs text-gray-600 flex items-center\">\n                            <i className=\"fas fa-phone text-gray-400 mr-1 text-xs\"></i>\n                            {acudiente.telefono || 'N/A'}\n                          </p>\n                          <p className=\"text-xs text-gray-600 flex items-center\">\n                            <i className=\"fas fa-envelope text-gray-400 mr-1 text-xs\"></i>\n                            {acudiente.email || 'N/A'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                },\n                {\n                  key: 'participante',\n                  header: 'Participante',\n                  render: (acudiente) => {\n                    // Buscar el participante asociado\n                    const participante = participantes.find(p =>\n                      (p.id_participante || p.id) === acudiente.id_participante\n                    );\n                    return (\n                      <div className=\"min-w-0\">\n                        <p className=\"text-gray-900 truncate\">\n                          {participante?.nombre || `${participante?.nombres || ''} ${participante?.apellidos || ''}`.trim() || 'N/A'}\n                        </p>\n                        <p className=\"text-sm text-gray-500 truncate\">\n                          {acudiente.parentesco || 'Sin parentesco'}\n                        </p>\n                      </div>\n                    );\n                  }\n                },\n                {\n                  key: 'contacto',\n                  header: 'Contacto',\n                  hideInMobile: true,\n                  render: (acudiente) => (\n                    <div className=\"min-w-0\">\n                      <p className=\"text-gray-900 flex items-center\">\n                        <i className=\"fas fa-phone text-gray-400 mr-2\"></i>\n                        <span className=\"truncate\">{acudiente.telefono || 'N/A'}</span>\n                      </p>\n                      <p className=\"text-sm text-gray-500 flex items-center mt-1\">\n                        <i className=\"fas fa-envelope text-gray-400 mr-2\"></i>\n                        <span className=\"truncate\">{acudiente.email || 'N/A'}</span>\n                      </p>\n                    </div>\n                  )\n                },\n                {\n                  key: 'acciones',\n                  header: 'Acciones',\n                  render: (acudiente) => (\n                    <ActionDropdown\n                      actions={[\n                        {\n                          label: 'Ver detalles',\n                          icon: 'fas fa-eye',\n                          onClick: () => {\n                            verModal.setData(acudiente);\n                            verModal.open();\n                          }\n                        },\n                        {\n                          label: 'Editar',\n                          icon: 'fas fa-edit',\n                          onClick: () => {\n                            editarModal.setData(acudiente);\n                            editarModal.open();\n                          }\n                        }\n                      ]}\n                    />\n                  )\n                }\n              ]}\n              data={filteredAcudientes}\n            />\n          )}\n        </div>\n        </div>\n      </section>\n\n      {/* Modales */}\n      <ViewDetailsModal\n        isOpen={verModal.isOpen}\n        onClose={verModal.closeModal}\n        title=\"Detalles del Acudiente\"\n        data={verModal.data ? [\n          { label: 'ID', value: verModal.data.id_acudiente || verModal.data.id },\n          { \n            label: 'Nombre Completo', \n            value: `${verModal.data.nombres || ''} ${verModal.data.apellidos || ''}`.trim() \n          },\n          { \n            label: 'Documento', \n            value: `${verModal.data.tipo_documento || 'CC'}: ${verModal.data.numero_documento || 'N/A'}` \n          },\n          { label: 'Parentesco', value: verModal.data.parentesco || 'N/A' },\n          { label: 'Teléfono', value: verModal.data.telefono || 'N/A' },\n          { label: 'Email', value: verModal.data.email || 'N/A' },\n          { label: 'Dirección', value: verModal.data.direccion || 'N/A' },\n          { \n            label: 'Participante', \n            value: (() => {\n              const participante = participantes.find(p => \n                (p.id_participante || p.id) === verModal.data.id_participante\n              );\n              return participante?.nombre || `${participante?.nombres || ''} ${participante?.apellidos || ''}`.trim() || 'N/A';\n            })()\n          }\n        ] : []}\n      />\n\n      <EditFormModal\n        isOpen={editarModal.isOpen}\n        onClose={editarModal.closeModal}\n        title=\"Editar Acudiente\"\n        onSubmit={async (formData) => {\n          // Validar documento único\n          const acudienteId = editarModal.data.id_acudiente || editarModal.data.id;\n          const documentoValidation = await validateAcudienteDocumentoUnico(formData.numero_documento, acudienteId);\n          if (!documentoValidation.isValid) {\n            throw new Error(documentoValidation.error);\n          }\n\n          // Validar email\n          const emailValidation = validateEmail(formData.email);\n          if (!emailValidation.isValid) {\n            throw new Error(emailValidation.error);\n          }\n\n          const result = await dbService.updateAcudiente(\n            editarModal.data.id_acudiente || editarModal.data.id, \n            formData\n          );\n          if (result.error) {\n            throw new Error(result.error.message || 'Error al actualizar acudiente');\n          }\n          await loadAcudientes();\n        }}\n        initialData={editarModal.data}\n        fields={[\n          { \n            name: 'tipo_documento', \n            label: 'Tipo de Documento', \n            type: 'select',\n            required: true,\n            options: [\n              { value: 'CC', label: 'Cédula de Ciudadanía' },\n              { value: 'TI', label: 'Tarjeta de Identidad' },\n              { value: 'CE', label: 'Cédula de Extranjería' },\n              { value: 'PASAPORTE', label: 'Pasaporte' }\n            ]\n          },\n          { \n            name: 'numero_documento', \n            label: 'Número de Documento', \n            type: 'text', \n            required: true,\n            placeholder: 'Número de documento'\n          },\n          { \n            name: 'nombres', \n            label: 'Nombres', \n            type: 'text', \n            required: true,\n            placeholder: 'Nombres del acudiente'\n          },\n          { \n            name: 'apellidos', \n            label: 'Apellidos', \n            type: 'text', \n            required: true,\n            placeholder: 'Apellidos del acudiente'\n          },\n          { \n            name: 'parentesco', \n            label: 'Parentesco', \n            type: 'text', \n            required: true,\n            placeholder: 'Ej: Madre, Padre, Hermano/a'\n          },\n          { \n            name: 'telefono', \n            label: 'Teléfono', \n            type: 'tel', \n            required: true,\n            placeholder: 'Número de teléfono'\n          },\n          { \n            name: 'email', \n            label: 'Email', \n            type: 'email', \n            required: true,\n            placeholder: 'correo@ejemplo.com'\n          },\n          { \n            name: 'direccion', \n            label: 'Dirección', \n            type: 'textarea', \n            required: true,\n            placeholder: 'Dirección completa'\n          }\n        ]}\n      />\n\n      <CreateFormModal\n        isOpen={crearModal.isOpen}\n        onClose={crearModal.closeModal}\n        title=\"Nuevo Acudiente\"\n        onSubmit={async (formData) => {\n          // Validar documento único\n          const documentoValidation = await validateAcudienteDocumentoUnico(formData.numero_documento);\n          if (!documentoValidation.isValid) {\n            throw new Error(documentoValidation.error);\n          }\n\n          // Validar email\n          const emailValidation = validateEmail(formData.email);\n          if (!emailValidation.isValid) {\n            throw new Error(emailValidation.error);\n          }\n\n          // Validar que el participante exista\n          const participanteValidation = await validateParticipanteExists(formData.id_participante);\n          if (!participanteValidation.isValid) {\n            throw new Error(participanteValidation.error);\n          }\n\n          const result = await dbService.createAcudiente(formData);\n          if (result.error) {\n            throw new Error(result.error.message || 'Error al crear acudiente');\n          }\n          await loadAcudientes();\n        }}\n        initialData={{\n          id_participante: '',\n          tipo_documento: 'CC',\n          numero_documento: '',\n          nombres: '',\n          apellidos: '',\n          parentesco: '',\n          telefono: '',\n          email: '',\n          direccion: ''\n        }}\n        fields={[\n          { \n            name: 'id_participante', \n            label: 'Participante', \n            type: 'select',\n            required: true,\n            options: [\n              { value: '', label: 'Seleccione un participante' },\n              ...participantes.map(p => ({\n                value: (p.id_participante || p.id).toString(),\n                label: p.nombre || `${p.nombres || ''} ${p.apellidos || ''}`.trim() || 'Sin nombre'\n              }))\n            ]\n          },\n          { \n            name: 'tipo_documento', \n            label: 'Tipo de Documento', \n            type: 'select',\n            required: true,\n            options: [\n              { value: 'CC', label: 'Cédula de Ciudadanía' },\n              { value: 'TI', label: 'Tarjeta de Identidad' },\n              { value: 'CE', label: 'Cédula de Extranjería' },\n              { value: 'PASAPORTE', label: 'Pasaporte' }\n            ]\n          },\n          { \n            name: 'numero_documento', \n            label: 'Número de Documento', \n            type: 'text', \n            required: true,\n            placeholder: 'Número de documento'\n          },\n          { \n            name: 'nombres', \n            label: 'Nombres', \n            type: 'text', \n            required: true,\n            placeholder: 'Nombres del acudiente'\n          },\n          { \n            name: 'apellidos', \n            label: 'Apellidos', \n            type: 'text', \n            required: true,\n            placeholder: 'Apellidos del acudiente'\n          },\n          { \n            name: 'parentesco', \n            label: 'Parentesco', \n            type: 'text', \n            required: true,\n            placeholder: 'Ej: Madre, Padre, Hermano/a'\n          },\n          { \n            name: 'telefono', \n            label: 'Teléfono', \n            type: 'tel', \n            required: true,\n            placeholder: 'Número de teléfono'\n          },\n          { \n            name: 'email', \n            label: 'Email', \n            type: 'email', \n            required: true,\n            placeholder: 'correo@ejemplo.com'\n          },\n          { \n            name: 'direccion', \n            label: 'Dirección', \n            type: 'textarea', \n            required: true,\n            placeholder: 'Dirección completa'\n          }\n        ]}\n      />\n    </DashboardLayout>\n  );\n};\n\n// Wrap with React.memo to prevent unnecessary re-renders\nconst Acudientes = React.memo(AcudientesComponent);\n\nexport default Acudientes;\n","/**\n * Validation Utilities\n * Centralized validation functions for the application\n */\n\nimport { dbService } from '../services';\n\n/**\n * Validate that a documento number is unique for participantes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} participanteId - ID of current participante (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteDocumentoUnico = async (numeroDocumento, participanteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => {\n        const pId = p.id || p.id_participante;\n        return p.numero_documento === numeroDocumento && pId !== participanteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro participante' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate that a documento number is unique for acudientes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} acudienteId - ID of current acudiente (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteDocumentoUnico = async (numeroDocumento, acudienteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => {\n        const aId = a.id || a.id_acudiente;\n        return a.numero_documento === numeroDocumento && aId !== acudienteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro acudiente' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate email format\n * @param {string} email - Email to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateEmail = (email) => {\n  if (!email || !email.trim()) {\n    return { isValid: false, error: 'El email es requerido' };\n  }\n\n  // Basic email regex pattern\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  if (!emailRegex.test(email)) {\n    return { \n      isValid: false, \n      error: 'El formato del email no es válido' \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate date format and ensure it's not in the future\n * @param {string} fecha - Date string to validate\n * @param {string} fieldName - Name of the field for error messages\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFecha = (fecha, fieldName = 'fecha') => {\n  if (!fecha) {\n    return { isValid: false, error: `La ${fieldName} es requerida` };\n  }\n\n  const date = new Date(fecha);\n  const today = new Date();\n  \n  // Reset time to compare only dates\n  today.setHours(23, 59, 59, 999);\n\n  // Check if date is valid\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no es válida` \n    };\n  }\n\n  // Check if date is not in the future\n  if (date > today) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no puede ser futura` \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate fecha_nacimiento specifically\n * @param {string} fechaNacimiento - Birth date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaNacimiento = (fechaNacimiento) => {\n  return validateFecha(fechaNacimiento, 'fecha de nacimiento');\n};\n\n/**\n * Validate fecha_ingreso specifically\n * @param {string} fechaIngreso - Entry date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaIngreso = (fechaIngreso) => {\n  return validateFecha(fechaIngreso, 'fecha de ingreso');\n};\n\n/**\n * Validate that a participante exists\n * @param {number} participanteId - ID of participante to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteExists = async (participanteId) => {\n  try {\n    if (!participanteId) {\n      return { isValid: false, error: 'Debe seleccionar un participante' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => \n        (p.id_participante || p.id) === parseInt(participanteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El participante seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante exists:', err);\n    return { isValid: false, error: 'Error al validar el participante' };\n  }\n};\n\n/**\n * Validate that a sede exists\n * @param {number} sedeId - ID of sede to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateSedeExists = async (sedeId) => {\n  try {\n    if (!sedeId) {\n      return { isValid: false, error: 'Debe seleccionar una sede' };\n    }\n\n    const result = await dbService.getSedes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(s => \n        (s.id_sede || s.id) === parseInt(sedeId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'La sede seleccionada no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating sede exists:', err);\n    return { isValid: false, error: 'Error al validar la sede' };\n  }\n};\n\n/**\n * Validate that an acudiente exists\n * @param {number} acudienteId - ID of acudiente to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteExists = async (acudienteId) => {\n  try {\n    if (!acudienteId) {\n      return { isValid: false, error: 'Debe seleccionar un acudiente' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => \n        (a.id_acudiente || a.id) === parseInt(acudienteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El acudiente seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente exists:', err);\n    return { isValid: false, error: 'Error al validar el acudiente' };\n  }\n};\n\n/**\n * Validate mensualidad relationships (participante and acudiente must exist)\n * @param {number} participanteId - ID of participante\n * @param {number} acudienteId - ID of acudiente\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateMensualidadRelations = async (participanteId, acudienteId) => {\n  // Validate participante\n  const participanteValidation = await validateParticipanteExists(participanteId);\n  if (!participanteValidation.isValid) {\n    return participanteValidation;\n  }\n\n  // Validate acudiente\n  const acudienteValidation = await validateAcudienteExists(acudienteId);\n  if (!acudienteValidation.isValid) {\n    return acudienteValidation;\n  }\n\n  return { isValid: true, error: null };\n};\n"],"names":["AcudientesComponent","acudientes","setAcudientes","useState","participantes","setParticipantes","loading","setLoading","error","setError","filters","filtros","setFilter","clearFilters","useFilters","participante","busqueda","verModal","useModal","editarModal","crearModal","loadAcudientes","useCallback","async","_result$data","console","log","result","dbService","getAcudientes","Error","message","acudientesData","Array","isArray","data","length","err","loadParticipantes","_result$data2","getParticipantes","participantesData","useEffect","filteredAcudientes","useMemo","filtered","filter","a","_a$participante","participanteId","id_participante","toString","numero_documento","includes","statsData","title","value","icon","color","handleExportPDF","printWindow","window","open","currentDate","Date","toLocaleDateString","htmlContent","concat","p","find","part","id","nombre","nombres","apellidos","trim","map","acudiente","tipo_documento","parentesco","telefono","email","join","document","write","close","_jsx","DashboardLayout","subtitle","loadingText","children","className","_jsxs","filterConfig","type","name","label","options","placeholder","extraActions","onClick","openModal","FilterBar","values","onChange","onClear","showClearButton","StatsGrid","stats","columns","gap","DataTable","keyExtractor","row","id_acudiente","key","header","render","hideInMobile","ActionDropdown","actions","setData","ViewDetailsModal","isOpen","onClose","closeModal","direccion","EditFormModal","onSubmit","acudienteId","documentoValidation","validateAcudienteDocumentoUnico","formData","isValid","emailValidation","validateEmail","updateAcudiente","initialData","fields","required","CreateFormModal","participanteValidation","validateParticipanteExists","createAcudiente","React","validateParticipanteDocumentoUnico","numeroDocumento","arguments","undefined","some","pId","aId","test","validateFecha","fecha","fieldName","date","today","setHours","isNaN","getTime","validateFechaNacimiento","fechaNacimiento","validateFechaIngreso","fechaIngreso","parseInt","validateSedeExists","sedeId","getSedes","s","id_sede","validateMensualidadRelations","acudienteValidation","validateAcudienteExists"],"sourceRoot":""}