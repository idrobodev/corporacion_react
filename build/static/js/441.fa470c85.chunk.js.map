{"version":3,"file":"static/js/441.fa470c85.chunk.js","mappings":"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","sources":["shared/utils/validationUtils.js","pages/Dashboard/Usuarios.jsx"],"sourcesContent":["/**\n * Validation Utilities\n * Centralized validation functions for the application\n */\n\nimport { dbService } from '../services';\n\n/**\n * Validate that a documento number is unique for participantes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} participanteId - ID of current participante (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteDocumentoUnico = async (numeroDocumento, participanteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => {\n        const pId = p.id || p.id_participante;\n        return p.numero_documento === numeroDocumento && pId !== participanteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro participante' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate that a documento number is unique for acudientes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} acudienteId - ID of current acudiente (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteDocumentoUnico = async (numeroDocumento, acudienteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => {\n        const aId = a.id || a.id_acudiente;\n        return a.numero_documento === numeroDocumento && aId !== acudienteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro acudiente' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate email format\n * @param {string} email - Email to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateEmail = (email) => {\n  if (!email || !email.trim()) {\n    return { isValid: false, error: 'El email es requerido' };\n  }\n\n  // Basic email regex pattern\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  if (!emailRegex.test(email)) {\n    return { \n      isValid: false, \n      error: 'El formato del email no es válido' \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate date format and ensure it's not in the future\n * @param {string} fecha - Date string to validate\n * @param {string} fieldName - Name of the field for error messages\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFecha = (fecha, fieldName = 'fecha') => {\n  if (!fecha) {\n    return { isValid: false, error: `La ${fieldName} es requerida` };\n  }\n\n  const date = new Date(fecha);\n  const today = new Date();\n  \n  // Reset time to compare only dates\n  today.setHours(23, 59, 59, 999);\n\n  // Check if date is valid\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no es válida` \n    };\n  }\n\n  // Check if date is not in the future\n  if (date > today) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no puede ser futura` \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate fecha_nacimiento specifically\n * @param {string} fechaNacimiento - Birth date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaNacimiento = (fechaNacimiento) => {\n  return validateFecha(fechaNacimiento, 'fecha de nacimiento');\n};\n\n/**\n * Validate fecha_ingreso specifically\n * @param {string} fechaIngreso - Entry date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaIngreso = (fechaIngreso) => {\n  return validateFecha(fechaIngreso, 'fecha de ingreso');\n};\n\n/**\n * Validate that a participante exists\n * @param {number} participanteId - ID of participante to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteExists = async (participanteId) => {\n  try {\n    if (!participanteId) {\n      return { isValid: false, error: 'Debe seleccionar un participante' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => \n        (p.id_participante || p.id) === parseInt(participanteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El participante seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante exists:', err);\n    return { isValid: false, error: 'Error al validar el participante' };\n  }\n};\n\n/**\n * Validate that a sede exists\n * @param {number} sedeId - ID of sede to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateSedeExists = async (sedeId) => {\n  try {\n    if (!sedeId) {\n      return { isValid: false, error: 'Debe seleccionar una sede' };\n    }\n\n    const result = await dbService.getSedes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(s => \n        (s.id_sede || s.id) === parseInt(sedeId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'La sede seleccionada no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating sede exists:', err);\n    return { isValid: false, error: 'Error al validar la sede' };\n  }\n};\n\n/**\n * Validate that an acudiente exists\n * @param {number} acudienteId - ID of acudiente to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteExists = async (acudienteId) => {\n  try {\n    if (!acudienteId) {\n      return { isValid: false, error: 'Debe seleccionar un acudiente' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => \n        (a.id_acudiente || a.id) === parseInt(acudienteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El acudiente seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente exists:', err);\n    return { isValid: false, error: 'Error al validar el acudiente' };\n  }\n};\n\n/**\n * Validate mensualidad relationships (participante and acudiente must exist)\n * @param {number} participanteId - ID of participante\n * @param {number} acudienteId - ID of acudiente\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateMensualidadRelations = async (participanteId, acudienteId) => {\n  // Validate participante\n  const participanteValidation = await validateParticipanteExists(participanteId);\n  if (!participanteValidation.isValid) {\n    return participanteValidation;\n  }\n\n  // Validate acudiente\n  const acudienteValidation = await validateAcudienteExists(acudienteId);\n  if (!acudienteValidation.isValid) {\n    return acudienteValidation;\n  }\n\n  return { isValid: true, error: null };\n};\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService, ROLES } from \"shared/services\";\nimport { FilterBar } from \"components/UI/Filter\";\nimport { StatsGrid } from \"components/UI/Card\";\nimport { DataTable } from \"components/UI/Table\";\nimport { ViewDetailsModal, EditFormModal, CreateFormModal } from \"components/common/CRUDModals\";\nimport { useFilters, useModal } from \"shared/hooks\";\nimport { validateEmail } from \"shared/utils/validationUtils\";\n\nconst UsuariosComponent = () => {\n  const [usuarios, setUsuarios] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [canEdit, setCanEdit] = useState(false);\n\n  // Use custom hooks\n  const { filters: filtros, setFilter, clearFilters } = useFilters({\n    rol: \"Todos\",\n    busqueda: \"\"\n  });\n\n  const verModal = useModal();\n  const editarModal = useModal();\n  const crearModal = useModal();\n\n  // Función para cargar usuarios\n  const loadUsuarios = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Cargando usuarios...');\n\n      const result = await dbService.getUsuarios();\n      console.log('📊 Resultado usuarios:', result);\n\n      if (result.error) {\n        throw new Error(result.error.message || 'Error al cargar usuarios');\n      }\n\n      // La respuesta puede ser {data: [...], error: null} o {data: {data: [...]}, error: null}\n      let usuariosData = [];\n      if (Array.isArray(result.data)) {\n        usuariosData = result.data;\n      } else if (Array.isArray(result.data?.data)) {\n        usuariosData = result.data.data;\n      } else {\n        usuariosData = [];\n      }\n\n      setUsuarios(usuariosData);\n      console.log('✅ Usuarios cargados:', usuariosData.length);\n    } catch (err) {\n      console.error('❌ Error cargando usuarios:', err);\n      setError(err.message || 'Error desconocido al cargar usuarios');\n      setUsuarios([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Exponer funciones globalmente para el menú desplegable\n  useEffect(() => {\n    window.verModal = verModal;\n    window.editarModal = editarModal;\n    window.deleteUser = async (userId) => {\n      try {\n        const result = await dbService.deleteUsuario(userId);\n        if (result.error) {\n          alert('Error al eliminar usuario: ' + result.error.message);\n        } else {\n          alert('Usuario eliminado exitosamente');\n          await loadUsuarios();\n        }\n      } catch (error) {\n        alert('Error al eliminar usuario: ' + error.message);\n      }\n    };\n\n    return () => {\n      delete window.verModal;\n      delete window.editarModal;\n      delete window.deleteUser;\n    };\n  }, [verModal, editarModal, loadUsuarios]);\n\n  // Cargar usuario actual y verificar permisos\n   useEffect(() => {\n     const loadCurrentUser = async () => {\n       try {\n         console.log('🔐 Verificando permisos de administrador...');\n         // Verificar si tiene permisos de administrador\n         const hasPermission = await dbService.hasPermission(ROLES.ADMINISTRADOR);\n         console.log('✅ Permisos de administrador obtenidos:', hasPermission);\n         setCanEdit(hasPermission);\n         console.log('🎯 canEdit establecido como:', hasPermission);\n       } catch (err) {\n         console.error('❌ Error cargando permisos:', err);\n         setCanEdit(false);\n       }\n     };\n\n     loadCurrentUser();\n     loadUsuarios();\n   }, [loadUsuarios]);\n\n  // Filtrar usuarios\n  const filteredUsuarios = useMemo(() => {\n    const safeUsuarios = Array.isArray(usuarios) ? usuarios : [];\n    let filtered = safeUsuarios;\n\n    if (filtros.rol !== \"Todos\") {\n      filtered = filtered.filter(u => (u.rol || u.role) === filtros.rol);\n    }\n    if (filtros.busqueda) {\n      filtered = filtered.filter(u =>\n        (u.email || '').toLowerCase().includes(filtros.busqueda.toLowerCase())\n      );\n    }\n    return filtered;\n  }, [usuarios, filtros]);\n\n  // Estadísticas\n  const statsData = useMemo(() => [\n    {\n      title: \"Total Usuarios\",\n      value: filteredUsuarios.length,\n      icon: \"fas fa-users\",\n      color: \"blue\"\n    }\n  ], [filteredUsuarios]);\n\n  if (loading) {\n    return (\n      <DashboardLayout title=\"Usuarios\" subtitle=\"Gestión de usuarios\" loading={true} loadingText=\"Cargando usuarios...\" />\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout title=\"Usuarios\" subtitle=\"Error al cargar datos\" loading={false}>\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading usuarios del sistema: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  // Verificar permisos de acceso a la página\n  if (!canEdit) {\n    return (\n      <DashboardLayout title=\"Usuarios\" subtitle=\"Acceso denegado\">\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-8 text-center max-w-md\">\n            <i className=\"fas fa-lock text-yellow-600 text-5xl mb-4\"></i>\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Acceso Denegado</h3>\n            <p className=\"text-gray-600\">No tienes permisos para acceder a esta página. Solo los administradores pueden gestionar usuarios.</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  const filterConfig = [\n    {\n      type: 'select',\n      name: 'rol',\n      label: 'Rol',\n      options: [\n        { value: 'Todos', label: 'Todos los Roles' },\n        { value: ROLES.ADMINISTRADOR, label: 'Administrador' },\n        { value: ROLES.CONSULTA, label: 'Consulta' }\n      ]\n    },\n    {\n      type: 'search',\n      name: 'busqueda',\n      label: 'Búsqueda',\n      placeholder: 'Buscar por email...'\n    }\n  ];\n\n  return (\n    <DashboardLayout\n      title=\"Gestión de Usuarios del sistema\"\n      subtitle=\"Administra los usuarios del sistema\"\n      extraActions={\n        canEdit && (\n          <button\n            onClick={() => crearModal.openModal()}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <i className=\"fas fa-plus mr-2\"></i>\n            Nuevo Usuario\n          </button>\n        )\n      }\n    >\n      <section className=\"px-4 md:px-6 py-4 md:py-6\">\n        <FilterBar\n          filters={filterConfig}\n          values={filtros}\n          onChange={setFilter}\n          onClear={clearFilters}\n          showClearButton={true}\n        />\n\n        {/* Estadísticas Rápidas */}\n        <div className=\"mt-6\">\n          <StatsGrid\n            stats={statsData}\n            columns={3}\n            gap=\"md\"\n          />\n        </div>\n\n        {/* Tabla de Usuarios */}\n        <div className=\"mt-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-800\">Lista de Usuarios del sistema</h3>\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  Gestiona los usuarios del sistema\n                </p>\n              </div>\n              {canEdit ? (\n                <span className=\"inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium bg-green-100 text-green-800\">\n                  <i className=\"fas fa-user-shield mr-2\"></i>\n                  Modo Administrador\n                </span>\n              ) : (\n                <span className=\"inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800\">\n                  <i className=\"fas fa-eye mr-2\"></i>\n                  Modo Solo Lectura\n                </span>\n              )}\n            </div>\n          </div>\n\n          {filteredUsuarios.length === 0 ? (\n            <div className=\"p-12 text-center\">\n              <i className=\"fas fa-users text-gray-300 text-4xl mb-4\"></i>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No se encontraron usuarios del sistema</h3>\n              <p className=\"text-gray-500\">No hay usuarios que coincidan con los filtros aplicados.</p>\n            </div>\n          ) : (\n            <DataTable\n              columns={[\n                {\n                  key: 'email',\n                  header: 'Email',\n                  render: (usuario) => (\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3\">\n                        <i className=\"fas fa-user text-blue-600\"></i>\n                      </div>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">{usuario.email}</p>\n                        <p className=\"text-sm text-gray-500\">ID: {usuario.id_usuario || usuario.id}</p>\n                      </div>\n                    </div>\n                  )\n                },\n                {\n                  key: 'rol',\n                  header: 'Rol',\n                  render: (usuario) => {\n                    const userRole = usuario.rol || usuario.role;\n                    return (\n                      <span className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${\n                        userRole === ROLES.ADMINISTRADOR || userRole === 'ADMINISTRADOR'\n                          ? 'bg-purple-100 text-purple-800'\n                          : 'bg-green-100 text-green-800'\n                      }`}>\n                        <i className={`fas ${\n                          userRole === ROLES.ADMINISTRADOR || userRole === 'ADMINISTRADOR' ? 'fa-user-shield' : 'fa-user'\n                        } mr-2`}></i>\n                        {userRole === ROLES.ADMINISTRADOR || userRole === 'ADMINISTRADOR' ? 'Administrador' : 'Consulta'}\n                      </span>\n                    );\n                  }\n                },\n                {\n                  key: 'acciones',\n                  header: 'Acciones',\n                  render: (usuario) => {\n                    console.log('🔍 Renderizando acciones para usuario:', usuario.email, 'canEdit:', canEdit);\n\n                    if (canEdit) {\n                      console.log('🎯 Renderizando ActionDropdown para:', usuario.email);\n                      const userRole = usuario.rol || usuario.role;\n                      const isAdmin = userRole === ROLES.ADMINISTRADOR || userRole === 'ADMINISTRADOR';\n\n                      return (\n                        <div className=\"flex items-center space-x-2\">\n                          {!isAdmin && (\n                            <button\n                              onClick={() => {\n                                console.log('✏️ Editar usuario:', usuario.email);\n                                editarModal.openModal('edit', usuario);\n                              }}\n                              className=\"text-blue-600 hover:text-blue-800 p-2 rounded-lg hover:bg-blue-50 transition-colors\"\n                              title=\"Editar usuario\"\n                            >\n                              <i className=\"fas fa-edit\"></i>\n                            </button>\n                          )}\n                          {!isAdmin && (\n                            <button\n                              onClick={() => {\n                                console.log('🗑️ Eliminar usuario:', usuario.email);\n                                if (window.confirm('¿Estás seguro de que quieres eliminar este usuario?')) {\n                                  window.deleteUser && window.deleteUser(usuario.id_usuario || usuario.id);\n                                }\n                              }}\n                              className=\"text-red-600 hover:text-red-800 p-2 rounded-lg hover:bg-red-50 transition-colors\"\n                              title=\"Eliminar usuario\"\n                            >\n                              <i className=\"fas fa-trash\"></i>\n                            </button>\n                          )}\n                          {isAdmin && (\n                            <span className=\"text-xs text-gray-500 font-medium px-2 py-1 bg-gray-100 rounded\">\n                              <i className=\"fas fa-shield-alt mr-1\"></i>\n                              Protegido\n                            </span>\n                          )}\n                        </div>\n                      );\n                    } else {\n                      return (\n                        <div className=\"flex items-center space-x-2\">\n                          <button\n                            onClick={() => {\n                              console.log('👁️ Abriendo modal de solo lectura para:', usuario.email);\n                              verModal.openModal('view', usuario);\n                            }}\n                            className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                          >\n                            <i className=\"fas fa-eye mr-1\"></i>\n                            Ver Detalles\n                          </button>\n                          <span className=\"text-xs text-yellow-600 font-medium\">\n                            <i className=\"fas fa-lock mr-1\"></i>\n                            Solo Lectura\n                          </span>\n                        </div>\n                      );\n                    }\n                  }\n                }\n              ]}\n              data={filteredUsuarios}\n              keyExtractor={(usuario) => usuario.id_usuario || usuario.id}\n              loading={loading}\n            />\n          )}\n        </div>\n        </div>\n      </section>\n\n      {/* Modales */}\n      <ViewDetailsModal\n        isOpen={verModal.isOpen}\n        onClose={verModal.closeModal}\n        title=\"Detalles del Usuario del sistema\"\n        data={verModal.modalData ? [\n          { label: 'ID', value: verModal.modalData.id_usuario || verModal.modalData.id },\n          { label: 'Email', value: verModal.modalData.email },\n          {\n            label: 'Contraseña',\n            value: '••••••••',\n            helperText: 'La contraseña está oculta por seguridad'\n          },\n          {\n            label: 'Rol',\n            value: (() => {\n              const rol = verModal.modalData.rol || verModal.modalData.role;\n              // Comparación más robusta\n              if (rol === ROLES.ADMINISTRADOR || rol === 'ADMINISTRADOR') {\n                return 'Administrador';\n              }\n              return 'Consulta';\n            })()\n          },\n          {\n            label: 'Fecha de creación',\n            value: new Date(verModal.modalData.created_at).toLocaleString('es-ES')\n          },\n          {\n            label: 'Última actualización',\n            value: new Date(verModal.modalData.updated_at).toLocaleString('es-ES')\n          }\n        ] : []}\n      />\n\n      <EditFormModal\n        isOpen={editarModal.isOpen}\n        onClose={editarModal.closeModal}\n        title=\"Editar Usuario del sistema\"\n        onSubmit={async (formData) => {\n          // Validar email\n          const emailValidation = validateEmail(formData.email);\n          if (!emailValidation.isValid) {\n            throw new Error(emailValidation.error);\n          }\n\n          // Validar rol\n          if (!formData.rol || (formData.rol !== ROLES.ADMINISTRADOR && formData.rol !== ROLES.CONSULTA && formData.rol !== 'ADMINISTRADOR' && formData.rol !== 'CONSULTA')) {\n            throw new Error('Rol inválido');\n          }\n\n          // Si no se proporciona password, no lo incluimos en la actualización\n          const updateData = {\n            email: formData.email,\n            role: formData.rol // El backend espera 'role', no 'rol'\n          };\n\n          if (formData.password && formData.password.trim()) {\n            if (formData.password.length < 8) {\n              throw new Error('La contraseña debe tener al menos 8 caracteres');\n            }\n            updateData.password = formData.password;\n          }\n\n          const result = await dbService.updateUsuario(editarModal.modalData.id_usuario || editarModal.modalData.id, updateData);\n          if (result.error) {\n            throw new Error(result.error.message || 'Error al actualizar usuario');\n          }\n          await loadUsuarios();\n        }}\n        initialData={editarModal.modalData ? {\n          email: editarModal.modalData.email,\n          password: '',\n          rol: editarModal.modalData.rol || editarModal.modalData.role\n        } : {\n          email: '',\n          password: '',\n          rol: ROLES.CONSULTA\n        }}\n        fields={[\n          {\n            name: 'email',\n            label: 'Email',\n            type: 'email',\n            required: true,\n            placeholder: 'usuario@ejemplo.com'\n          },\n          {\n            name: 'currentPassword',\n            label: 'Contraseña Actual (solo lectura)',\n            type: 'password',\n            readOnly: true,\n            placeholder: 'Contraseña actual del usuario',\n            value: '••••••••', // Mostrar puntos por seguridad\n            helperText: 'La contraseña actual no se puede ver por seguridad'\n          },\n          {\n            name: 'password',\n            label: 'Nueva Contraseña (opcional)',\n            type: 'password',\n            placeholder: 'Dejar en blanco para mantener la actual',\n            helperText: 'Mínimo 8 caracteres. Si se deja en blanco, mantiene la contraseña actual.'\n          },\n          {\n            name: 'rol',\n            label: 'Rol',\n            type: 'select',\n            required: true,\n            options: [\n              { value: ROLES.CONSULTA, label: 'Consulta' }\n            ]\n          }\n        ]}\n      />\n\n      <CreateFormModal\n        isOpen={crearModal.isOpen}\n        onClose={crearModal.closeModal}\n        title=\"Nuevo Usuario del sistema\"\n        onSubmit={async (formData) => {\n          // Validar email\n          const emailValidation = validateEmail(formData.email);\n          if (!emailValidation.isValid) {\n            throw new Error(emailValidation.error);\n          }\n\n          // Validar password\n          if (!formData.password || formData.password.length < 8) {\n            throw new Error('La contraseña debe tener al menos 8 caracteres');\n          }\n\n          // Validar rol\n          if (!formData.rol || (formData.rol !== ROLES.ADMINISTRADOR && formData.rol !== ROLES.CONSULTA && formData.rol !== 'ADMINISTRADOR' && formData.rol !== 'CONSULTA')) {\n            throw new Error('Rol inválido');\n          }\n\n          // Convertir 'rol' a 'role' para el backend\n          const userData = {\n            email: formData.email,\n            password: formData.password,\n            role: formData.rol\n          };\n\n          const result = await dbService.createUsuario(userData);\n          if (result.error) {\n            throw new Error(result.error.message || 'Error al crear usuario');\n          }\n          await loadUsuarios();\n        }}\n        initialData={{\n          email: '',\n          password: '',\n          rol: ROLES.CONSULTA\n        }}\n        fields={[\n          {\n            name: 'email',\n            label: 'Email',\n            type: 'email',\n            required: true,\n            placeholder: 'usuario@ejemplo.com'\n          },\n          {\n            name: 'password',\n            label: 'Contraseña',\n            type: 'password',\n            required: true,\n            placeholder: 'Mínimo 8 caracteres',\n            helperText: 'Mínimo 8 caracteres. La contraseña debe ser segura.'\n          },\n          {\n            name: 'rol',\n            label: 'Rol',\n            type: 'select',\n            required: true,\n            options: [\n              { value: ROLES.ADMINISTRADOR, label: 'Administrador' },\n              { value: ROLES.CONSULTA, label: 'Consulta' }\n            ]\n          }\n        ]}\n      />\n    </DashboardLayout>\n  );\n};\n\n// Wrap with React.memo to prevent unnecessary re-renders\nconst Usuarios = React.memo(UsuariosComponent);\n\nexport default Usuarios;\n"],"names":["validateParticipanteDocumentoUnico","async","numeroDocumento","participanteId","arguments","length","undefined","trim","isValid","error","result","dbService","getParticipantes","data","Array","isArray","some","p","pId","id","id_participante","numero_documento","err","console","validateAcudienteDocumentoUnico","acudienteId","getAcudientes","a","aId","id_acudiente","validateEmail","email","test","validateFecha","fecha","fieldName","concat","date","Date","today","setHours","isNaN","getTime","validateFechaNacimiento","fechaNacimiento","validateFechaIngreso","fechaIngreso","validateParticipanteExists","parseInt","validateSedeExists","sedeId","getSedes","s","id_sede","validateMensualidadRelations","participanteValidation","acudienteValidation","validateAcudienteExists","UsuariosComponent","usuarios","setUsuarios","useState","loading","setLoading","setError","canEdit","setCanEdit","filters","filtros","setFilter","clearFilters","useFilters","rol","busqueda","verModal","useModal","editarModal","crearModal","loadUsuarios","useCallback","_result$data","log","getUsuarios","Error","message","usuariosData","useEffect","window","deleteUser","deleteUsuario","userId","alert","hasPermission","ROLES","ADMINISTRADOR","loadCurrentUser","filteredUsuarios","useMemo","filtered","filter","u","role","toLowerCase","includes","statsData","title","value","icon","color","_jsx","DashboardLayout","subtitle","loadingText","children","className","_jsxs","filterConfig","type","name","label","options","CONSULTA","placeholder","extraActions","onClick","openModal","FilterBar","values","onChange","onClear","showClearButton","StatsGrid","stats","columns","gap","DataTable","key","header","render","usuario","id_usuario","userRole","isAdmin","confirm","keyExtractor","ViewDetailsModal","isOpen","onClose","closeModal","modalData","helperText","created_at","toLocaleString","updated_at","EditFormModal","onSubmit","emailValidation","formData","updateData","password","updateUsuario","initialData","fields","required","readOnly","CreateFormModal","userData","createUsuario","React"],"sourceRoot":""}