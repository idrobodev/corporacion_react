{"version":3,"file":"static/js/101.bbe363a5.chunk.js","mappings":"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","sources":["shared/utils/exportUtils.js","pages/Dashboard/Acudientes.jsx","shared/utils/validationUtils.js"],"sourcesContent":["/**\n * Export Utilities\n * Functions for exporting data to different formats (CSV, PDF)\n */\n\n/**\n * Format participant name consistently\n * @param {Object} participante - Participant object\n * @returns {string} Formatted full name\n */\nexport const formatParticipantName = (participante) => {\n  if (!participante) return 'N/A';\n  \n  if (participante.nombres && participante.apellidos) {\n    return `${participante.nombres} ${participante.apellidos}`.trim();\n  }\n  \n  return participante.nombre || 'N/A';\n};\n\n/**\n * Format sede information\n * @param {Object|string} sede - Sede object or string\n * @returns {string} Formatted sede name\n */\nexport const formatSede = (sede) => {\n  if (!sede) return 'N/A';\n  \n  if (typeof sede === 'object' && sede !== null) {\n    return sede.direccion || sede.nombre || 'N/A';\n  }\n  \n  return String(sede);\n};\n\n/**\n * Normalize status display\n * @param {string} estado - Status value\n * @returns {string} Normalized status\n */\nexport const normalizeStatus = (estado) => {\n  if (!estado) return 'N/A';\n  \n  const upper = String(estado).toUpperCase();\n  if (upper === 'ACTIVO') return 'Activo';\n  if (upper === 'INACTIVO') return 'Inactivo';\n  if (upper === 'PAGADA') return 'Pagada';\n  if (upper === 'PENDIENTE') return 'Pendiente';\n  if (upper === 'VENCIDA') return 'Vencida';\n  \n  return estado;\n};\n\n/**\n * Format gender display\n * @param {string} genero - Gender value\n * @returns {string} Formatted gender\n */\nexport const formatGender = (genero) => {\n  if (!genero) return 'N/A';\n  \n  if (genero === 'MASCULINO') return 'Masculino';\n  if (genero === 'FEMENINO') return 'Femenino';\n  \n  return genero;\n};\n\n/**\n * Format document type and number\n * @param {string} tipo - Document type\n * @param {string} numero - Document number\n * @returns {string} Formatted document\n */\nexport const formatDocument = (tipo, numero) => {\n  if (!numero) return 'N/A';\n  const tipoDoc = tipo || 'CC';\n  return `${tipoDoc}: ${numero}`;\n};\n\n/**\n * Convert array of objects to CSV format\n * @param {Array} data - Array of objects to convert\n * @param {Array} headers - Array of header objects {key, label}\n * @returns {string} CSV formatted string\n */\nexport const arrayToCSV = (data, headers) => {\n  if (!data || !Array.isArray(data) || data.length === 0) {\n    return '';\n  }\n\n  // Create header row\n  const headerRow = headers.map(header => `\"${header.label}\"`).join(',');\n\n  // Create data rows\n  const dataRows = data.map(row => {\n    return headers.map(header => {\n      const value = getNestedValue(row, header.key);\n      // Escape quotes and wrap in quotes if contains comma, quote, or newline\n      const stringValue = String(value || '');\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      return stringValue;\n    }).join(',');\n  });\n\n  return [headerRow, ...dataRows].join('\\n');\n};\n\n/**\n * Create enhanced CSV with metadata, statistics, and better formatting\n * @param {Object} options - Configuration options\n * @param {string} options.title - Title of the report\n * @param {Array} options.data - Array of data objects\n * @param {Array} options.headers - Array of header objects {key, label}\n * @param {Object} options.metadata - Additional metadata {organization, generatedBy, etc}\n * @param {Object} options.statistics - Statistics to include\n * @param {Object} options.filters - Applied filters\n * @returns {string} Enhanced CSV formatted string\n */\nexport const createEnhancedCSV = (options) => {\n  const {\n    title = 'Reporte',\n    data = [],\n    headers = [],\n    metadata = {},\n    statistics = {},\n    filters = {}\n  } = options;\n\n  const sections = [];\n  const currentDate = new Date().toLocaleDateString('es-CO', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  // ========== SECCIÓN 1: ENCABEZADO Y METADATA ==========\n  sections.push(`\"${title.toUpperCase()}\"`);\n  sections.push(`\"Corporación Todo por un Alma\"`);\n  sections.push(`\"Fecha de generación:\",\"${currentDate}\"`);\n  \n  if (metadata.generatedBy) {\n    sections.push(`\"Generado por:\",\"${metadata.generatedBy}\"`);\n  }\n  \n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 2: FILTROS APLICADOS ==========\n  const activeFilters = Object.entries(filters).filter(([key, value]) => {\n    return value && value !== 'all' && value !== 'Todos' && value !== 'Todas' && value !== '';\n  });\n\n  if (activeFilters.length > 0) {\n    sections.push(`\"FILTROS APLICADOS\"`);\n    activeFilters.forEach(([key, value]) => {\n      const filterLabel = key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');\n      sections.push(`\"${filterLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 3: ESTADÍSTICAS ==========\n  const statsEntries = Object.entries(statistics).filter(([_, value]) => value !== undefined);\n  \n  if (statsEntries.length > 0) {\n    sections.push(`\"ESTADÍSTICAS\"`);\n    statsEntries.forEach(([key, value]) => {\n      const statLabel = key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n      sections.push(`\"${statLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 4: DATOS ==========\n  sections.push(`\"DATOS DEL REPORTE\"`);\n  sections.push(''); // Línea en blanco\n\n  // Crear encabezados de columnas\n  const headerRow = headers.map(h => `\"${h.label}\"`).join(',');\n  sections.push(headerRow);\n\n  // Crear filas de datos\n  if (data.length === 0) {\n    sections.push(`\"No hay datos disponibles\"`);\n  } else {\n    data.forEach(row => {\n      const dataRow = headers.map(header => {\n        const value = getNestedValue(row, header.key);\n        const stringValue = String(value || '');\n        // Escapar comillas dobles y envolver en comillas si contiene comas, comillas o saltos de línea\n        if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n          return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n        }\n        return stringValue; // No envolver en comillas si no es necesario\n      }).join(',');\n      sections.push(dataRow);\n    });\n  }\n\n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 5: RESUMEN FINAL ==========\n  sections.push(`\"RESUMEN\"`);\n  sections.push(`\"Total de registros:\",\"${data.length}\"`);\n  sections.push(`\"Reporte generado el:\",\"${currentDate}\"`);\n  \n  return sections.join('\\n');\n};\n\n/**\n * Format statistics for CSV export\n * @param {Array} data - Data array to analyze\n * @param {string} statusField - Field name containing status\n * @returns {Object} Statistics object\n */\nexport const generateStatistics = (data, statusField = 'estado') => {\n  const total = data.length;\n  const stats = {\n    'Total de Registros': total\n  };\n\n  // Count by status\n  const statusCounts = {};\n  data.forEach(item => {\n    const status = normalizeStatus(item[statusField]);\n    statusCounts[status] = (statusCounts[status] || 0) + 1;\n  });\n\n  Object.entries(statusCounts).forEach(([status, count]) => {\n    stats[status] = `${count} (${((count / total) * 100).toFixed(1)}%)`;\n  });\n\n  return stats;\n};\n\n/**\n * Download data as CSV file with UTF-8 BOM for proper Excel encoding\n * @param {string} csvContent - CSV content as string\n * @param {string} filename - Name of the file to download\n */\nexport const downloadCSV = (csvContent, filename) => {\n  // Add UTF-8 BOM for proper Excel encoding of special characters (ñ, á, é, í, ó, ú)\n  const BOM = '\\uFEFF';\n  const blob = new Blob([BOM + csvContent], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  \n  const link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n};\n\n/**\n * Get nested value from object using dot notation\n * @param {Object} obj - Object to get value from\n * @param {string} path - Path to value (e.g., 'sede.direccion')\n * @returns {any} Value at path or undefined\n */\nexport const getNestedValue = (obj, path) => {\n  return path.split('.').reduce((current, key) => current?.[key], obj);\n};\n\n/**\n * Format date for CSV export\n * @param {string|Date} date - Date to format\n * @returns {string} Formatted date string\n */\nexport const formatDateForCSV = (date) => {\n  if (!date) return '';\n  try {\n    return new Date(date).toLocaleDateString('es-ES');\n  } catch {\n    return String(date);\n  }\n};\n\n/**\n * Format currency for CSV export\n * @param {number} amount - Amount to format\n * @returns {string} Formatted currency string\n */\nexport const formatCurrencyForCSV = (amount) => {\n  if (amount === null || amount === undefined) return '';\n  try {\n    return new Intl.NumberFormat('es-CO', {\n      style: 'currency',\n      currency: 'COP',\n      minimumFractionDigits: 0\n    }).format(amount);\n  } catch {\n    return String(amount);\n  }\n};\n\n/**\n * Calculate age from birth date\n * @param {string|Date} birthDate - Birth date\n * @returns {string} Age string or empty string\n */\nexport const calculateAge = (birthDate) => {\n  if (!birthDate) return '';\n  try {\n    const birth = new Date(birthDate);\n    const today = new Date();\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n      age--;\n    }\n    return age > 0 ? `${age} años` : '';\n  } catch {\n    return '';\n  }\n};","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService } from \"shared/services\";\nimport { FilterBar, ExportDropdown } from \"components/UI\";\nimport { StatsGrid } from \"components/UI/Card\";\nimport { DataTable, ActionDropdown } from \"components/UI/Table\";\nimport { ViewDetailsModal, EditFormModal, CreateFormModal } from \"components/common/CRUDModals\";\nimport { useFilters, useModal } from \"shared/hooks\";\nimport {\n  validateAcudienteDocumentoUnico,\n  validateEmail,\n  validateParticipanteExists\n} from \"shared/utils/validationUtils\";\nimport {\n  createEnhancedCSV,\n  downloadCSV,\n  formatParticipantName,\n  formatDocument\n} from \"shared/utils/exportUtils\";\n\nconst AcudientesComponent = () => {\n  const [acudientes, setAcudientes] = useState([]);\n  const [participantes, setParticipantes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Use custom hooks\n  const { filters: filtros, setFilter, clearFilters } = useFilters({\n    participante: \"Todos\",\n    busqueda: \"\"\n  });\n  \n  const verModal = useModal();\n  const editarModal = useModal();\n  const crearModal = useModal();\n\n\n  // Función para cargar acudientes\n  const loadAcudientes = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Cargando acudientes...');\n\n      const result = await dbService.getAcudientes();\n      console.log('📊 Resultado acudientes:', result);\n\n      if (result.error) {\n        throw new Error(result.error.message || 'Error al cargar acudientes');\n      }\n\n      const acudientesData = Array.isArray(result.data?.data) ? result.data.data : [];\n      setAcudientes(acudientesData);\n      console.log('✅ Acudientes cargados:', acudientesData.length);\n    } catch (err) {\n      console.error('❌ Error cargando acudientes:', err);\n      setError(err.message || 'Error desconocido al cargar acudientes');\n      setAcudientes([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Función para cargar participantes\n  const loadParticipantes = useCallback(async () => {\n    try {\n      console.log('🔄 Cargando participantes...');\n      const result = await dbService.getParticipantes();\n\n      if (result.error) {\n        console.error('Error cargando participantes:', result.error);\n        setParticipantes([]);\n        return;\n      }\n\n      const participantesData = Array.isArray(result.data?.data) ? result.data.data : [];\n      setParticipantes(participantesData);\n      console.log('✅ Participantes cargados:', participantesData.length);\n    } catch (err) {\n      console.error('❌ Error cargando participantes:', err);\n      setParticipantes([]);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadAcudientes();\n    loadParticipantes();\n  }, [loadAcudientes, loadParticipantes]);\n\n  // Filtrar acudientes por nombre, documento y participante\n  const filteredAcudientes = useMemo(() => {\n    const safeAcudientes = Array.isArray(acudientes) ? acudientes : [];\n    let filtered = safeAcudientes;\n\n    // Filtrar por participante\n    if (filtros.participante !== \"Todos\") {\n      filtered = filtered.filter(a => {\n        const participanteId = a.id_participante || a.participante?.id_participante;\n        return participanteId && participanteId.toString() === filtros.participante;\n      });\n    }\n\n    // Filtrar por búsqueda (solo documento)\n    if (filtros.busqueda) {\n      filtered = filtered.filter(a =>\n        (a.numero_documento || '').includes(filtros.busqueda)\n      );\n    }\n\n    return filtered;\n  }, [acudientes, filtros]);\n\n  // Estadísticas\n  const statsData = useMemo(() => [\n    {\n      title: \"Total Acudientes\",\n      value: filteredAcudientes.length,\n      icon: \"fas fa-user-friends\",\n      color: \"blue\"\n    }\n  ], [filteredAcudientes]);\n\n  // Función para exportar a PDF\n  const handleExportPDF = useCallback(() => {\n    const printWindow = window.open('', '_blank');\n    const currentDate = new Date().toLocaleDateString('es-ES');\n\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Lista de Acudientes - ${currentDate}</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              margin: 20px;\n              color: #333;\n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n              border-bottom: 2px solid #333;\n              padding-bottom: 20px;\n            }\n            .header h1 {\n              color: #7c3aed;\n              margin: 0;\n              font-size: 24px;\n            }\n            .filters {\n              margin-bottom: 20px;\n              background: #f8f9fa;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .filters h3 {\n              margin: 0 0 10px 0;\n              color: #495057;\n            }\n            .filters p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin-top: 20px;\n            }\n            th, td {\n              border: 1px solid #ddd;\n              padding: 8px 12px;\n              text-align: left;\n            }\n            th {\n              background-color: #f8f9fa;\n              font-weight: bold;\n              color: #495057;\n            }\n            tr:nth-child(even) {\n              background-color: #f9f9f9;\n            }\n            .stats {\n              margin-top: 30px;\n              background: #ede9fe;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .stats h3 {\n              margin: 0 0 10px 0;\n              color: #7c3aed;\n            }\n            .stats p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            @media print {\n              body { margin: 0; }\n              .no-print { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Lista de Acudientes</h1>\n            <p>Corporación Todo por un Alma</p>\n            <p>Fecha de generación: ${currentDate}</p>\n          </div>\n\n          <div class=\"filters\">\n            <h3>Filtros aplicados:</h3>\n            <p><strong>Participante:</strong> ${filtros.participante === 'Todos' ? 'Todos los participantes' : (() => {\n              const p = participantes.find(part => (part.id_participante || part.id).toString() === filtros.participante);\n              return p?.nombre || `${p?.nombres || ''} ${p?.apellidos || ''}`.trim() || 'N/A';\n            })()}</p>\n            ${filtros.busqueda ? `<p><strong>Búsqueda:</strong> \"${filtros.busqueda}\"</p>` : ''}\n          </div>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Acudiente</th>\n                <th>Documento</th>\n                <th>Participante</th>\n                <th>Parentesco</th>\n                <th>Teléfono</th>\n                <th>Email</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${filteredAcudientes.map(acudiente => {\n                const participante = participantes.find(p =>\n                  (p.id_participante || p.id) === acudiente.id_participante\n                );\n                const acudienteNombre = `${acudiente.nombres || ''} ${acudiente.apellidos || ''}`.trim() || 'N/A';\n                const acudienteDoc = formatDocument(acudiente.tipo_documento, acudiente.numero_documento);\n                const participanteNombre = formatParticipantName(participante);\n                \n                return `\n                  <tr>\n                    <td>${acudienteNombre}</td>\n                    <td>${acudienteDoc}</td>\n                    <td>${participanteNombre}</td>\n                    <td>${acudiente.parentesco || 'N/A'}</td>\n                    <td>${acudiente.telefono || 'N/A'}</td>\n                    <td>${acudiente.email || 'N/A'}</td>\n                  </tr>\n                `;\n              }).join('')}\n            </tbody>\n          </table>\n\n          <div class=\"stats\">\n            <h3>Estadísticas:</h3>\n            <p><strong>Total de acudientes:</strong> ${filteredAcudientes.length}</p>\n          </div>\n\n          <script>\n            window.onload = function() {\n              window.print();\n              setTimeout(function() {\n                window.close();\n              }, 1000);\n            }\n          </script>\n        </body>\n      </html>\n    `;\n\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }, [filtros, filteredAcudientes, participantes]);\n\n  const handleExportCSV = useCallback(() => {\n    const headers = [\n      { key: 'tipo_documento', label: 'Tipo Documento' },\n      { key: 'numero_documento', label: 'Número Documento' },\n      { key: 'nombres', label: 'Nombres' },\n      { key: 'apellidos', label: 'Apellidos' },\n      { key: 'nombre_completo', label: 'Nombre Completo' },\n      { key: 'parentesco', label: 'Parentesco' },\n      { key: 'telefono', label: 'Teléfono' },\n      { key: 'email', label: 'Email' },\n      { key: 'direccion', label: 'Dirección' },\n      { key: 'participante_id', label: 'ID Participante' },\n      { key: 'participante_nombre', label: 'Nombre Participante' },\n      { key: 'participante_documento', label: 'Documento Participante' }\n    ];\n\n    const csvData = filteredAcudientes.map(acudiente => {\n      const participante = participantes.find(p =>\n        (p.id_participante || p.id) === acudiente.id_participante\n      );\n\n      return {\n        tipo_documento: acudiente.tipo_documento || 'N/A',\n        numero_documento: acudiente.numero_documento || 'N/A',\n        nombres: acudiente.nombres || 'N/A',\n        apellidos: acudiente.apellidos || 'N/A',\n        nombre_completo: `${acudiente.nombres || ''} ${acudiente.apellidos || ''}`.trim() || 'N/A',\n        parentesco: acudiente.parentesco || 'N/A',\n        telefono: acudiente.telefono || 'N/A',\n        email: acudiente.email || 'N/A',\n        direccion: acudiente.direccion || 'N/A',\n        participante_id: acudiente.id_participante || 'N/A',\n        participante_nombre: formatParticipantName(participante),\n        participante_documento: participante?.numero_documento || 'N/A'\n      };\n    });\n\n    // Contar parentescos\n    const parentescoCounts = {};\n    filteredAcudientes.forEach(acudiente => {\n      const parentesco = acudiente.parentesco || 'Sin especificar';\n      parentescoCounts[parentesco] = (parentescoCounts[parentesco] || 0) + 1;\n    });\n\n    // Generar estadísticas\n    const statistics = {\n      'Total de Acudientes': filteredAcudientes.length,\n      'Acudientes con Email': filteredAcudientes.filter(a => a.email).length,\n      'Acudientes con Teléfono': filteredAcudientes.filter(a => a.telefono).length\n    };\n\n    // Agregar distribución de parentescos (top 5)\n    const topParentescos = Object.entries(parentescoCounts)\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, 5);\n    \n    topParentescos.forEach(([parentesco, count]) => {\n      statistics[`Parentesco ${parentesco}`] = `${count} (${((count / filteredAcudientes.length) * 100).toFixed(1)}%)`;\n    });\n\n    // Preparar filtros aplicados\n    const appliedFilters = {};\n    \n    if (filtros.participante !== 'Todos') {\n      const participante = participantes.find(p =>\n        (p.id_participante || p.id).toString() === filtros.participante\n      );\n      appliedFilters.participante = participante?.nombre ||\n        `${participante?.nombres || ''} ${participante?.apellidos || ''}`.trim() ||\n        'N/A';\n    }\n    \n    if (filtros.busqueda) {\n      appliedFilters.búsqueda = filtros.busqueda;\n    }\n\n    const csvContent = createEnhancedCSV({\n      title: 'Reporte de Acudientes',\n      data: csvData,\n      headers,\n      metadata: {\n        generatedBy: 'Sistema de Gestión'\n      },\n      statistics,\n      filters: appliedFilters\n    });\n\n    const filename = `acudientes_${new Date().toISOString().split('T')[0]}.csv`;\n    downloadCSV(csvContent, filename);\n  }, [filteredAcudientes, participantes, filtros]);\n\n  if (loading) {\n    return (\n      <DashboardLayout title=\"Acudientes\" subtitle=\"Gestión de acudientes\" loading={true} loadingText=\"Cargando acudientes...\" />\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout title=\"Acudientes\" subtitle=\"Error al cargar datos\" loading={false}>\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading acudientes: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  // Configuración de filtros\n  const filterConfig = [\n    {\n      type: 'select',\n      name: 'participante',\n      label: 'Participante',\n      options: [\n        { value: 'Todos', label: 'Todos los Participantes' },\n        ...participantes.map(p => ({\n          value: (p.id_participante || p.id).toString(),\n          label: p.nombre || `${p.nombres} ${p.apellidos}` || 'Sin nombre'\n        }))\n      ]\n    },\n    {\n      type: 'search',\n      name: 'busqueda',\n      label: 'Búsqueda por Documento',\n      placeholder: 'Número de documento...'\n    }\n  ];\n\n  return (\n    <DashboardLayout\n      title=\"Gestión de Acudientes\"\n      subtitle=\"Administra los acudientes de los participantes\"\n      extraActions={\n        <div className=\"flex space-x-3\">\n          <ExportDropdown\n            onExportPDF={handleExportPDF}\n            onExportCSV={handleExportCSV}\n          />\n          <button\n            onClick={() => crearModal.openModal()}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            <i className=\"fas fa-plus mr-2\"></i>\n            Nuevo Acudiente\n          </button>\n        </div>\n      }\n    >\n      <section className=\"px-4 md:px-6 py-4 md:py-6\">\n        <FilterBar\n          filters={filterConfig}\n          values={filtros}\n          onChange={setFilter}\n          onClear={clearFilters}\n          showClearButton={true}\n        />\n\n        {/* Estadísticas Rápidas */}\n        <div className=\"mt-6\">\n          <StatsGrid\n            stats={statsData}\n            columns={3}\n            gap=\"md\"\n          />\n        </div>\n\n        {/* Tabla de Acudientes */}\n        <div className=\"mt-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">Lista de Acudientes</h3>\n          </div>\n\n          {filteredAcudientes.length === 0 ? (\n            <div className=\"p-12 text-center\">\n              <i className=\"fas fa-user-friends text-gray-300 text-4xl mb-4\"></i>\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No se encontraron acudientes</h3>\n              <p className=\"text-gray-500\">No hay acudientes que coincidan con los filtros aplicados.</p>\n            </div>\n          ) : (\n            <DataTable\n              keyExtractor={(row) => row.id_acudiente || row.id}\n              columns={[\n                {\n                  key: 'acudiente',\n                  header: 'Acudiente',\n                  render: (acudiente) => (\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center mr-3\">\n                        <i className=\"fas fa-user-friends text-purple-600\"></i>\n                      </div>\n                      <div className=\"min-w-0 flex-1\">\n                        <p className=\"font-medium text-gray-900 truncate\">\n                          {`${acudiente.nombres || ''} ${acudiente.apellidos || ''}`.trim() || 'Sin nombre'}\n                        </p>\n                        <p className=\"text-sm text-gray-500 truncate\">\n                          {acudiente.tipo_documento || 'CC'}: {acudiente.numero_documento || 'N/A'}\n                        </p>\n                        {/* Mobile-only contact info */}\n                        <div className=\"md:hidden mt-1 space-y-1\">\n                          <p className=\"text-xs text-gray-600 flex items-center\">\n                            <i className=\"fas fa-phone text-gray-400 mr-1 text-xs\"></i>\n                            {acudiente.telefono || 'N/A'}\n                          </p>\n                          <p className=\"text-xs text-gray-600 flex items-center\">\n                            <i className=\"fas fa-envelope text-gray-400 mr-1 text-xs\"></i>\n                            {acudiente.email || 'N/A'}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                },\n                {\n                  key: 'participante',\n                  header: 'Participante',\n                  render: (acudiente) => {\n                    // Buscar el participante asociado\n                    const participante = participantes.find(p =>\n                      (p.id_participante || p.id) === acudiente.id_participante\n                    );\n                    return (\n                      <div className=\"min-w-0\">\n                        <p className=\"text-gray-900 truncate\">\n                          {participante?.nombre || `${participante?.nombres || ''} ${participante?.apellidos || ''}`.trim() || 'N/A'}\n                        </p>\n                        <p className=\"text-sm text-gray-500 truncate\">\n                          {acudiente.parentesco || 'Sin parentesco'}\n                        </p>\n                      </div>\n                    );\n                  }\n                },\n                {\n                  key: 'contacto',\n                  header: 'Contacto',\n                  hideInMobile: true,\n                  render: (acudiente) => (\n                    <div className=\"min-w-0\">\n                      <p className=\"text-gray-900 flex items-center\">\n                        <i className=\"fas fa-phone text-gray-400 mr-2\"></i>\n                        <span className=\"truncate\">{acudiente.telefono || 'N/A'}</span>\n                      </p>\n                      <p className=\"text-sm text-gray-500 flex items-center mt-1\">\n                        <i className=\"fas fa-envelope text-gray-400 mr-2\"></i>\n                        <span className=\"truncate\">{acudiente.email || 'N/A'}</span>\n                      </p>\n                    </div>\n                  )\n                },\n                {\n                  key: 'acciones',\n                  header: 'Acciones',\n                  render: (acudiente) => (\n                    <ActionDropdown\n                      actions={[\n                        {\n                          label: 'Ver detalles',\n                          icon: 'fas fa-eye',\n                          onClick: () => {\n                            verModal.setData(acudiente);\n                            verModal.open();\n                          }\n                        },\n                        {\n                          label: 'Editar',\n                          icon: 'fas fa-edit',\n                          onClick: () => {\n                            editarModal.setData(acudiente);\n                            editarModal.open();\n                          }\n                        }\n                      ]}\n                    />\n                  )\n                }\n              ]}\n              data={filteredAcudientes}\n            />\n          )}\n        </div>\n        </div>\n      </section>\n\n      {/* Modales */}\n      <ViewDetailsModal\n        isOpen={verModal.isOpen}\n        onClose={verModal.closeModal}\n        title=\"Detalles del Acudiente\"\n        data={verModal.data ? [\n          { label: 'ID', value: verModal.data.id_acudiente || verModal.data.id },\n          { \n            label: 'Nombre Completo', \n            value: `${verModal.data.nombres || ''} ${verModal.data.apellidos || ''}`.trim() \n          },\n          { \n            label: 'Documento', \n            value: `${verModal.data.tipo_documento || 'CC'}: ${verModal.data.numero_documento || 'N/A'}` \n          },\n          { label: 'Parentesco', value: verModal.data.parentesco || 'N/A' },\n          { label: 'Teléfono', value: verModal.data.telefono || 'N/A' },\n          { label: 'Email', value: verModal.data.email || 'N/A' },\n          { label: 'Dirección', value: verModal.data.direccion || 'N/A' },\n          { \n            label: 'Participante', \n            value: (() => {\n              const participante = participantes.find(p => \n                (p.id_participante || p.id) === verModal.data.id_participante\n              );\n              return participante?.nombre || `${participante?.nombres || ''} ${participante?.apellidos || ''}`.trim() || 'N/A';\n            })()\n          }\n        ] : []}\n      />\n\n      <EditFormModal\n        isOpen={editarModal.isOpen}\n        onClose={editarModal.closeModal}\n        title=\"Editar Acudiente\"\n        onSubmit={async (formData) => {\n          // Validar documento único\n          const acudienteId = editarModal.data.id_acudiente || editarModal.data.id;\n          const documentoValidation = await validateAcudienteDocumentoUnico(formData.numero_documento, acudienteId);\n          if (!documentoValidation.isValid) {\n            throw new Error(documentoValidation.error);\n          }\n\n          // Validar email\n          const emailValidation = validateEmail(formData.email);\n          if (!emailValidation.isValid) {\n            throw new Error(emailValidation.error);\n          }\n\n          const result = await dbService.updateAcudiente(\n            editarModal.data.id_acudiente || editarModal.data.id, \n            formData\n          );\n          if (result.error) {\n            throw new Error(result.error.message || 'Error al actualizar acudiente');\n          }\n          await loadAcudientes();\n        }}\n        initialData={editarModal.data}\n        fields={[\n          { \n            name: 'tipo_documento', \n            label: 'Tipo de Documento', \n            type: 'select',\n            required: true,\n            options: [\n              { value: 'CC', label: 'Cédula de Ciudadanía' },\n              { value: 'TI', label: 'Tarjeta de Identidad' },\n              { value: 'CE', label: 'Cédula de Extranjería' },\n              { value: 'PASAPORTE', label: 'Pasaporte' }\n            ]\n          },\n          { \n            name: 'numero_documento', \n            label: 'Número de Documento', \n            type: 'text', \n            required: true,\n            placeholder: 'Número de documento'\n          },\n          { \n            name: 'nombres', \n            label: 'Nombres', \n            type: 'text', \n            required: true,\n            placeholder: 'Nombres del acudiente'\n          },\n          { \n            name: 'apellidos', \n            label: 'Apellidos', \n            type: 'text', \n            required: true,\n            placeholder: 'Apellidos del acudiente'\n          },\n          { \n            name: 'parentesco', \n            label: 'Parentesco', \n            type: 'text', \n            required: true,\n            placeholder: 'Ej: Madre, Padre, Hermano/a'\n          },\n          { \n            name: 'telefono', \n            label: 'Teléfono', \n            type: 'tel', \n            required: true,\n            placeholder: 'Número de teléfono'\n          },\n          { \n            name: 'email', \n            label: 'Email', \n            type: 'email', \n            required: true,\n            placeholder: 'correo@ejemplo.com'\n          },\n          { \n            name: 'direccion', \n            label: 'Dirección', \n            type: 'textarea', \n            required: true,\n            placeholder: 'Dirección completa'\n          }\n        ]}\n      />\n\n      <CreateFormModal\n        isOpen={crearModal.isOpen}\n        onClose={crearModal.closeModal}\n        title=\"Nuevo Acudiente\"\n        onSubmit={async (formData) => {\n          // Validar documento único\n          const documentoValidation = await validateAcudienteDocumentoUnico(formData.numero_documento);\n          if (!documentoValidation.isValid) {\n            throw new Error(documentoValidation.error);\n          }\n\n          // Validar email\n          const emailValidation = validateEmail(formData.email);\n          if (!emailValidation.isValid) {\n            throw new Error(emailValidation.error);\n          }\n\n          // Validar que el participante exista\n          const participanteValidation = await validateParticipanteExists(formData.id_participante);\n          if (!participanteValidation.isValid) {\n            throw new Error(participanteValidation.error);\n          }\n\n          const result = await dbService.createAcudiente(formData);\n          if (result.error) {\n            throw new Error(result.error.message || 'Error al crear acudiente');\n          }\n          await loadAcudientes();\n        }}\n        initialData={{\n          id_participante: '',\n          tipo_documento: 'CC',\n          numero_documento: '',\n          nombres: '',\n          apellidos: '',\n          parentesco: '',\n          telefono: '',\n          email: '',\n          direccion: ''\n        }}\n        fields={[\n          { \n            name: 'id_participante', \n            label: 'Participante', \n            type: 'select',\n            required: true,\n            options: [\n              { value: '', label: 'Seleccione un participante' },\n              ...participantes.map(p => ({\n                value: (p.id_participante || p.id).toString(),\n                label: p.nombre || `${p.nombres || ''} ${p.apellidos || ''}`.trim() || 'Sin nombre'\n              }))\n            ]\n          },\n          { \n            name: 'tipo_documento', \n            label: 'Tipo de Documento', \n            type: 'select',\n            required: true,\n            options: [\n              { value: 'CC', label: 'Cédula de Ciudadanía' },\n              { value: 'TI', label: 'Tarjeta de Identidad' },\n              { value: 'CE', label: 'Cédula de Extranjería' },\n              { value: 'PASAPORTE', label: 'Pasaporte' }\n            ]\n          },\n          { \n            name: 'numero_documento', \n            label: 'Número de Documento', \n            type: 'text', \n            required: true,\n            placeholder: 'Número de documento'\n          },\n          { \n            name: 'nombres', \n            label: 'Nombres', \n            type: 'text', \n            required: true,\n            placeholder: 'Nombres del acudiente'\n          },\n          { \n            name: 'apellidos', \n            label: 'Apellidos', \n            type: 'text', \n            required: true,\n            placeholder: 'Apellidos del acudiente'\n          },\n          { \n            name: 'parentesco', \n            label: 'Parentesco', \n            type: 'text', \n            required: true,\n            placeholder: 'Ej: Madre, Padre, Hermano/a'\n          },\n          { \n            name: 'telefono', \n            label: 'Teléfono', \n            type: 'tel', \n            required: true,\n            placeholder: 'Número de teléfono'\n          },\n          { \n            name: 'email', \n            label: 'Email', \n            type: 'email', \n            required: true,\n            placeholder: 'correo@ejemplo.com'\n          },\n          { \n            name: 'direccion', \n            label: 'Dirección', \n            type: 'textarea', \n            required: true,\n            placeholder: 'Dirección completa'\n          }\n        ]}\n      />\n    </DashboardLayout>\n  );\n};\n\n// Wrap with React.memo to prevent unnecessary re-renders\nconst Acudientes = React.memo(AcudientesComponent);\n\nexport default Acudientes;\n","/**\n * Validation Utilities\n * Centralized validation functions for the application\n */\n\nimport { dbService } from '../services';\n\n/**\n * Validate that a documento number is unique for participantes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} participanteId - ID of current participante (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteDocumentoUnico = async (numeroDocumento, participanteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => {\n        const pId = p.id || p.id_participante;\n        return p.numero_documento === numeroDocumento && pId !== participanteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro participante' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate that a documento number is unique for acudientes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} acudienteId - ID of current acudiente (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteDocumentoUnico = async (numeroDocumento, acudienteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => {\n        const aId = a.id || a.id_acudiente;\n        return a.numero_documento === numeroDocumento && aId !== acudienteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro acudiente' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate email format\n * @param {string} email - Email to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateEmail = (email) => {\n  if (!email || !email.trim()) {\n    return { isValid: false, error: 'El email es requerido' };\n  }\n\n  // Basic email regex pattern\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  if (!emailRegex.test(email)) {\n    return { \n      isValid: false, \n      error: 'El formato del email no es válido' \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate date format and ensure it's not in the future\n * @param {string} fecha - Date string to validate\n * @param {string} fieldName - Name of the field for error messages\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFecha = (fecha, fieldName = 'fecha') => {\n  if (!fecha) {\n    return { isValid: false, error: `La ${fieldName} es requerida` };\n  }\n\n  const date = new Date(fecha);\n  const today = new Date();\n  \n  // Reset time to compare only dates\n  today.setHours(23, 59, 59, 999);\n\n  // Check if date is valid\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no es válida` \n    };\n  }\n\n  // Check if date is not in the future\n  if (date > today) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no puede ser futura` \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate fecha_nacimiento specifically\n * @param {string} fechaNacimiento - Birth date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaNacimiento = (fechaNacimiento) => {\n  return validateFecha(fechaNacimiento, 'fecha de nacimiento');\n};\n\n/**\n * Validate fecha_ingreso specifically\n * @param {string} fechaIngreso - Entry date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaIngreso = (fechaIngreso) => {\n  return validateFecha(fechaIngreso, 'fecha de ingreso');\n};\n\n/**\n * Validate that a participante exists\n * @param {number} participanteId - ID of participante to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteExists = async (participanteId) => {\n  try {\n    if (!participanteId) {\n      return { isValid: false, error: 'Debe seleccionar un participante' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => \n        (p.id_participante || p.id) === parseInt(participanteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El participante seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante exists:', err);\n    return { isValid: false, error: 'Error al validar el participante' };\n  }\n};\n\n/**\n * Validate that a sede exists\n * @param {number} sedeId - ID of sede to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateSedeExists = async (sedeId) => {\n  try {\n    if (!sedeId) {\n      return { isValid: false, error: 'Debe seleccionar una sede' };\n    }\n\n    const result = await dbService.getSedes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(s => \n        (s.id_sede || s.id) === parseInt(sedeId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'La sede seleccionada no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating sede exists:', err);\n    return { isValid: false, error: 'Error al validar la sede' };\n  }\n};\n\n/**\n * Validate that an acudiente exists\n * @param {number} acudienteId - ID of acudiente to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteExists = async (acudienteId) => {\n  try {\n    if (!acudienteId) {\n      return { isValid: false, error: 'Debe seleccionar un acudiente' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => \n        (a.id_acudiente || a.id) === parseInt(acudienteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El acudiente seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente exists:', err);\n    return { isValid: false, error: 'Error al validar el acudiente' };\n  }\n};\n\n/**\n * Validate mensualidad relationships (participante and acudiente must exist)\n * @param {number} participanteId - ID of participante\n * @param {number} acudienteId - ID of acudiente\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateMensualidadRelations = async (participanteId, acudienteId) => {\n  // Validate participante\n  const participanteValidation = await validateParticipanteExists(participanteId);\n  if (!participanteValidation.isValid) {\n    return participanteValidation;\n  }\n\n  // Validate acudiente\n  const acudienteValidation = await validateAcudienteExists(acudienteId);\n  if (!acudienteValidation.isValid) {\n    return acudienteValidation;\n  }\n\n  return { isValid: true, error: null };\n};\n"],"names":["formatParticipantName","participante","nombres","apellidos","concat","trim","nombre","formatSede","sede","direccion","String","normalizeStatus","estado","upper","toUpperCase","formatGender","genero","formatDocument","tipo","numero","createEnhancedCSV","options","title","data","headers","metadata","statistics","filters","sections","currentDate","Date","toLocaleDateString","year","month","day","hour","minute","push","generatedBy","activeFilters","Object","entries","filter","_ref","key","value","length","forEach","_ref2","filterLabel","charAt","slice","replace","statsEntries","_ref3","_","undefined","_ref4","statLabel","l","headerRow","map","h","label","join","row","dataRow","header","getNestedValue","stringValue","includes","downloadCSV","csvContent","filename","blob","Blob","type","link","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","obj","path","split","reduce","current","formatDateForCSV","date","_unused","formatCurrencyForCSV","amount","Intl","NumberFormat","currency","minimumFractionDigits","format","_unused2","calculateAge","birthDate","birth","today","age","getFullYear","monthDiff","getMonth","getDate","_unused3","AcudientesComponent","acudientes","setAcudientes","useState","participantes","setParticipantes","loading","setLoading","error","setError","filtros","setFilter","clearFilters","useFilters","busqueda","verModal","useModal","editarModal","crearModal","loadAcudientes","useCallback","async","_result$data","console","log","result","dbService","getAcudientes","Error","message","acudientesData","Array","isArray","err","loadParticipantes","_result$data2","getParticipantes","participantesData","useEffect","filteredAcudientes","useMemo","filtered","a","_a$participante","participanteId","id_participante","toString","numero_documento","statsData","icon","color","handleExportPDF","printWindow","window","open","htmlContent","p","find","part","id","acudiente","acudienteNombre","acudienteDoc","tipo_documento","participanteNombre","parentesco","telefono","email","write","close","handleExportCSV","csvData","nombre_completo","participante_id","participante_nombre","participante_documento","parentescoCounts","sort","b","count","toFixed","appliedFilters","búsqueda","toISOString","_jsx","DashboardLayout","subtitle","loadingText","children","className","_jsxs","filterConfig","name","placeholder","extraActions","ExportDropdown","onExportPDF","onExportCSV","onClick","openModal","FilterBar","values","onChange","onClear","showClearButton","StatsGrid","stats","columns","gap","DataTable","keyExtractor","id_acudiente","render","hideInMobile","ActionDropdown","actions","setData","ViewDetailsModal","isOpen","onClose","closeModal","EditFormModal","onSubmit","acudienteId","documentoValidation","validateAcudienteDocumentoUnico","formData","isValid","emailValidation","validateEmail","updateAcudiente","initialData","fields","required","CreateFormModal","participanteValidation","validateParticipanteExists","createAcudiente","React","validateParticipanteDocumentoUnico","numeroDocumento","arguments","some","pId","aId","test","validateFecha","fecha","fieldName","setHours","isNaN","getTime","validateFechaNacimiento","fechaNacimiento","validateFechaIngreso","fechaIngreso","parseInt","validateSedeExists","sedeId","getSedes","s","id_sede","validateMensualidadRelations","acudienteValidation","validateAcudienteExists"],"sourceRoot":""}