{"version":3,"file":"static/js/341.1f190cf6.chunk.js","mappings":"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","sources":["shared/utils/exportUtils.js","pages/Dashboard/Participantes.jsx","shared/utils/validationUtils.js"],"sourcesContent":["/**\n * Export Utilities\n * Functions for exporting data to different formats (CSV, PDF)\n */\n\n/**\n * Format participant name consistently\n * @param {Object} participante - Participant object\n * @returns {string} Formatted full name\n */\nexport const formatParticipantName = (participante) => {\n  if (!participante) return 'N/A';\n  \n  if (participante.nombres && participante.apellidos) {\n    return `${participante.nombres} ${participante.apellidos}`.trim();\n  }\n  \n  return participante.nombre || 'N/A';\n};\n\n/**\n * Format sede information\n * @param {Object|string} sede - Sede object or string\n * @returns {string} Formatted sede name\n */\nexport const formatSede = (sede) => {\n  if (!sede) return 'N/A';\n  \n  if (typeof sede === 'object' && sede !== null) {\n    return sede.direccion || sede.nombre || 'N/A';\n  }\n  \n  return String(sede);\n};\n\n/**\n * Normalize status display\n * @param {string} estado - Status value\n * @returns {string} Normalized status\n */\nexport const normalizeStatus = (estado) => {\n  if (!estado) return 'N/A';\n  \n  const upper = String(estado).toUpperCase();\n  if (upper === 'ACTIVO') return 'Activo';\n  if (upper === 'INACTIVO') return 'Inactivo';\n  if (upper === 'PAGADA') return 'Pagada';\n  if (upper === 'PENDIENTE') return 'Pendiente';\n  if (upper === 'VENCIDA') return 'Vencida';\n  \n  return estado;\n};\n\n/**\n * Format gender display\n * @param {string} genero - Gender value\n * @returns {string} Formatted gender\n */\nexport const formatGender = (genero) => {\n  if (!genero) return 'N/A';\n  \n  if (genero === 'MASCULINO') return 'Masculino';\n  if (genero === 'FEMENINO') return 'Femenino';\n  \n  return genero;\n};\n\n/**\n * Format document type and number\n * @param {string} tipo - Document type\n * @param {string} numero - Document number\n * @returns {string} Formatted document\n */\nexport const formatDocument = (tipo, numero) => {\n  if (!numero) return 'N/A';\n  const tipoDoc = tipo || 'CC';\n  return `${tipoDoc}: ${numero}`;\n};\n\n/**\n * Convert array of objects to CSV format\n * @param {Array} data - Array of objects to convert\n * @param {Array} headers - Array of header objects {key, label}\n * @returns {string} CSV formatted string\n */\nexport const arrayToCSV = (data, headers) => {\n  if (!data || !Array.isArray(data) || data.length === 0) {\n    return '';\n  }\n\n  // Create header row\n  const headerRow = headers.map(header => `\"${header.label}\"`).join(',');\n\n  // Create data rows\n  const dataRows = data.map(row => {\n    return headers.map(header => {\n      const value = getNestedValue(row, header.key);\n      // Escape quotes and wrap in quotes if contains comma, quote, or newline\n      const stringValue = String(value || '');\n      if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      return stringValue;\n    }).join(',');\n  });\n\n  return [headerRow, ...dataRows].join('\\n');\n};\n\n/**\n * Create enhanced CSV with metadata, statistics, and better formatting\n * @param {Object} options - Configuration options\n * @param {string} options.title - Title of the report\n * @param {Array} options.data - Array of data objects\n * @param {Array} options.headers - Array of header objects {key, label}\n * @param {Object} options.metadata - Additional metadata {organization, generatedBy, etc}\n * @param {Object} options.statistics - Statistics to include\n * @param {Object} options.filters - Applied filters\n * @returns {string} Enhanced CSV formatted string\n */\nexport const createEnhancedCSV = (options) => {\n  const {\n    title = 'Reporte',\n    data = [],\n    headers = [],\n    metadata = {},\n    statistics = {},\n    filters = {}\n  } = options;\n\n  const sections = [];\n  const currentDate = new Date().toLocaleDateString('es-CO', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  // ========== SECCIÓN 1: ENCABEZADO Y METADATA ==========\n  sections.push(`\"${title.toUpperCase()}\"`);\n  sections.push(`\"Corporación Todo por un Alma\"`);\n  sections.push(`\"Fecha de generación:\",\"${currentDate}\"`);\n  \n  if (metadata.generatedBy) {\n    sections.push(`\"Generado por:\",\"${metadata.generatedBy}\"`);\n  }\n  \n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 2: FILTROS APLICADOS ==========\n  const activeFilters = Object.entries(filters).filter(([key, value]) => {\n    return value && value !== 'all' && value !== 'Todos' && value !== 'Todas' && value !== '';\n  });\n\n  if (activeFilters.length > 0) {\n    sections.push(`\"FILTROS APLICADOS\"`);\n    activeFilters.forEach(([key, value]) => {\n      const filterLabel = key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');\n      sections.push(`\"${filterLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 3: ESTADÍSTICAS ==========\n  const statsEntries = Object.entries(statistics).filter(([_, value]) => value !== undefined);\n  \n  if (statsEntries.length > 0) {\n    sections.push(`\"ESTADÍSTICAS\"`);\n    statsEntries.forEach(([key, value]) => {\n      const statLabel = key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n      sections.push(`\"${statLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 4: DATOS ==========\n  sections.push(`\"DATOS DEL REPORTE\"`);\n  sections.push(''); // Línea en blanco\n\n  // Crear encabezados de columnas\n  const headerRow = headers.map(h => `\"${h.label}\"`).join(',');\n  sections.push(headerRow);\n\n  // Crear filas de datos\n  if (data.length === 0) {\n    sections.push(`\"No hay datos disponibles\"`);\n  } else {\n    data.forEach(row => {\n      const dataRow = headers.map(header => {\n        const value = getNestedValue(row, header.key);\n        const stringValue = String(value || '');\n        // Escapar comillas dobles y envolver en comillas si contiene comas, comillas o saltos de línea\n        if (stringValue.includes(',') || stringValue.includes('\"') || stringValue.includes('\\n')) {\n          return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n        }\n        return `\"${stringValue}\"`;\n      }).join(',');\n      sections.push(dataRow);\n    });\n  }\n\n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 5: RESUMEN FINAL ==========\n  sections.push(`\"RESUMEN\"`);\n  sections.push(`\"Total de registros:\",\"${data.length}\"`);\n  sections.push(`\"Reporte generado el:\",\"${currentDate}\"`);\n  \n  return sections.join('\\n');\n};\n\n/**\n * Format statistics for CSV export\n * @param {Array} data - Data array to analyze\n * @param {string} statusField - Field name containing status\n * @returns {Object} Statistics object\n */\nexport const generateStatistics = (data, statusField = 'estado') => {\n  const total = data.length;\n  const stats = {\n    'Total de Registros': total\n  };\n\n  // Count by status\n  const statusCounts = {};\n  data.forEach(item => {\n    const status = normalizeStatus(item[statusField]);\n    statusCounts[status] = (statusCounts[status] || 0) + 1;\n  });\n\n  Object.entries(statusCounts).forEach(([status, count]) => {\n    stats[status] = `${count} (${((count / total) * 100).toFixed(1)}%)`;\n  });\n\n  return stats;\n};\n\n/**\n * Download data as CSV file with UTF-8 BOM for proper Excel encoding\n * @param {string} csvContent - CSV content as string\n * @param {string} filename - Name of the file to download\n */\nexport const downloadCSV = (csvContent, filename) => {\n  // Add UTF-8 BOM for proper Excel encoding of special characters (ñ, á, é, í, ó, ú)\n  const BOM = '\\uFEFF';\n  const blob = new Blob([BOM + csvContent], {\n    type: 'text/csv;charset=utf-8;'\n  });\n  \n  const link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n};\n\n/**\n * Get nested value from object using dot notation\n * @param {Object} obj - Object to get value from\n * @param {string} path - Path to value (e.g., 'sede.direccion')\n * @returns {any} Value at path or undefined\n */\nexport const getNestedValue = (obj, path) => {\n  return path.split('.').reduce((current, key) => current?.[key], obj);\n};\n\n/**\n * Format date for CSV export\n * @param {string|Date} date - Date to format\n * @returns {string} Formatted date string\n */\nexport const formatDateForCSV = (date) => {\n  if (!date) return '';\n  try {\n    return new Date(date).toLocaleDateString('es-ES');\n  } catch {\n    return String(date);\n  }\n};\n\n/**\n * Format currency for CSV export\n * @param {number} amount - Amount to format\n * @returns {string} Formatted currency string\n */\nexport const formatCurrencyForCSV = (amount) => {\n  if (amount === null || amount === undefined) return '';\n  try {\n    return new Intl.NumberFormat('es-CO', {\n      style: 'currency',\n      currency: 'COP',\n      minimumFractionDigits: 0\n    }).format(amount);\n  } catch {\n    return String(amount);\n  }\n};\n\n/**\n * Calculate age from birth date\n * @param {string|Date} birthDate - Birth date\n * @returns {string} Age string or empty string\n */\nexport const calculateAge = (birthDate) => {\n  if (!birthDate) return '';\n  try {\n    const birth = new Date(birthDate);\n    const today = new Date();\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n      age--;\n    }\n    return age > 0 ? `${age} años` : '';\n  } catch {\n    return '';\n  }\n};","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService } from \"shared/services\";\nimport { FilterBar, StatsGrid, DataTable, ActionDropdown, StatusToggle, FormInput, FormSelect, FormGroup, ExportDropdown } from \"components/UI\";\nimport { ViewDetailsModal, EditFormModal, CreateFormModal } from \"components/common\";\nimport { useFilters, useModal } from \"shared/hooks\";\nimport {\n  validateParticipanteDocumentoUnico,\n  validateFechaNacimiento,\n  validateFechaIngreso,\n  validateSedeExists\n} from \"shared/utils/validationUtils\";\nimport {\n  createEnhancedCSV,\n  downloadCSV,\n  calculateAge,\n  formatDateForCSV,\n  formatParticipantName,\n  formatSede,\n  normalizeStatus,\n  formatGender\n} from \"shared/utils/exportUtils\";\n// import jsPDF from 'jspdf'; // Temporarily disabled - not available in Docker dev\n\nconst Participantes = React.memo(() => {\n  const [participantes, setParticipantes] = useState([]); // Asegurar que siempre sea array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Use the useFilters hook for filter state management\n  const { filters: filtros, setFilter, clearFilters } = useFilters({\n    sede: \"Todas\",\n    genero: \"Todos\",\n    estado: \"Todos\",\n    busqueda: \"\"\n  });\n\n  // Use the useModal hook for modal state management\n  const viewModal = useModal();\n  const editModal = useModal();\n  const createModal = useModal();\n\n  // Función para cargar participantes (usando useCallback para evitar re-renders)\n  const loadParticipantes = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Cargando participantes...');\n      \n      const result = await dbService.getParticipantes();\n      console.log('📊 Resultado participantes:', result);\n      console.log('📦 result.data:', result.data);\n      console.log('📦 result.data type:', typeof result.data);\n      console.log('📦 result.data isArray:', Array.isArray(result.data));\n\n      if (result.error) {\n        throw new Error(result.error.message || 'Error al cargar participantes');\n      }\n\n      // The API returns {data: {data: [...], error: null}, error: null}, so we need result.data.data\n      const participantesData = Array.isArray(result.data?.data) ? result.data.data : [];\n      console.log('🔄 participantesData:', participantesData);\n      console.log('🔄 participantesData.length:', participantesData.length);\n      setParticipantes(participantesData);\n      console.log('✅ Participantes cargados:', participantesData.length);\n    } catch (err) {\n      console.error('❌ Error cargando participantes:', err);\n      setError(err.message || 'Error desconocido al cargar participantes');\n      setParticipantes([]); // Asegurar que no quede undefined\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadParticipantes();\n  }, [loadParticipantes]);\n\n  // Funciones para manejar modales (memoized)\n  const abrirModal = useCallback((tipo, participante) => {\n    if (tipo === 'ver') {\n      viewModal.openModal(null, participante);\n    } else if (tipo === 'editar') {\n      editModal.openModal(null, participante);\n    } else if (tipo === 'crear') {\n      createModal.openModal();\n    }\n  }, [viewModal, editModal, createModal]);\n\n  const filteredParticipantes = useMemo(() => {\n    // Asegurar que participantes siempre sea un array\n    const safeParticipantes = Array.isArray(participantes) ? participantes : [];\n    let filtered = safeParticipantes;\n\n    if (filtros.sede !== \"Todas\") {\n      filtered = filtered.filter(p => {\n        const sedeNombre = p.sede?.direccion || p.sede || '';\n        return sedeNombre.toLowerCase().includes(filtros.sede.toLowerCase());\n      });\n    }\n    if (filtros.genero !== \"Todos\") {\n      filtered = filtered.filter(p => p.genero === filtros.genero);\n    }\n    if (filtros.estado !== \"Todos\") {\n      // Support both ACTIVO/INACTIVO and Activo/Inactivo\n      const estadoUpper = filtros.estado.toUpperCase();\n      filtered = filtered.filter(p => \n        p.estado === filtros.estado || \n        p.estado === estadoUpper ||\n        (filtros.estado === 'Activo' && p.estado === 'ACTIVO') ||\n        (filtros.estado === 'Inactivo' && p.estado === 'INACTIVO')\n      );\n    }\n    if (filtros.busqueda) {\n      const searchLower = filtros.busqueda.toLowerCase();\n      filtered = filtered.filter(p => {\n        const documento = (p.numero_documento || '').toLowerCase();\n\n        return documento.includes(searchLower);\n      });\n    }\n    return filtered;\n  }, [participantes, filtros]);\n\n  const toggleEstado = useCallback(async (id, newEstado) => {\n    try {\n      await dbService.updateParticipante(id, { estado: newEstado });\n      // Refresh data\n      const { data } = await dbService.getParticipantes();\n      setParticipantes(data || []);\n    } catch (err) {\n      console.error('Error updating status:', err);\n    }\n  }, []);\n\n  const handleActionClick = useCallback((action, participante) => {\n    switch (action) {\n      case 'ver':\n        abrirModal('ver', participante);\n        break;\n      case 'editar':\n        abrirModal('editar', participante);\n        break;\n      default:\n        // No action\n        break;\n    }\n  }, [abrirModal]);\n\n  const handleExportPDF = useCallback(() => {\n    // Create a new window for printing\n    const printWindow = window.open('', '_blank');\n    const currentDate = new Date().toLocaleDateString('es-ES');\n\n    // Generate HTML content for PDF\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Lista de Participantes - ${currentDate}</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              margin: 20px;\n              color: #333;\n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n              border-bottom: 2px solid #333;\n              padding-bottom: 20px;\n            }\n            .header h1 {\n              color: #2563eb;\n              margin: 0;\n              font-size: 24px;\n            }\n            .filters {\n              margin-bottom: 20px;\n              background: #f8f9fa;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .filters h3 {\n              margin: 0 0 10px 0;\n              color: #495057;\n            }\n            .filters p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin-top: 20px;\n            }\n            th, td {\n              border: 1px solid #ddd;\n              padding: 8px 12px;\n              text-align: left;\n            }\n            th {\n              background-color: #f8f9fa;\n              font-weight: bold;\n              color: #495057;\n            }\n            tr:nth-child(even) {\n              background-color: #f9f9f9;\n            }\n            .stats {\n              margin-top: 30px;\n              background: #e3f2fd;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .stats h3 {\n              margin: 0 0 10px 0;\n              color: #1976d2;\n            }\n            .stats p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            @media print {\n              body { margin: 0; }\n              .no-print { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Lista de Participantes</h1>\n            <p>Corporación Todo por un Alma</p>\n            <p>Fecha de generación: ${currentDate}</p>\n          </div>\n\n          <div class=\"filters\">\n            <h3>Filtros aplicados:</h3>\n            <p><strong>Sede:</strong> ${filtros.sede === 'Todas' ? 'Todas las sedes' : filtros.sede}</p>\n            <p><strong>Género:</strong> ${filtros.genero === 'Todos' ? 'Todos los géneros' : filtros.genero}</p>\n            <p><strong>Estado:</strong> ${filtros.estado === 'Todos' ? 'Todos los estados' : filtros.estado}</p>\n            ${filtros.busqueda ? `<p><strong>Búsqueda:</strong> \"${filtros.busqueda}\"</p>` : ''}\n          </div>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Edad</th>\n                <th>Género</th>\n                <th>Teléfono</th>\n                <th>Sede</th>\n                <th>Estado</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${filteredParticipantes.map(participante => `\n                <tr>\n                  <td>${formatParticipantName(participante)}</td>\n                  <td>${calculateAge(participante.fecha_nacimiento) || 'N/A'}</td>\n                  <td>${formatGender(participante.genero)}</td>\n                  <td>${participante.telefono || 'N/A'}</td>\n                  <td>${formatSede(participante.sede)}</td>\n                  <td>${normalizeStatus(participante.estado)}</td>\n                </tr>\n              `).join('')}\n            </tbody>\n          </table>\n\n          <div class=\"stats\">\n            <h3>Estadísticas:</h3>\n            <p><strong>Total de participantes:</strong> ${filteredParticipantes.length}</p>\n            <p><strong>Activos:</strong> ${filteredParticipantes.filter(p => {\n              const upper = String(p.estado || '').toUpperCase();\n              return upper === 'ACTIVO';\n            }).length}</p>\n            <p><strong>Inactivos:</strong> ${filteredParticipantes.filter(p => {\n              const upper = String(p.estado || '').toUpperCase();\n              return upper === 'INACTIVO';\n            }).length}</p>\n          </div>\n\n          <script>\n            window.onload = function() {\n              window.print();\n              setTimeout(function() {\n                window.close();\n              }, 1000);\n            }\n          </script>\n        </body>\n      </html>\n    `;\n\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }, [filtros, filteredParticipantes]);\n\n  const handleExportCSV = useCallback(() => {\n    const headers = [\n      { key: 'tipo_documento', label: 'Tipo Documento' },\n      { key: 'numero_documento', label: 'Número Documento' },\n      { key: 'nombres', label: 'Nombres' },\n      { key: 'apellidos', label: 'Apellidos' },\n      { key: 'nombre_completo', label: 'Nombre Completo' },\n      { key: 'fecha_nacimiento', label: 'Fecha Nacimiento' },\n      { key: 'edad', label: 'Edad' },\n      { key: 'genero', label: 'Género' },\n      { key: 'telefono', label: 'Teléfono' },\n      { key: 'sede', label: 'Sede' },\n      { key: 'fecha_ingreso', label: 'Fecha Ingreso' },\n      { key: 'estado', label: 'Estado' }\n    ];\n\n    const csvData = filteredParticipantes.map(participante => ({\n      tipo_documento: participante.tipo_documento || 'N/A',\n      numero_documento: participante.numero_documento || 'N/A',\n      nombres: participante.nombres || 'N/A',\n      apellidos: participante.apellidos || 'N/A',\n      nombre_completo: formatParticipantName(participante),\n      fecha_nacimiento: formatDateForCSV(participante.fecha_nacimiento),\n      edad: calculateAge(participante.fecha_nacimiento) || 'N/A',\n      genero: formatGender(participante.genero),\n      telefono: participante.telefono || 'N/A',\n      sede: formatSede(participante.sede),\n      fecha_ingreso: formatDateForCSV(participante.fecha_ingreso),\n      estado: normalizeStatus(participante.estado)\n    }));\n\n    // Generar estadísticas\n    const activosCount = filteredParticipantes.filter(p => {\n      const upper = String(p.estado || '').toUpperCase();\n      return upper === 'ACTIVO';\n    }).length;\n    \n    const inactivosCount = filteredParticipantes.filter(p => {\n      const upper = String(p.estado || '').toUpperCase();\n      return upper === 'INACTIVO';\n    }).length;\n\n    const masculinoCount = filteredParticipantes.filter(p => p.genero === 'MASCULINO').length;\n    const femeninoCount = filteredParticipantes.filter(p => p.genero === 'FEMENINO').length;\n\n    const statistics = {\n      'Total de Participantes': filteredParticipantes.length,\n      'Participantes Activos': `${activosCount} (${((activosCount / filteredParticipantes.length) * 100).toFixed(1)}%)`,\n      'Participantes Inactivos': `${inactivosCount} (${((inactivosCount / filteredParticipantes.length) * 100).toFixed(1)}%)`,\n      'Género Masculino': `${masculinoCount} (${((masculinoCount / filteredParticipantes.length) * 100).toFixed(1)}%)`,\n      'Género Femenino': `${femeninoCount} (${((femeninoCount / filteredParticipantes.length) * 100).toFixed(1)}%)`\n    };\n\n    // Preparar filtros aplicados\n    const appliedFilters = {\n      sede: filtros.sede !== 'Todas' ? filtros.sede : null,\n      género: filtros.genero !== 'Todos' ? filtros.genero : null,\n      estado: filtros.estado !== 'Todos' ? filtros.estado : null,\n      búsqueda: filtros.busqueda || null\n    };\n\n    const csvContent = createEnhancedCSV({\n      title: 'Reporte de Participantes',\n      data: csvData,\n      headers,\n      metadata: {\n        generatedBy: 'Sistema de Gestión'\n      },\n      statistics,\n      filters: appliedFilters\n    });\n\n    const filename = `participantes_${new Date().toISOString().split('T')[0]}.csv`;\n    downloadCSV(csvContent, filename);\n  }, [filteredParticipantes, filtros]);\n\n  if (loading) {\n    return (\n      <DashboardLayout title=\"Participantes\" subtitle=\"Gestión de participantes\" loading={true} loadingText=\"Cargando participantes...\" />\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout title=\"Participantes\" subtitle=\"Error al cargar datos\" loading={false}>\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading participants: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout title=\"Gestión de Participantes\" subtitle=\"Administra los participantes de la fundación\" extraActions={\n      <div className=\"flex space-x-3\">\n        <ExportDropdown\n          onExportPDF={handleExportPDF}\n          onExportCSV={handleExportCSV}\n        />\n        <button\n          onClick={() => abrirModal('crear', null)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n        >\n          <i className=\"fas fa-plus mr-2\"></i>\n          Nuevo Participante\n        </button>\n      </div>\n    }>\n      <section className=\"px-6 py-6\">\n        <FilterBar\n          filters={[\n            {\n              type: 'select',\n              name: 'sede',\n              label: 'Sede',\n              options: [\n                { value: 'Todas', label: 'Todas las Sedes' },\n                { value: 'Bello Principal', label: 'Bello Principal' },\n                { value: 'Bello Campestre', label: 'Bello Campestre' },\n                { value: 'Apartadó', label: 'Apartadó' }\n              ]\n            },\n            {\n              type: 'select',\n              name: 'genero',\n              label: 'Género',\n              options: [\n                { value: 'Todos', label: 'Todos los Géneros' },\n                { value: 'MASCULINO', label: 'Masculino' },\n                { value: 'FEMENINO', label: 'Femenino' }\n              ]\n            },\n            {\n              type: 'select',\n              name: 'estado',\n              label: 'Estado',\n              options: [\n                { value: 'Todos', label: 'Todos los Estados' },\n                { value: 'Activo', label: 'Activo' },\n                { value: 'Inactivo', label: 'Inactivo' }\n              ]\n            },\n            {\n              type: 'search',\n              name: 'busqueda',\n              label: 'Búsqueda por Documento',\n              placeholder: 'Número de documento...',\n              debounceMs: 300\n            }\n          ]}\n          values={filtros}\n          onChange={setFilter}\n          onClear={clearFilters}\n          showClearButton={true}\n        />\n\n        {/* Estadísticas Rápidas */}\n        <div className=\"mt-6\">\n          <StatsGrid\n            stats={[\n              {\n                title: 'Total Participantes',\n                value: filteredParticipantes.length,\n                icon: 'fas fa-users',\n                color: 'blue'\n              },\n              {\n                title: 'Activos',\n                value: filteredParticipantes.filter(p => p.estado === \"ACTIVO\" || p.estado === \"Activo\").length,\n                icon: 'fas fa-user-check',\n                color: 'green'\n              },\n              {\n                title: 'Inactivos',\n                value: filteredParticipantes.filter(p => p.estado === \"INACTIVO\" || p.estado === \"Inactivo\").length,\n                icon: 'fas fa-user-times',\n                color: 'red'\n              }\n            ]}\n            columns={3}\n            gap=\"md\"\n          />\n        </div>\n\n        {/* Tabla de Participantes */}\n        <div className=\"mt-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">Lista de Participantes</h3>\n          </div>\n          \n          <DataTable\n            data={filteredParticipantes}\n            keyExtractor={(row) => row.id || row.id_participante}\n            columns={[\n              {\n                key: 'participante',\n                header: 'Participante',\n                render: (row) => {\n                  const nombreCompleto = row.nombres && row.apellidos \n                    ? `${row.nombres} ${row.apellidos}` \n                    : row.nombre || 'N/A';\n                  const tipoDoc = row.tipo_documento || 'N/A';\n                  const numDoc = row.numero_documento || 'N/A';\n                  \n                  return (\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                        <i className=\"fas fa-user text-blue-600\"></i>\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {nombreCompleto}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {tipoDoc} {numDoc}\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n              },\n              {\n                key: 'edad',\n                header: 'Edad',\n                render: (row) => {\n                  if (row.fecha_nacimiento) {\n                    const birthDate = new Date(row.fecha_nacimiento);\n                    const today = new Date();\n                    let age = today.getFullYear() - birthDate.getFullYear();\n                    const monthDiff = today.getMonth() - birthDate.getMonth();\n                    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n                      age--;\n                    }\n                    return `${age} años`;\n                  }\n                  return row.edad ? `${row.edad} años` : 'N/A';\n                }\n              },\n              {\n                key: 'genero',\n                header: 'Género',\n                render: (row) => (\n                  row.genero === 'MASCULINO' ? 'Masculino' : row.genero === 'FEMENINO' ? 'Femenino' : 'N/A'\n                )\n              },\n              {\n                key: 'fecha_ingreso',\n                header: 'Fecha Ingreso',\n                render: (row) => {\n                  if (row.fecha_ingreso) {\n                    return new Date(row.fecha_ingreso).toLocaleDateString('es-ES');\n                  }\n                  return 'N/A';\n                }\n              },\n              {\n                key: 'sede',\n                header: 'Sede',\n                render: (row) => row.sede?.direccion || row.sede || 'N/A'\n              },\n              {\n                key: 'estado',\n                header: 'Estado',\n                render: (row) => (\n                  <StatusToggle\n                    currentStatus={row.estado}\n                    statuses={[\n                      { value: 'ACTIVO', label: 'Activo', variant: 'success' },\n                      { value: 'Activo', label: 'Activo', variant: 'success' },\n                      { value: 'INACTIVO', label: 'Inactivo', variant: 'danger' },\n                      { value: 'Inactivo', label: 'Inactivo', variant: 'danger' }\n                    ]}\n                    onChange={(newEstado) => toggleEstado(row.id || row.id_participante, newEstado)}\n                  />\n                )\n              },\n              {\n                key: 'acciones',\n                header: 'Acciones',\n                render: (row) => (\n                  <ActionDropdown\n                    actions={[\n                      {\n                        label: 'Ver detalles',\n                        icon: 'fas fa-eye',\n                        onClick: () => handleActionClick('ver', row)\n                      },\n                      {\n                        label: 'Editar',\n                        icon: 'fas fa-edit',\n                        onClick: () => handleActionClick('editar', row)\n                      }\n                    ]}\n                  />\n                )\n              }\n            ]}\n            loading={loading}\n          />\n        </div>\n        </div>\n      </section>\n\n      {/* Modales */}\n      <ParticipanteViewModal\n        isOpen={viewModal.isOpen}\n        onClose={viewModal.closeModal}\n        participante={viewModal.modalData}\n        onCrearAcudiente={() => {\n          // TODO: Open acudiente creation modal with participante pre-selected\n          console.log('Crear acudiente para participante:', viewModal.modalData);\n        }}\n      />\n\n      <ParticipanteEditModal\n        isOpen={editModal.isOpen}\n        onClose={editModal.closeModal}\n        participante={editModal.modalData}\n        onActualizar={loadParticipantes}\n      />\n\n      <ParticipanteCreateModal\n        isOpen={createModal.isOpen}\n        onClose={createModal.closeModal}\n        onCrear={loadParticipantes}\n      />\n    </DashboardLayout>\n  );\n});\n\n// View Modal Component with Acudientes\nconst ParticipanteViewModal = ({ isOpen, onClose, participante, onCrearAcudiente }) => {\n  const [acudientes, setAcudientes] = useState([]);\n  const [loadingAcudientes, setLoadingAcudientes] = useState(false);\n\n  const loadAcudientes = useCallback(async () => {\n    if (!participante?.id && !participante?.id_participante) return;\n\n    try {\n      setLoadingAcudientes(true);\n      const participanteId = participante.id || participante.id_participante;\n      const result = await dbService.getAcudientesByParticipante(participanteId);\n\n      if (result.data && Array.isArray(result.data)) {\n        setAcudientes(result.data);\n      } else {\n        setAcudientes([]);\n      }\n    } catch (err) {\n      console.error('Error loading acudientes:', err);\n      setAcudientes([]);\n    } finally {\n      setLoadingAcudientes(false);\n    }\n  }, [participante]);\n\n  useEffect(() => {\n    if (isOpen && participante) {\n      loadAcudientes();\n    }\n  }, [isOpen, participante, loadAcudientes]);\n\n  if (!participante) return null;\n\n  const nombreCompleto = participante.nombres && participante.apellidos \n    ? `${participante.nombres} ${participante.apellidos}` \n    : participante.nombre || 'N/A';\n\n  const edad = (() => {\n    if (participante.fecha_nacimiento) {\n      const birthDate = new Date(participante.fecha_nacimiento);\n      const today = new Date();\n      let age = today.getFullYear() - birthDate.getFullYear();\n      const monthDiff = today.getMonth() - birthDate.getMonth();\n      if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n      }\n      return age;\n    }\n    return participante.edad || 'N/A';\n  })();\n\n  const estadoLabel = participante.estado === 'ACTIVO' || participante.estado === 'Activo' ? 'Activo' : 'Inactivo';\n  const estadoClass = participante.estado === 'ACTIVO' || participante.estado === 'Activo' \n    ? 'bg-green-100 text-green-800' \n    : 'bg-red-100 text-red-800';\n\n  return (\n    <ViewDetailsModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Detalles del Participante\"\n      data={[\n        { label: 'Nombre Completo', value: nombreCompleto },\n        { label: 'Tipo de Documento', value: participante.tipo_documento || 'N/A' },\n        { label: 'Número de Documento', value: participante.numero_documento || 'N/A' },\n        { label: 'Edad', value: typeof edad === 'number' ? `${edad} años` : edad },\n        { label: 'Fecha de Nacimiento', value: participante.fecha_nacimiento \n          ? new Date(participante.fecha_nacimiento).toLocaleDateString('es-ES') \n          : 'N/A' \n        },\n        { label: 'Género', value: participante.genero === 'MASCULINO' ? 'Masculino' : participante.genero === 'FEMENINO' ? 'Femenino' : 'N/A' },\n        { label: 'Fecha de Ingreso', value: participante.fecha_ingreso\n          ? new Date(participante.fecha_ingreso).toLocaleDateString('es-ES')\n          : 'N/A'\n        },\n        { label: 'Sede', value: participante.sede?.direccion || participante.sede || 'N/A' },\n        { label: 'Teléfono', value: participante.telefono || 'N/A' },\n        { \n          label: 'Estado', \n          value: (\n            <span className={`inline-flex px-3 py-1 text-sm font-semibold rounded-full ${estadoClass}`}>\n              {estadoLabel}\n            </span>\n          )\n        },\n        {\n          label: 'Acudientes',\n          value: (\n            <div className=\"mt-2\">\n              {loadingAcudientes ? (\n                <p className=\"text-sm text-gray-500\">Cargando acudientes...</p>\n              ) : acudientes.length > 0 ? (\n                <div className=\"space-y-2\">\n                  {acudientes.map((acudiente, index) => (\n                    <div key={acudiente.id_acudiente || index} className=\"bg-gray-50 p-3 rounded-lg border border-gray-200\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            {acudiente.nombres} {acudiente.apellidos}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">\n                            {acudiente.parentesco} • {acudiente.tipo_documento} {acudiente.numero_documento}\n                          </p>\n                          <p className=\"text-xs text-gray-500 mt-1\">\n                            <i className=\"fas fa-phone mr-1\"></i>{acudiente.telefono}\n                            {acudiente.email && (\n                              <span className=\"ml-2\">\n                                <i className=\"fas fa-envelope mr-1\"></i>{acudiente.email}\n                              </span>\n                            )}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <button\n                    onClick={onCrearAcudiente}\n                    className=\"mt-2 text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    <i className=\"fas fa-plus mr-1\"></i>\n                    Agregar otro acudiente\n                  </button>\n                </div>\n              ) : (\n                <div className=\"text-center py-4\">\n                  <p className=\"text-sm text-gray-500 mb-2\">No hay acudientes registrados</p>\n                  <button\n                    onClick={onCrearAcudiente}\n                    className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    <i className=\"fas fa-plus mr-1\"></i>\n                    Agregar acudiente\n                  </button>\n                </div>\n              )}\n            </div>\n          )\n        }\n      ]}\n    />\n  );\n};\n\n// Edit Modal Component\nconst ParticipanteEditModal = ({ isOpen, onClose, participante, onActualizar }) => {\n  if (!participante) return null;\n\n  const handleSubmit = async (formData) => {\n    console.log('🔄 Actualizando participante:', formData);\n    \n    // Validate required fields\n    if (!formData.tipo_documento || !formData.numero_documento) {\n      throw new Error('Tipo y número de documento son requeridos');\n    }\n    if (!formData.nombres?.trim() || !formData.apellidos?.trim()) {\n      throw new Error('Nombres y apellidos son requeridos');\n    }\n    if (!formData.fecha_nacimiento || !formData.fecha_ingreso) {\n      throw new Error('Fechas de nacimiento e ingreso son requeridas');\n    }\n    if (!formData.id_sede) {\n      throw new Error('Debe seleccionar una sede');\n    }\n    \n    // Validate fecha_nacimiento format and value\n    const fechaNacimientoValidation = validateFechaNacimiento(formData.fecha_nacimiento);\n    if (!fechaNacimientoValidation.isValid) {\n      throw new Error(fechaNacimientoValidation.error);\n    }\n    \n    // Validate fecha_ingreso format and value\n    const fechaIngresoValidation = validateFechaIngreso(formData.fecha_ingreso);\n    if (!fechaIngresoValidation.isValid) {\n      throw new Error(fechaIngresoValidation.error);\n    }\n    \n    // Validate documento único\n    const participanteId = participante.id || participante.id_participante;\n    const documentoValidation = await validateParticipanteDocumentoUnico(formData.numero_documento, participanteId);\n    if (!documentoValidation.isValid) {\n      throw new Error(documentoValidation.error);\n    }\n    \n    // Validate sede exists\n    const sedeValidation = await validateSedeExists(formData.id_sede);\n    if (!sedeValidation.isValid) {\n      throw new Error(sedeValidation.error);\n    }\n    \n    const result = await dbService.updateParticipante(participanteId, formData);\n    \n    if (result.error) {\n      throw new Error(result.error.message || 'Error al actualizar participante');\n    }\n    \n    console.log('✅ Participante actualizado exitosamente');\n    onActualizar();\n  };\n\n  return (\n    <EditFormModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Editar Participante\"\n      initialData={{\n        tipo_documento: participante.tipo_documento || 'CC',\n        numero_documento: participante.numero_documento || '',\n        nombres: participante.nombres || participante.nombre?.split(' ')[0] || '',\n        apellidos: participante.apellidos || participante.nombre?.split(' ').slice(1).join(' ') || '',\n        fecha_nacimiento: participante.fecha_nacimiento || '',\n        genero: participante.genero || 'MASCULINO',\n        fecha_ingreso: participante.fecha_ingreso || '',\n        estado: participante.estado || 'ACTIVO',\n        id_sede: participante.id_sede || participante.sede_id || '',\n      }}\n      onSubmit={handleSubmit}\n      submitLabel=\"Guardar Cambios\"\n    >\n      {({ formData, handleChange, errors }) => (\n        <ParticipanteForm \n          formData={formData} \n          handleChange={handleChange} \n          errors={errors}\n        />\n      )}\n    </EditFormModal>\n  );\n};\n\n// Create Modal Component\nconst ParticipanteCreateModal = ({ isOpen, onClose, onCrear }) => {\n  const handleSubmit = async (formData) => {\n    console.log('🔄 Creando participante:', formData);\n    \n    // Validate required fields\n    if (!formData.tipo_documento || !formData.numero_documento) {\n      throw new Error('Tipo y número de documento son requeridos');\n    }\n    if (!formData.nombres?.trim() || !formData.apellidos?.trim()) {\n      throw new Error('Nombres y apellidos son requeridos');\n    }\n    if (!formData.fecha_nacimiento || !formData.fecha_ingreso) {\n      throw new Error('Fechas de nacimiento e ingreso son requeridas');\n    }\n    if (!formData.id_sede) {\n      throw new Error('Debe seleccionar una sede');\n    }\n    \n    // Validate fecha_nacimiento format and value\n    const fechaNacimientoValidation = validateFechaNacimiento(formData.fecha_nacimiento);\n    if (!fechaNacimientoValidation.isValid) {\n      throw new Error(fechaNacimientoValidation.error);\n    }\n    \n    // Validate fecha_ingreso format and value\n    const fechaIngresoValidation = validateFechaIngreso(formData.fecha_ingreso);\n    if (!fechaIngresoValidation.isValid) {\n      throw new Error(fechaIngresoValidation.error);\n    }\n    \n    // Validate documento único\n    const documentoValidation = await validateParticipanteDocumentoUnico(formData.numero_documento);\n    if (!documentoValidation.isValid) {\n      throw new Error(documentoValidation.error);\n    }\n    \n    // Validate sede exists\n    const sedeValidation = await validateSedeExists(formData.id_sede);\n    if (!sedeValidation.isValid) {\n      throw new Error(sedeValidation.error);\n    }\n    \n    const result = await dbService.createParticipante(formData);\n    \n    if (result.error) {\n      throw new Error(result.error.message || 'Error al crear participante');\n    }\n    \n    console.log('✅ Participante creado exitosamente');\n    onCrear();\n  };\n\n  return (\n    <CreateFormModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Nuevo Participante\"\n      defaultValues={{\n        tipo_documento: 'CC',\n        numero_documento: '',\n        nombres: '',\n        apellidos: '',\n        fecha_nacimiento: '',\n        genero: 'MASCULINO',\n        fecha_ingreso: '',\n        estado: 'ACTIVO',\n        id_sede: '',\n      }}\n      onSubmit={handleSubmit}\n      submitLabel=\"Crear Participante\"\n    >\n      {({ formData, handleChange, errors }) => (\n        <ParticipanteForm \n          formData={formData} \n          handleChange={handleChange} \n          errors={errors}\n        />\n      )}\n    </CreateFormModal>\n  );\n};\n\n// Shared Form Component using reusable Form components\nconst ParticipanteForm = ({ formData, handleChange, errors }) => {\n  const [sedes, setSedes] = useState([]);\n  const [loadingSedes, setLoadingSedes] = useState(true);\n\n  useEffect(() => {\n    const loadSedes = async () => {\n      try {\n        setLoadingSedes(true);\n        const result = await dbService.getSedes();\n        if (result.data && Array.isArray(result.data)) {\n          setSedes(result.data);\n        }\n      } catch (err) {\n        console.error('Error loading sedes:', err);\n      } finally {\n        setLoadingSedes(false);\n      }\n    };\n    loadSedes();\n  }, []);\n\n  return (\n    <FormGroup columns={2} gap=\"md\">\n      <FormSelect\n        label=\"Tipo de Documento\"\n        name=\"tipo_documento\"\n        value={formData.tipo_documento}\n        onChange={(value) => handleChange('tipo_documento', value)}\n        options={[\n          { value: 'CC', label: 'Cédula de Ciudadanía' },\n          { value: 'TI', label: 'Tarjeta de Identidad' },\n          { value: 'CE', label: 'Cédula de Extranjería' },\n          { value: 'PASAPORTE', label: 'Pasaporte' }\n        ]}\n        error={errors?.tipo_documento}\n        required\n      />\n\n      <FormInput\n        label=\"Número de Documento\"\n        name=\"numero_documento\"\n        type=\"text\"\n        value={formData.numero_documento}\n        onChange={(value) => handleChange('numero_documento', value)}\n        error={errors?.numero_documento}\n        required\n        placeholder=\"Ingrese el número de documento\"\n      />\n\n      <FormInput\n        label=\"Nombres\"\n        name=\"nombres\"\n        type=\"text\"\n        value={formData.nombres}\n        onChange={(value) => handleChange('nombres', value)}\n        error={errors?.nombres}\n        required\n        placeholder=\"Ingrese los nombres\"\n      />\n\n      <FormInput\n        label=\"Apellidos\"\n        name=\"apellidos\"\n        type=\"text\"\n        value={formData.apellidos}\n        onChange={(value) => handleChange('apellidos', value)}\n        error={errors?.apellidos}\n        required\n        placeholder=\"Ingrese los apellidos\"\n      />\n\n      <FormInput\n        label=\"Fecha de Nacimiento\"\n        name=\"fecha_nacimiento\"\n        type=\"date\"\n        value={formData.fecha_nacimiento}\n        onChange={(value) => handleChange('fecha_nacimiento', value)}\n        error={errors?.fecha_nacimiento}\n        required\n      />\n\n      <FormSelect\n        label=\"Género\"\n        name=\"genero\"\n        value={formData.genero}\n        onChange={(value) => handleChange('genero', value)}\n        options={[\n          { value: 'MASCULINO', label: 'Masculino' },\n          { value: 'FEMENINO', label: 'Femenino' }\n        ]}\n        error={errors?.genero}\n        required\n      />\n\n      <FormInput\n        label=\"Fecha de Ingreso\"\n        name=\"fecha_ingreso\"\n        type=\"date\"\n        value={formData.fecha_ingreso}\n        onChange={(value) => handleChange('fecha_ingreso', value)}\n        error={errors?.fecha_ingreso}\n        required\n      />\n\n      <FormSelect\n        label=\"Estado\"\n        name=\"estado\"\n        value={formData.estado}\n        onChange={(value) => handleChange('estado', value)}\n        options={[\n          { value: 'ACTIVO', label: 'Activo' },\n          { value: 'INACTIVO', label: 'Inactivo' }\n        ]}\n        error={errors?.estado}\n        required\n      />\n\n      <FormSelect\n        label=\"Sede\"\n        name=\"id_sede\"\n        value={formData.id_sede}\n        onChange={(value) => handleChange('id_sede', value)}\n        options={loadingSedes ? [{ value: '', label: 'Cargando sedes...' }] : sedes.map(sede => ({\n          value: sede.id_sede || sede.id,\n          label: sede.direccion || sede.nombre\n        }))}\n        error={errors?.id_sede}\n        required\n        disabled={loadingSedes}\n      />\n    </FormGroup>\n  );\n};\n\nexport default Participantes;\n","/**\n * Validation Utilities\n * Centralized validation functions for the application\n */\n\nimport { dbService } from '../services';\n\n/**\n * Validate that a documento number is unique for participantes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} participanteId - ID of current participante (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteDocumentoUnico = async (numeroDocumento, participanteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => {\n        const pId = p.id || p.id_participante;\n        return p.numero_documento === numeroDocumento && pId !== participanteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro participante' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate that a documento number is unique for acudientes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} acudienteId - ID of current acudiente (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteDocumentoUnico = async (numeroDocumento, acudienteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => {\n        const aId = a.id || a.id_acudiente;\n        return a.numero_documento === numeroDocumento && aId !== acudienteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro acudiente' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate email format\n * @param {string} email - Email to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateEmail = (email) => {\n  if (!email || !email.trim()) {\n    return { isValid: false, error: 'El email es requerido' };\n  }\n\n  // Basic email regex pattern\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  if (!emailRegex.test(email)) {\n    return { \n      isValid: false, \n      error: 'El formato del email no es válido' \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate date format and ensure it's not in the future\n * @param {string} fecha - Date string to validate\n * @param {string} fieldName - Name of the field for error messages\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFecha = (fecha, fieldName = 'fecha') => {\n  if (!fecha) {\n    return { isValid: false, error: `La ${fieldName} es requerida` };\n  }\n\n  const date = new Date(fecha);\n  const today = new Date();\n  \n  // Reset time to compare only dates\n  today.setHours(23, 59, 59, 999);\n\n  // Check if date is valid\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no es válida` \n    };\n  }\n\n  // Check if date is not in the future\n  if (date > today) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no puede ser futura` \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate fecha_nacimiento specifically\n * @param {string} fechaNacimiento - Birth date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaNacimiento = (fechaNacimiento) => {\n  return validateFecha(fechaNacimiento, 'fecha de nacimiento');\n};\n\n/**\n * Validate fecha_ingreso specifically\n * @param {string} fechaIngreso - Entry date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaIngreso = (fechaIngreso) => {\n  return validateFecha(fechaIngreso, 'fecha de ingreso');\n};\n\n/**\n * Validate that a participante exists\n * @param {number} participanteId - ID of participante to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteExists = async (participanteId) => {\n  try {\n    if (!participanteId) {\n      return { isValid: false, error: 'Debe seleccionar un participante' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => \n        (p.id_participante || p.id) === parseInt(participanteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El participante seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante exists:', err);\n    return { isValid: false, error: 'Error al validar el participante' };\n  }\n};\n\n/**\n * Validate that a sede exists\n * @param {number} sedeId - ID of sede to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateSedeExists = async (sedeId) => {\n  try {\n    if (!sedeId) {\n      return { isValid: false, error: 'Debe seleccionar una sede' };\n    }\n\n    const result = await dbService.getSedes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(s => \n        (s.id_sede || s.id) === parseInt(sedeId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'La sede seleccionada no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating sede exists:', err);\n    return { isValid: false, error: 'Error al validar la sede' };\n  }\n};\n\n/**\n * Validate that an acudiente exists\n * @param {number} acudienteId - ID of acudiente to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteExists = async (acudienteId) => {\n  try {\n    if (!acudienteId) {\n      return { isValid: false, error: 'Debe seleccionar un acudiente' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => \n        (a.id_acudiente || a.id) === parseInt(acudienteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El acudiente seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente exists:', err);\n    return { isValid: false, error: 'Error al validar el acudiente' };\n  }\n};\n\n/**\n * Validate mensualidad relationships (participante and acudiente must exist)\n * @param {number} participanteId - ID of participante\n * @param {number} acudienteId - ID of acudiente\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateMensualidadRelations = async (participanteId, acudienteId) => {\n  // Validate participante\n  const participanteValidation = await validateParticipanteExists(participanteId);\n  if (!participanteValidation.isValid) {\n    return participanteValidation;\n  }\n\n  // Validate acudiente\n  const acudienteValidation = await validateAcudienteExists(acudienteId);\n  if (!acudienteValidation.isValid) {\n    return acudienteValidation;\n  }\n\n  return { isValid: true, error: null };\n};\n"],"names":["formatParticipantName","participante","nombres","apellidos","concat","trim","nombre","formatSede","sede","direccion","String","normalizeStatus","estado","upper","toUpperCase","formatGender","genero","formatDocument","tipo","numero","createEnhancedCSV","options","title","data","headers","metadata","statistics","filters","sections","currentDate","Date","toLocaleDateString","year","month","day","hour","minute","push","generatedBy","activeFilters","Object","entries","filter","_ref","key","value","length","forEach","_ref2","filterLabel","charAt","slice","replace","statsEntries","_ref3","_","undefined","_ref4","statLabel","l","headerRow","map","h","label","join","row","dataRow","header","getNestedValue","stringValue","includes","downloadCSV","csvContent","filename","blob","Blob","type","link","document","createElement","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","obj","path","split","reduce","current","formatDateForCSV","date","_unused","formatCurrencyForCSV","amount","Intl","NumberFormat","currency","minimumFractionDigits","format","_unused2","calculateAge","birthDate","birth","today","age","getFullYear","monthDiff","getMonth","getDate","_unused3","Participantes","React","participantes","setParticipantes","useState","loading","setLoading","error","setError","filtros","setFilter","clearFilters","useFilters","busqueda","viewModal","useModal","editModal","createModal","loadParticipantes","useCallback","async","_result$data","console","log","result","dbService","getParticipantes","Array","isArray","Error","message","participantesData","err","useEffect","abrirModal","openModal","filteredParticipantes","useMemo","filtered","p","_p$sede","toLowerCase","estadoUpper","searchLower","numero_documento","toggleEstado","id","newEstado","updateParticipante","handleActionClick","action","handleExportPDF","printWindow","window","open","htmlContent","fecha_nacimiento","telefono","write","close","handleExportCSV","csvData","tipo_documento","nombre_completo","edad","fecha_ingreso","activosCount","inactivosCount","masculinoCount","femeninoCount","toFixed","appliedFilters","género","búsqueda","toISOString","_jsx","DashboardLayout","subtitle","loadingText","children","className","_jsxs","extraActions","ExportDropdown","onExportPDF","onExportCSV","onClick","FilterBar","name","placeholder","debounceMs","values","onChange","onClear","showClearButton","StatsGrid","stats","icon","color","columns","gap","DataTable","keyExtractor","id_participante","render","nombreCompleto","tipoDoc","numDoc","_row$sede","StatusToggle","currentStatus","statuses","variant","ActionDropdown","actions","ParticipanteViewModal","isOpen","onClose","closeModal","modalData","onCrearAcudiente","ParticipanteEditModal","onActualizar","ParticipanteCreateModal","onCrear","_participante$sede","acudientes","setAcudientes","loadingAcudientes","setLoadingAcudientes","loadAcudientes","participanteId","getAcudientesByParticipante","estadoLabel","estadoClass","ViewDetailsModal","acudiente","index","parentesco","email","id_acudiente","_participante$nombre","_participante$nombre2","EditFormModal","initialData","id_sede","sede_id","onSubmit","_formData$nombres","_formData$apellidos","formData","fechaNacimientoValidation","validateFechaNacimiento","isValid","fechaIngresoValidation","validateFechaIngreso","documentoValidation","validateParticipanteDocumentoUnico","sedeValidation","validateSedeExists","submitLabel","handleChange","errors","ParticipanteForm","CreateFormModal","defaultValues","_formData$nombres2","_formData$apellidos2","createParticipante","_ref5","_ref6","sedes","setSedes","loadingSedes","setLoadingSedes","getSedes","loadSedes","FormGroup","FormSelect","required","FormInput","disabled","numeroDocumento","arguments","some","pId","validateAcudienteDocumentoUnico","acudienteId","getAcudientes","a","aId","validateEmail","test","validateFecha","fecha","fieldName","setHours","isNaN","getTime","fechaNacimiento","fechaIngreso","validateParticipanteExists","parseInt","sedeId","s","validateMensualidadRelations","participanteValidation","acudienteValidation","validateAcudienteExists"],"sourceRoot":""}