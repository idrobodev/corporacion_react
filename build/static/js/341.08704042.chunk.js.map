{"version":3,"file":"static/js/341.08704042.chunk.js","mappings":"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","sources":["pages/Dashboard/Participantes.jsx","shared/utils/validationUtils.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService } from \"shared/services\";\nimport { FilterBar, StatsGrid, DataTable, ActionDropdown, StatusToggle, FormInput, FormSelect, FormGroup } from \"components/UI\";\nimport { ViewDetailsModal, EditFormModal, CreateFormModal } from \"components/common\";\nimport { useFilters, useModal } from \"shared/hooks\";\nimport { \n  validateParticipanteDocumentoUnico, \n  validateFechaNacimiento, \n  validateFechaIngreso,\n  validateSedeExists \n} from \"shared/utils/validationUtils\";\n// import jsPDF from 'jspdf'; // Temporarily disabled - not available in Docker dev\n\nconst Participantes = React.memo(() => {\n  const [participantes, setParticipantes] = useState([]); // Asegurar que siempre sea array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Use the useFilters hook for filter state management\n  const { filters: filtros, setFilter, clearFilters } = useFilters({\n    sede: \"Todas\",\n    genero: \"Todos\",\n    estado: \"Todos\",\n    busqueda: \"\"\n  });\n\n  // Use the useModal hook for modal state management\n  const viewModal = useModal();\n  const editModal = useModal();\n  const createModal = useModal();\n\n  // Función para cargar participantes (usando useCallback para evitar re-renders)\n  const loadParticipantes = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Cargando participantes...');\n      \n      const result = await dbService.getParticipantes();\n      console.log('📊 Resultado participantes:', result);\n      console.log('📦 result.data:', result.data);\n      console.log('📦 result.data type:', typeof result.data);\n      console.log('📦 result.data isArray:', Array.isArray(result.data));\n\n      if (result.error) {\n        throw new Error(result.error.message || 'Error al cargar participantes');\n      }\n\n      // The API returns {data: [...], error: null}, so result.data is already the array\n      const participantesData = Array.isArray(result.data) ? result.data : [];\n      console.log('🔄 participantesData:', participantesData);\n      console.log('🔄 participantesData.length:', participantesData.length);\n      setParticipantes(participantesData);\n      console.log('✅ Participantes cargados:', participantesData.length);\n    } catch (err) {\n      console.error('❌ Error cargando participantes:', err);\n      setError(err.message || 'Error desconocido al cargar participantes');\n      setParticipantes([]); // Asegurar que no quede undefined\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadParticipantes();\n  }, [loadParticipantes]);\n\n  // Funciones para manejar modales (memoized)\n  const abrirModal = useCallback((tipo, participante) => {\n    if (tipo === 'ver') {\n      viewModal.openModal(null, participante);\n    } else if (tipo === 'editar') {\n      editModal.openModal(null, participante);\n    } else if (tipo === 'crear') {\n      createModal.openModal();\n    }\n  }, [viewModal, editModal, createModal]);\n\n  const filteredParticipantes = useMemo(() => {\n    // Asegurar que participantes siempre sea un array\n    const safeParticipantes = Array.isArray(participantes) ? participantes : [];\n    let filtered = safeParticipantes;\n\n    if (filtros.sede !== \"Todas\") {\n      filtered = filtered.filter(p => {\n        const sedeNombre = p.sede?.direccion || p.sede || '';\n        return sedeNombre.toLowerCase().includes(filtros.sede.toLowerCase());\n      });\n    }\n    if (filtros.genero !== \"Todos\") {\n      filtered = filtered.filter(p => p.genero === filtros.genero);\n    }\n    if (filtros.estado !== \"Todos\") {\n      // Support both ACTIVO/INACTIVO and Activo/Inactivo\n      const estadoUpper = filtros.estado.toUpperCase();\n      filtered = filtered.filter(p => \n        p.estado === filtros.estado || \n        p.estado === estadoUpper ||\n        (filtros.estado === 'Activo' && p.estado === 'ACTIVO') ||\n        (filtros.estado === 'Inactivo' && p.estado === 'INACTIVO')\n      );\n    }\n    if (filtros.busqueda) {\n      const searchLower = filtros.busqueda.toLowerCase();\n      filtered = filtered.filter(p => {\n        const documento = (p.numero_documento || '').toLowerCase();\n\n        return documento.includes(searchLower);\n      });\n    }\n    return filtered;\n  }, [participantes, filtros]);\n\n  const toggleEstado = useCallback(async (id, newEstado) => {\n    try {\n      await dbService.updateParticipante(id, { estado: newEstado });\n      // Refresh data\n      const { data } = await dbService.getParticipantes();\n      setParticipantes(data || []);\n    } catch (err) {\n      console.error('Error updating status:', err);\n    }\n  }, []);\n\n  const handleActionClick = useCallback((action, participante) => {\n    switch (action) {\n      case 'ver':\n        abrirModal('ver', participante);\n        break;\n      case 'editar':\n        abrirModal('editar', participante);\n        break;\n      default:\n        // No action\n        break;\n    }\n  }, [abrirModal]);\n\n  const handleExportPDF = useCallback(() => {\n    // Create a new window for printing\n    const printWindow = window.open('', '_blank');\n    const currentDate = new Date().toLocaleDateString('es-ES');\n\n    // Generate HTML content for PDF\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Lista de Participantes - ${currentDate}</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              margin: 20px;\n              color: #333;\n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n              border-bottom: 2px solid #333;\n              padding-bottom: 20px;\n            }\n            .header h1 {\n              color: #2563eb;\n              margin: 0;\n              font-size: 24px;\n            }\n            .filters {\n              margin-bottom: 20px;\n              background: #f8f9fa;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .filters h3 {\n              margin: 0 0 10px 0;\n              color: #495057;\n            }\n            .filters p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin-top: 20px;\n            }\n            th, td {\n              border: 1px solid #ddd;\n              padding: 8px 12px;\n              text-align: left;\n            }\n            th {\n              background-color: #f8f9fa;\n              font-weight: bold;\n              color: #495057;\n            }\n            tr:nth-child(even) {\n              background-color: #f9f9f9;\n            }\n            .stats {\n              margin-top: 30px;\n              background: #e3f2fd;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .stats h3 {\n              margin: 0 0 10px 0;\n              color: #1976d2;\n            }\n            .stats p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            @media print {\n              body { margin: 0; }\n              .no-print { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Lista de Participantes</h1>\n            <p>Corporación Todo por un Alma</p>\n            <p>Fecha de generación: ${currentDate}</p>\n          </div>\n\n          <div class=\"filters\">\n            <h3>Filtros aplicados:</h3>\n            <p><strong>Sede:</strong> ${filtros.sede === 'Todas' ? 'Todas las sedes' : filtros.sede}</p>\n            <p><strong>Género:</strong> ${filtros.genero === 'Todos' ? 'Todos los géneros' : filtros.genero}</p>\n            <p><strong>Estado:</strong> ${filtros.estado === 'Todos' ? 'Todos los estados' : filtros.estado}</p>\n            ${filtros.busqueda ? `<p><strong>Búsqueda:</strong> \"${filtros.busqueda}\"</p>` : ''}\n          </div>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Edad</th>\n                <th>Género</th>\n                <th>Teléfono</th>\n                <th>Sede</th>\n                <th>Estado</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${filteredParticipantes.map(participante => `\n                <tr>\n                  <td>${participante.nombre || 'N/A'}</td>\n                  <td>${participante.edad || 'N/A'}</td>\n                  <td>${participante.genero || 'N/A'}</td>\n                  <td>${participante.telefono || 'N/A'}</td>\n                  <td>${participante.sede || 'N/A'}</td>\n                  <td>${participante.estado || 'N/A'}</td>\n                </tr>\n              `).join('')}\n            </tbody>\n          </table>\n\n          <div class=\"stats\">\n            <h3>Estadísticas:</h3>\n            <p><strong>Total de participantes:</strong> ${filteredParticipantes.length}</p>\n            <p><strong>Activos:</strong> ${filteredParticipantes.filter(p => p.estado === 'Activo').length}</p>\n            <p><strong>Inactivos:</strong> ${filteredParticipantes.filter(p => p.estado === 'Inactivo').length}</p>\n          </div>\n\n          <script>\n            window.onload = function() {\n              window.print();\n              setTimeout(function() {\n                window.close();\n              }, 1000);\n            }\n          </script>\n        </body>\n      </html>\n    `;\n\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }, [filtros, filteredParticipantes]);\n\n  if (loading) {\n    return (\n      <DashboardLayout title=\"Participantes\" subtitle=\"Gestión de participantes\" loading={true} loadingText=\"Cargando participantes...\" />\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout title=\"Participantes\" subtitle=\"Error al cargar datos\" loading={false}>\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading participants: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout title=\"Gestión de Participantes\" subtitle=\"Administra los participantes de la fundación\" extraActions={\n      <div className=\"flex space-x-3\">\n        <button\n          onClick={() => handleExportPDF()}\n          className=\"bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors\"\n          title=\"Exportar lista filtrada a PDF\"\n        >\n          <i className=\"fas fa-file-pdf mr-2\"></i>\n          Exportar PDF\n        </button>\n        <button\n          onClick={() => abrirModal('crear', null)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n        >\n          <i className=\"fas fa-plus mr-2\"></i>\n          Nuevo Participante\n        </button>\n      </div>\n    }>\n      <section className=\"px-6 py-6\">\n        <FilterBar\n          filters={[\n            {\n              type: 'select',\n              name: 'sede',\n              label: 'Sede',\n              options: [\n                { value: 'Todas', label: 'Todas las Sedes' },\n                { value: 'Bello Principal', label: 'Bello Principal' },\n                { value: 'Bello Campestre', label: 'Bello Campestre' },\n                { value: 'Apartadó', label: 'Apartadó' }\n              ]\n            },\n            {\n              type: 'select',\n              name: 'genero',\n              label: 'Género',\n              options: [\n                { value: 'Todos', label: 'Todos los Géneros' },\n                { value: 'MASCULINO', label: 'Masculino' },\n                { value: 'FEMENINO', label: 'Femenino' }\n              ]\n            },\n            {\n              type: 'select',\n              name: 'estado',\n              label: 'Estado',\n              options: [\n                { value: 'Todos', label: 'Todos los Estados' },\n                { value: 'Activo', label: 'Activo' },\n                { value: 'Inactivo', label: 'Inactivo' }\n              ]\n            },\n            {\n              type: 'search',\n              name: 'busqueda',\n              label: 'Búsqueda por Documento',\n              placeholder: 'Número de documento...',\n              debounceMs: 300\n            }\n          ]}\n          values={filtros}\n          onChange={setFilter}\n          onClear={clearFilters}\n          showClearButton={true}\n        />\n\n        {/* Estadísticas Rápidas */}\n        <div className=\"mt-6\">\n          <StatsGrid\n            stats={[\n              {\n                title: 'Total Participantes',\n                value: filteredParticipantes.length,\n                icon: 'fas fa-users',\n                color: 'blue'\n              },\n              {\n                title: 'Activos',\n                value: filteredParticipantes.filter(p => p.estado === \"ACTIVO\" || p.estado === \"Activo\").length,\n                icon: 'fas fa-user-check',\n                color: 'green'\n              },\n              {\n                title: 'Inactivos',\n                value: filteredParticipantes.filter(p => p.estado === \"INACTIVO\" || p.estado === \"Inactivo\").length,\n                icon: 'fas fa-user-times',\n                color: 'red'\n              }\n            ]}\n            columns={3}\n            gap=\"md\"\n          />\n        </div>\n\n        {/* Tabla de Participantes */}\n        <div className=\"mt-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">Lista de Participantes</h3>\n          </div>\n          \n          <DataTable\n            data={filteredParticipantes}\n            keyExtractor={(row) => row.id || row.id_participante}\n            columns={[\n              {\n                key: 'participante',\n                header: 'Participante',\n                render: (row) => {\n                  const nombreCompleto = row.nombres && row.apellidos \n                    ? `${row.nombres} ${row.apellidos}` \n                    : row.nombre || 'N/A';\n                  const tipoDoc = row.tipo_documento || 'N/A';\n                  const numDoc = row.numero_documento || 'N/A';\n                  \n                  return (\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                        <i className=\"fas fa-user text-blue-600\"></i>\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {nombreCompleto}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {tipoDoc} {numDoc}\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n              },\n              {\n                key: 'edad',\n                header: 'Edad',\n                render: (row) => {\n                  if (row.fecha_nacimiento) {\n                    const birthDate = new Date(row.fecha_nacimiento);\n                    const today = new Date();\n                    let age = today.getFullYear() - birthDate.getFullYear();\n                    const monthDiff = today.getMonth() - birthDate.getMonth();\n                    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n                      age--;\n                    }\n                    return `${age} años`;\n                  }\n                  return row.edad ? `${row.edad} años` : 'N/A';\n                }\n              },\n              {\n                key: 'genero',\n                header: 'Género',\n                render: (row) => (\n                  row.genero === 'MASCULINO' ? 'Masculino' : row.genero === 'FEMENINO' ? 'Femenino' : 'N/A'\n                )\n              },\n              {\n                key: 'fecha_ingreso',\n                header: 'Fecha Ingreso',\n                render: (row) => {\n                  if (row.fecha_ingreso) {\n                    return new Date(row.fecha_ingreso).toLocaleDateString('es-ES');\n                  }\n                  return 'N/A';\n                }\n              },\n              {\n                key: 'sede',\n                header: 'Sede',\n                render: (row) => row.sede?.direccion || row.sede || 'N/A'\n              },\n              {\n                key: 'estado',\n                header: 'Estado',\n                render: (row) => (\n                  <StatusToggle\n                    currentStatus={row.estado}\n                    statuses={[\n                      { value: 'ACTIVO', label: 'Activo', variant: 'success' },\n                      { value: 'Activo', label: 'Activo', variant: 'success' },\n                      { value: 'INACTIVO', label: 'Inactivo', variant: 'danger' },\n                      { value: 'Inactivo', label: 'Inactivo', variant: 'danger' }\n                    ]}\n                    onChange={(newEstado) => toggleEstado(row.id || row.id_participante, newEstado)}\n                  />\n                )\n              },\n              {\n                key: 'acciones',\n                header: 'Acciones',\n                render: (row) => (\n                  <ActionDropdown\n                    actions={[\n                      {\n                        label: 'Ver detalles',\n                        icon: 'fas fa-eye',\n                        onClick: () => handleActionClick('ver', row)\n                      },\n                      {\n                        label: 'Editar',\n                        icon: 'fas fa-edit',\n                        onClick: () => handleActionClick('editar', row)\n                      }\n                    ]}\n                  />\n                )\n              }\n            ]}\n            loading={loading}\n          />\n        </div>\n        </div>\n      </section>\n\n      {/* Modales */}\n      <ParticipanteViewModal\n        isOpen={viewModal.isOpen}\n        onClose={viewModal.closeModal}\n        participante={viewModal.modalData}\n        onCrearAcudiente={() => {\n          // TODO: Open acudiente creation modal with participante pre-selected\n          console.log('Crear acudiente para participante:', viewModal.modalData);\n        }}\n      />\n\n      <ParticipanteEditModal\n        isOpen={editModal.isOpen}\n        onClose={editModal.closeModal}\n        participante={editModal.modalData}\n        onActualizar={loadParticipantes}\n      />\n\n      <ParticipanteCreateModal\n        isOpen={createModal.isOpen}\n        onClose={createModal.closeModal}\n        onCrear={loadParticipantes}\n      />\n    </DashboardLayout>\n  );\n});\n\n// View Modal Component with Acudientes\nconst ParticipanteViewModal = ({ isOpen, onClose, participante, onCrearAcudiente }) => {\n  const [acudientes, setAcudientes] = useState([]);\n  const [loadingAcudientes, setLoadingAcudientes] = useState(false);\n\n  const loadAcudientes = useCallback(async () => {\n    if (!participante?.id && !participante?.id_participante) return;\n\n    try {\n      setLoadingAcudientes(true);\n      const participanteId = participante.id || participante.id_participante;\n      const result = await dbService.getAcudientesByParticipante(participanteId);\n\n      if (result.data && Array.isArray(result.data)) {\n        setAcudientes(result.data);\n      } else {\n        setAcudientes([]);\n      }\n    } catch (err) {\n      console.error('Error loading acudientes:', err);\n      setAcudientes([]);\n    } finally {\n      setLoadingAcudientes(false);\n    }\n  }, [participante]);\n\n  useEffect(() => {\n    if (isOpen && participante) {\n      loadAcudientes();\n    }\n  }, [isOpen, participante, loadAcudientes]);\n\n  if (!participante) return null;\n\n  const nombreCompleto = participante.nombres && participante.apellidos \n    ? `${participante.nombres} ${participante.apellidos}` \n    : participante.nombre || 'N/A';\n\n  const edad = (() => {\n    if (participante.fecha_nacimiento) {\n      const birthDate = new Date(participante.fecha_nacimiento);\n      const today = new Date();\n      let age = today.getFullYear() - birthDate.getFullYear();\n      const monthDiff = today.getMonth() - birthDate.getMonth();\n      if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n      }\n      return age;\n    }\n    return participante.edad || 'N/A';\n  })();\n\n  const estadoLabel = participante.estado === 'ACTIVO' || participante.estado === 'Activo' ? 'Activo' : 'Inactivo';\n  const estadoClass = participante.estado === 'ACTIVO' || participante.estado === 'Activo' \n    ? 'bg-green-100 text-green-800' \n    : 'bg-red-100 text-red-800';\n\n  return (\n    <ViewDetailsModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Detalles del Participante\"\n      data={[\n        { label: 'Nombre Completo', value: nombreCompleto },\n        { label: 'Tipo de Documento', value: participante.tipo_documento || 'N/A' },\n        { label: 'Número de Documento', value: participante.numero_documento || 'N/A' },\n        { label: 'Edad', value: typeof edad === 'number' ? `${edad} años` : edad },\n        { label: 'Fecha de Nacimiento', value: participante.fecha_nacimiento \n          ? new Date(participante.fecha_nacimiento).toLocaleDateString('es-ES') \n          : 'N/A' \n        },\n        { label: 'Género', value: participante.genero === 'MASCULINO' ? 'Masculino' : participante.genero === 'FEMENINO' ? 'Femenino' : 'N/A' },\n        { label: 'Fecha de Ingreso', value: participante.fecha_ingreso\n          ? new Date(participante.fecha_ingreso).toLocaleDateString('es-ES')\n          : 'N/A'\n        },\n        { label: 'Sede', value: participante.sede?.direccion || participante.sede || 'N/A' },\n        { label: 'Teléfono', value: participante.telefono || 'N/A' },\n        { \n          label: 'Estado', \n          value: (\n            <span className={`inline-flex px-3 py-1 text-sm font-semibold rounded-full ${estadoClass}`}>\n              {estadoLabel}\n            </span>\n          )\n        },\n        {\n          label: 'Acudientes',\n          value: (\n            <div className=\"mt-2\">\n              {loadingAcudientes ? (\n                <p className=\"text-sm text-gray-500\">Cargando acudientes...</p>\n              ) : acudientes.length > 0 ? (\n                <div className=\"space-y-2\">\n                  {acudientes.map((acudiente, index) => (\n                    <div key={acudiente.id_acudiente || index} className=\"bg-gray-50 p-3 rounded-lg border border-gray-200\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            {acudiente.nombres} {acudiente.apellidos}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">\n                            {acudiente.parentesco} • {acudiente.tipo_documento} {acudiente.numero_documento}\n                          </p>\n                          <p className=\"text-xs text-gray-500 mt-1\">\n                            <i className=\"fas fa-phone mr-1\"></i>{acudiente.telefono}\n                            {acudiente.email && (\n                              <span className=\"ml-2\">\n                                <i className=\"fas fa-envelope mr-1\"></i>{acudiente.email}\n                              </span>\n                            )}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <button\n                    onClick={onCrearAcudiente}\n                    className=\"mt-2 text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    <i className=\"fas fa-plus mr-1\"></i>\n                    Agregar otro acudiente\n                  </button>\n                </div>\n              ) : (\n                <div className=\"text-center py-4\">\n                  <p className=\"text-sm text-gray-500 mb-2\">No hay acudientes registrados</p>\n                  <button\n                    onClick={onCrearAcudiente}\n                    className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    <i className=\"fas fa-plus mr-1\"></i>\n                    Agregar acudiente\n                  </button>\n                </div>\n              )}\n            </div>\n          )\n        }\n      ]}\n    />\n  );\n};\n\n// Edit Modal Component\nconst ParticipanteEditModal = ({ isOpen, onClose, participante, onActualizar }) => {\n  if (!participante) return null;\n\n  const handleSubmit = async (formData) => {\n    console.log('🔄 Actualizando participante:', formData);\n    \n    // Validate required fields\n    if (!formData.tipo_documento || !formData.numero_documento) {\n      throw new Error('Tipo y número de documento son requeridos');\n    }\n    if (!formData.nombres?.trim() || !formData.apellidos?.trim()) {\n      throw new Error('Nombres y apellidos son requeridos');\n    }\n    if (!formData.fecha_nacimiento || !formData.fecha_ingreso) {\n      throw new Error('Fechas de nacimiento e ingreso son requeridas');\n    }\n    if (!formData.id_sede) {\n      throw new Error('Debe seleccionar una sede');\n    }\n    \n    // Validate fecha_nacimiento format and value\n    const fechaNacimientoValidation = validateFechaNacimiento(formData.fecha_nacimiento);\n    if (!fechaNacimientoValidation.isValid) {\n      throw new Error(fechaNacimientoValidation.error);\n    }\n    \n    // Validate fecha_ingreso format and value\n    const fechaIngresoValidation = validateFechaIngreso(formData.fecha_ingreso);\n    if (!fechaIngresoValidation.isValid) {\n      throw new Error(fechaIngresoValidation.error);\n    }\n    \n    // Validate documento único\n    const participanteId = participante.id || participante.id_participante;\n    const documentoValidation = await validateParticipanteDocumentoUnico(formData.numero_documento, participanteId);\n    if (!documentoValidation.isValid) {\n      throw new Error(documentoValidation.error);\n    }\n    \n    // Validate sede exists\n    const sedeValidation = await validateSedeExists(formData.id_sede);\n    if (!sedeValidation.isValid) {\n      throw new Error(sedeValidation.error);\n    }\n    \n    const result = await dbService.updateParticipante(participanteId, formData);\n    \n    if (result.error) {\n      throw new Error(result.error.message || 'Error al actualizar participante');\n    }\n    \n    console.log('✅ Participante actualizado exitosamente');\n    onActualizar();\n  };\n\n  return (\n    <EditFormModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Editar Participante\"\n      initialData={{\n        tipo_documento: participante.tipo_documento || 'CC',\n        numero_documento: participante.numero_documento || '',\n        nombres: participante.nombres || participante.nombre?.split(' ')[0] || '',\n        apellidos: participante.apellidos || participante.nombre?.split(' ').slice(1).join(' ') || '',\n        fecha_nacimiento: participante.fecha_nacimiento || '',\n        genero: participante.genero || 'MASCULINO',\n        fecha_ingreso: participante.fecha_ingreso || '',\n        estado: participante.estado || 'ACTIVO',\n        id_sede: participante.id_sede || participante.sede_id || '',\n      }}\n      onSubmit={handleSubmit}\n      submitLabel=\"Guardar Cambios\"\n    >\n      {({ formData, handleChange, errors }) => (\n        <ParticipanteForm \n          formData={formData} \n          handleChange={handleChange} \n          errors={errors}\n        />\n      )}\n    </EditFormModal>\n  );\n};\n\n// Create Modal Component\nconst ParticipanteCreateModal = ({ isOpen, onClose, onCrear }) => {\n  const handleSubmit = async (formData) => {\n    console.log('🔄 Creando participante:', formData);\n    \n    // Validate required fields\n    if (!formData.tipo_documento || !formData.numero_documento) {\n      throw new Error('Tipo y número de documento son requeridos');\n    }\n    if (!formData.nombres?.trim() || !formData.apellidos?.trim()) {\n      throw new Error('Nombres y apellidos son requeridos');\n    }\n    if (!formData.fecha_nacimiento || !formData.fecha_ingreso) {\n      throw new Error('Fechas de nacimiento e ingreso son requeridas');\n    }\n    if (!formData.id_sede) {\n      throw new Error('Debe seleccionar una sede');\n    }\n    \n    // Validate fecha_nacimiento format and value\n    const fechaNacimientoValidation = validateFechaNacimiento(formData.fecha_nacimiento);\n    if (!fechaNacimientoValidation.isValid) {\n      throw new Error(fechaNacimientoValidation.error);\n    }\n    \n    // Validate fecha_ingreso format and value\n    const fechaIngresoValidation = validateFechaIngreso(formData.fecha_ingreso);\n    if (!fechaIngresoValidation.isValid) {\n      throw new Error(fechaIngresoValidation.error);\n    }\n    \n    // Validate documento único\n    const documentoValidation = await validateParticipanteDocumentoUnico(formData.numero_documento);\n    if (!documentoValidation.isValid) {\n      throw new Error(documentoValidation.error);\n    }\n    \n    // Validate sede exists\n    const sedeValidation = await validateSedeExists(formData.id_sede);\n    if (!sedeValidation.isValid) {\n      throw new Error(sedeValidation.error);\n    }\n    \n    const result = await dbService.createParticipante(formData);\n    \n    if (result.error) {\n      throw new Error(result.error.message || 'Error al crear participante');\n    }\n    \n    console.log('✅ Participante creado exitosamente');\n    onCrear();\n  };\n\n  return (\n    <CreateFormModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Nuevo Participante\"\n      defaultValues={{\n        tipo_documento: 'CC',\n        numero_documento: '',\n        nombres: '',\n        apellidos: '',\n        fecha_nacimiento: '',\n        genero: 'MASCULINO',\n        fecha_ingreso: '',\n        estado: 'ACTIVO',\n        id_sede: '',\n      }}\n      onSubmit={handleSubmit}\n      submitLabel=\"Crear Participante\"\n    >\n      {({ formData, handleChange, errors }) => (\n        <ParticipanteForm \n          formData={formData} \n          handleChange={handleChange} \n          errors={errors}\n        />\n      )}\n    </CreateFormModal>\n  );\n};\n\n// Shared Form Component using reusable Form components\nconst ParticipanteForm = ({ formData, handleChange, errors }) => {\n  const [sedes, setSedes] = useState([]);\n  const [loadingSedes, setLoadingSedes] = useState(true);\n\n  useEffect(() => {\n    const loadSedes = async () => {\n      try {\n        setLoadingSedes(true);\n        const result = await dbService.getSedes();\n        if (result.data && Array.isArray(result.data)) {\n          setSedes(result.data);\n        }\n      } catch (err) {\n        console.error('Error loading sedes:', err);\n      } finally {\n        setLoadingSedes(false);\n      }\n    };\n    loadSedes();\n  }, []);\n\n  return (\n    <FormGroup columns={2} gap=\"md\">\n      <FormSelect\n        label=\"Tipo de Documento\"\n        name=\"tipo_documento\"\n        value={formData.tipo_documento}\n        onChange={(value) => handleChange('tipo_documento', value)}\n        options={[\n          { value: 'CC', label: 'Cédula de Ciudadanía' },\n          { value: 'TI', label: 'Tarjeta de Identidad' },\n          { value: 'CE', label: 'Cédula de Extranjería' },\n          { value: 'PASAPORTE', label: 'Pasaporte' }\n        ]}\n        error={errors?.tipo_documento}\n        required\n      />\n\n      <FormInput\n        label=\"Número de Documento\"\n        name=\"numero_documento\"\n        type=\"text\"\n        value={formData.numero_documento}\n        onChange={(value) => handleChange('numero_documento', value)}\n        error={errors?.numero_documento}\n        required\n        placeholder=\"Ingrese el número de documento\"\n      />\n\n      <FormInput\n        label=\"Nombres\"\n        name=\"nombres\"\n        type=\"text\"\n        value={formData.nombres}\n        onChange={(value) => handleChange('nombres', value)}\n        error={errors?.nombres}\n        required\n        placeholder=\"Ingrese los nombres\"\n      />\n\n      <FormInput\n        label=\"Apellidos\"\n        name=\"apellidos\"\n        type=\"text\"\n        value={formData.apellidos}\n        onChange={(value) => handleChange('apellidos', value)}\n        error={errors?.apellidos}\n        required\n        placeholder=\"Ingrese los apellidos\"\n      />\n\n      <FormInput\n        label=\"Fecha de Nacimiento\"\n        name=\"fecha_nacimiento\"\n        type=\"date\"\n        value={formData.fecha_nacimiento}\n        onChange={(value) => handleChange('fecha_nacimiento', value)}\n        error={errors?.fecha_nacimiento}\n        required\n      />\n\n      <FormSelect\n        label=\"Género\"\n        name=\"genero\"\n        value={formData.genero}\n        onChange={(value) => handleChange('genero', value)}\n        options={[\n          { value: 'MASCULINO', label: 'Masculino' },\n          { value: 'FEMENINO', label: 'Femenino' }\n        ]}\n        error={errors?.genero}\n        required\n      />\n\n      <FormInput\n        label=\"Fecha de Ingreso\"\n        name=\"fecha_ingreso\"\n        type=\"date\"\n        value={formData.fecha_ingreso}\n        onChange={(value) => handleChange('fecha_ingreso', value)}\n        error={errors?.fecha_ingreso}\n        required\n      />\n\n      <FormSelect\n        label=\"Estado\"\n        name=\"estado\"\n        value={formData.estado}\n        onChange={(value) => handleChange('estado', value)}\n        options={[\n          { value: 'ACTIVO', label: 'Activo' },\n          { value: 'INACTIVO', label: 'Inactivo' }\n        ]}\n        error={errors?.estado}\n        required\n      />\n\n      <FormSelect\n        label=\"Sede\"\n        name=\"id_sede\"\n        value={formData.id_sede}\n        onChange={(value) => handleChange('id_sede', value)}\n        options={loadingSedes ? [{ value: '', label: 'Cargando sedes...' }] : sedes.map(sede => ({\n          value: sede.id_sede || sede.id,\n          label: sede.direccion || sede.nombre\n        }))}\n        error={errors?.id_sede}\n        required\n        disabled={loadingSedes}\n      />\n    </FormGroup>\n  );\n};\n\nexport default Participantes;\n","/**\n * Validation Utilities\n * Centralized validation functions for the application\n */\n\nimport { dbService } from '../services';\n\n/**\n * Validate that a documento number is unique for participantes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} participanteId - ID of current participante (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteDocumentoUnico = async (numeroDocumento, participanteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => {\n        const pId = p.id || p.id_participante;\n        return p.numero_documento === numeroDocumento && pId !== participanteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro participante' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate that a documento number is unique for acudientes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} acudienteId - ID of current acudiente (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteDocumentoUnico = async (numeroDocumento, acudienteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => {\n        const aId = a.id || a.id_acudiente;\n        return a.numero_documento === numeroDocumento && aId !== acudienteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro acudiente' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate email format\n * @param {string} email - Email to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateEmail = (email) => {\n  if (!email || !email.trim()) {\n    return { isValid: false, error: 'El email es requerido' };\n  }\n\n  // Basic email regex pattern\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  if (!emailRegex.test(email)) {\n    return { \n      isValid: false, \n      error: 'El formato del email no es válido' \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate date format and ensure it's not in the future\n * @param {string} fecha - Date string to validate\n * @param {string} fieldName - Name of the field for error messages\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFecha = (fecha, fieldName = 'fecha') => {\n  if (!fecha) {\n    return { isValid: false, error: `La ${fieldName} es requerida` };\n  }\n\n  const date = new Date(fecha);\n  const today = new Date();\n  \n  // Reset time to compare only dates\n  today.setHours(23, 59, 59, 999);\n\n  // Check if date is valid\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no es válida` \n    };\n  }\n\n  // Check if date is not in the future\n  if (date > today) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no puede ser futura` \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate fecha_nacimiento specifically\n * @param {string} fechaNacimiento - Birth date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaNacimiento = (fechaNacimiento) => {\n  return validateFecha(fechaNacimiento, 'fecha de nacimiento');\n};\n\n/**\n * Validate fecha_ingreso specifically\n * @param {string} fechaIngreso - Entry date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaIngreso = (fechaIngreso) => {\n  return validateFecha(fechaIngreso, 'fecha de ingreso');\n};\n\n/**\n * Validate that a participante exists\n * @param {number} participanteId - ID of participante to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteExists = async (participanteId) => {\n  try {\n    if (!participanteId) {\n      return { isValid: false, error: 'Debe seleccionar un participante' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => \n        (p.id_participante || p.id) === parseInt(participanteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El participante seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante exists:', err);\n    return { isValid: false, error: 'Error al validar el participante' };\n  }\n};\n\n/**\n * Validate that a sede exists\n * @param {number} sedeId - ID of sede to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateSedeExists = async (sedeId) => {\n  try {\n    if (!sedeId) {\n      return { isValid: false, error: 'Debe seleccionar una sede' };\n    }\n\n    const result = await dbService.getSedes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(s => \n        (s.id_sede || s.id) === parseInt(sedeId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'La sede seleccionada no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating sede exists:', err);\n    return { isValid: false, error: 'Error al validar la sede' };\n  }\n};\n\n/**\n * Validate that an acudiente exists\n * @param {number} acudienteId - ID of acudiente to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteExists = async (acudienteId) => {\n  try {\n    if (!acudienteId) {\n      return { isValid: false, error: 'Debe seleccionar un acudiente' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => \n        (a.id_acudiente || a.id) === parseInt(acudienteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El acudiente seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente exists:', err);\n    return { isValid: false, error: 'Error al validar el acudiente' };\n  }\n};\n\n/**\n * Validate mensualidad relationships (participante and acudiente must exist)\n * @param {number} participanteId - ID of participante\n * @param {number} acudienteId - ID of acudiente\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateMensualidadRelations = async (participanteId, acudienteId) => {\n  // Validate participante\n  const participanteValidation = await validateParticipanteExists(participanteId);\n  if (!participanteValidation.isValid) {\n    return participanteValidation;\n  }\n\n  // Validate acudiente\n  const acudienteValidation = await validateAcudienteExists(acudienteId);\n  if (!acudienteValidation.isValid) {\n    return acudienteValidation;\n  }\n\n  return { isValid: true, error: null };\n};\n"],"names":["Participantes","React","participantes","setParticipantes","useState","loading","setLoading","error","setError","filters","filtros","setFilter","clearFilters","useFilters","sede","genero","estado","busqueda","viewModal","useModal","editModal","createModal","loadParticipantes","useCallback","async","console","log","result","dbService","getParticipantes","data","Array","isArray","Error","message","participantesData","length","err","useEffect","abrirModal","tipo","participante","openModal","filteredParticipantes","useMemo","filtered","filter","p","_p$sede","direccion","toLowerCase","includes","estadoUpper","toUpperCase","searchLower","numero_documento","toggleEstado","id","newEstado","updateParticipante","handleActionClick","action","handleExportPDF","printWindow","window","open","currentDate","Date","toLocaleDateString","htmlContent","concat","map","nombre","edad","telefono","join","document","write","close","_jsx","DashboardLayout","title","subtitle","loadingText","children","className","_jsxs","extraActions","onClick","FilterBar","type","name","label","options","value","placeholder","debounceMs","values","onChange","onClear","showClearButton","StatsGrid","stats","icon","color","columns","gap","DataTable","keyExtractor","row","id_participante","key","header","render","nombreCompleto","nombres","apellidos","tipoDoc","tipo_documento","numDoc","fecha_nacimiento","birthDate","today","age","getFullYear","monthDiff","getMonth","getDate","fecha_ingreso","_row$sede","StatusToggle","currentStatus","statuses","variant","ActionDropdown","actions","ParticipanteViewModal","isOpen","onClose","closeModal","modalData","onCrearAcudiente","ParticipanteEditModal","onActualizar","ParticipanteCreateModal","onCrear","_ref","_participante$sede","acudientes","setAcudientes","loadingAcudientes","setLoadingAcudientes","loadAcudientes","participanteId","getAcudientesByParticipante","estadoLabel","estadoClass","ViewDetailsModal","acudiente","index","parentesco","email","id_acudiente","_ref2","_participante$nombre","_participante$nombre2","EditFormModal","initialData","split","slice","id_sede","sede_id","onSubmit","_formData$nombres","_formData$apellidos","formData","trim","fechaNacimientoValidation","validateFechaNacimiento","isValid","fechaIngresoValidation","validateFechaIngreso","documentoValidation","validateParticipanteDocumentoUnico","sedeValidation","validateSedeExists","submitLabel","_ref3","handleChange","errors","ParticipanteForm","_ref4","CreateFormModal","defaultValues","_formData$nombres2","_formData$apellidos2","createParticipante","_ref5","_ref6","sedes","setSedes","loadingSedes","setLoadingSedes","getSedes","loadSedes","FormGroup","FormSelect","required","FormInput","disabled","numeroDocumento","arguments","undefined","some","pId","validateAcudienteDocumentoUnico","acudienteId","getAcudientes","a","aId","validateEmail","test","validateFecha","fecha","fieldName","date","setHours","isNaN","getTime","fechaNacimiento","fechaIngreso","validateParticipanteExists","parseInt","sedeId","s","validateMensualidadRelations","participanteValidation","acudienteValidation","validateAcudienteExists"],"sourceRoot":""}