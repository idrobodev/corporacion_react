{"version":3,"file":"static/js/341.9ff73fff.chunk.js","mappings":"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","sources":["shared/utils/exportUtils.js","pages/Dashboard/Participantes.jsx","shared/utils/validationUtils.js"],"sourcesContent":["/**\n * Export Utilities\n * Functions for exporting data to different formats (CSV, PDF)\n */\n\n/**\n * Format participant name consistently\n * @param {Object} participante - Participant object\n * @returns {string} Formatted full name\n */\nexport const formatParticipantName = (participante) => {\n  if (!participante) return 'N/A';\n  \n  if (participante.nombres && participante.apellidos) {\n    return `${participante.nombres} ${participante.apellidos}`.trim();\n  }\n  \n  return participante.nombre || 'N/A';\n};\n\n/**\n * Format sede information\n * @param {Object|string} sede - Sede object or string\n * @returns {string} Formatted sede name\n */\nexport const formatSede = (sede) => {\n  if (!sede) return 'N/A';\n  \n  if (typeof sede === 'object' && sede !== null) {\n    return sede.direccion || sede.nombre || 'N/A';\n  }\n  \n  return String(sede);\n};\n\n/**\n * Normalize status display\n * @param {string} estado - Status value\n * @returns {string} Normalized status\n */\nexport const normalizeStatus = (estado) => {\n  if (!estado) return 'N/A';\n  \n  const upper = String(estado).toUpperCase();\n  if (upper === 'ACTIVO') return 'Activo';\n  if (upper === 'INACTIVO') return 'Inactivo';\n  if (upper === 'PAGADA') return 'Pagada';\n  if (upper === 'PENDIENTE') return 'Pendiente';\n  if (upper === 'VENCIDA') return 'Vencida';\n  \n  return estado;\n};\n\n/**\n * Format gender display\n * @param {string} genero - Gender value\n * @returns {string} Formatted gender\n */\nexport const formatGender = (genero) => {\n  if (!genero) return 'N/A';\n  \n  if (genero === 'MASCULINO') return 'Masculino';\n  if (genero === 'FEMENINO') return 'Femenino';\n  \n  return genero;\n};\n\n/**\n * Format document type and number\n * @param {string} tipo - Document type\n * @param {string} numero - Document number\n * @returns {string} Formatted document\n */\nexport const formatDocument = (tipo, numero) => {\n  if (!numero) return 'N/A';\n  const tipoDoc = tipo || 'CC';\n  return `${tipoDoc}: ${numero}`;\n};\n\n/**\n * Convert array of objects to CSV format\n * @param {Array} data - Array of objects to convert\n * @param {Array} headers - Array of header objects {key, label}\n * @returns {string} CSV formatted string\n */\nexport const arrayToCSV = (data, headers) => {\n  if (!data || !Array.isArray(data) || data.length === 0) {\n    return '';\n  }\n\n  // Use semicolon as delimiter for Spanish/Latin American Excel compatibility\n  const delimiter = ';';\n\n  // Create header row\n  const headerRow = headers.map(header => `\"${header.label}\"`).join(delimiter);\n\n  // Create data rows\n  const dataRows = data.map(row => {\n    return headers.map(header => {\n      const value = getNestedValue(row, header.key);\n      // Escape quotes and wrap in quotes if contains delimiter, quote, or newline\n      const stringValue = String(value || '');\n      if (stringValue.includes(delimiter) || stringValue.includes('\"') || stringValue.includes('\\n')) {\n        return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n      }\n      return stringValue;\n    }).join(delimiter);\n  });\n\n  return [headerRow, ...dataRows].join('\\n');\n};\n\n/**\n * Create enhanced CSV with metadata, statistics, and better formatting\n * @param {Object} options - Configuration options\n * @param {string} options.title - Title of the report\n * @param {Array} options.data - Array of data objects\n * @param {Array} options.headers - Array of header objects {key, label}\n * @param {Object} options.metadata - Additional metadata {organization, generatedBy, etc}\n * @param {Object} options.statistics - Statistics to include\n * @param {Object} options.filters - Applied filters\n * @returns {string} Enhanced CSV formatted string\n */\nexport const createEnhancedCSV = (options) => {\n  const {\n    title = 'Reporte',\n    data = [],\n    headers = [],\n    metadata = {},\n    statistics = {},\n    filters = {}\n  } = options;\n\n  const sections = [];\n  const currentDate = new Date().toLocaleDateString('es-CO', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n\n  // ========== SECCIÓN 1: ENCABEZADO Y METADATA ==========\n  sections.push(`\"${title.toUpperCase()}\"`);\n  sections.push(`\"Corporación Todo por un Alma\"`);\n  sections.push(`\"Fecha de generación:\",\"${currentDate}\"`);\n  \n  if (metadata.generatedBy) {\n    sections.push(`\"Generado por:\",\"${metadata.generatedBy}\"`);\n  }\n  \n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 2: FILTROS APLICADOS ==========\n  const activeFilters = Object.entries(filters).filter(([key, value]) => {\n    return value && value !== 'all' && value !== 'Todos' && value !== 'Todas' && value !== '';\n  });\n\n  if (activeFilters.length > 0) {\n    sections.push(`\"FILTROS APLICADOS\"`);\n    activeFilters.forEach(([key, value]) => {\n      const filterLabel = key.charAt(0).toUpperCase() + key.slice(1).replace(/_/g, ' ');\n      sections.push(`\"${filterLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 3: ESTADÍSTICAS ==========\n  const statsEntries = Object.entries(statistics).filter(([_, value]) => value !== undefined);\n  \n  if (statsEntries.length > 0) {\n    sections.push(`\"ESTADÍSTICAS\"`);\n    statsEntries.forEach(([key, value]) => {\n      const statLabel = key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n      sections.push(`\"${statLabel}:\",\"${value}\"`);\n    });\n    sections.push(''); // Línea en blanco\n  }\n\n  // ========== SECCIÓN 4: DATOS ==========\n  sections.push(`\"DATOS DEL REPORTE\"`);\n  sections.push(''); // Línea en blanco\n\n  // Use semicolon as delimiter for Spanish/Latin American Excel compatibility\n  const delimiter = ';';\n\n  // Crear encabezados de columnas\n  const headerRow = headers.map(h => {\n    const label = h.label;\n    // Escapar comillas dobles y envolver en comillas si contiene delimitador, comillas o saltos de línea\n    if (label.includes(delimiter) || label.includes('\"') || label.includes('\\n')) {\n      return `\"${label.replace(/\"/g, '\"\"')}\"`;\n    }\n    return label;\n  }).join(delimiter);\n  sections.push(headerRow);\n\n  // Crear filas de datos\n  if (data.length === 0) {\n    sections.push(`\"No hay datos disponibles\"`);\n  } else {\n    data.forEach(row => {\n      const dataRow = headers.map(header => {\n        const value = getNestedValue(row, header.key);\n        const stringValue = String(value || '');\n        // Escapar comillas dobles y envolver en comillas si contiene delimitador, comillas o saltos de línea\n        if (stringValue.includes(delimiter) || stringValue.includes('\"') || stringValue.includes('\\n')) {\n          return `\"${stringValue.replace(/\"/g, '\"\"')}\"`;\n        }\n        return stringValue;\n      }).join(delimiter);\n      sections.push(dataRow);\n    });\n  }\n\n  sections.push(''); // Línea en blanco\n\n  // ========== SECCIÓN 5: RESUMEN FINAL ==========\n  sections.push(`\"RESUMEN\"`);\n  sections.push(`\"Total de registros:\",\"${data.length}\"`);\n  sections.push(`\"Reporte generado el:\",\"${currentDate}\"`);\n  \n  return sections.join('\\n');\n};\n\n/**\n * Format statistics for CSV export\n * @param {Array} data - Data array to analyze\n * @param {string} statusField - Field name containing status\n * @returns {Object} Statistics object\n */\nexport const generateStatistics = (data, statusField = 'estado') => {\n  const total = data.length;\n  const stats = {\n    'Total de Registros': total\n  };\n\n  // Count by status\n  const statusCounts = {};\n  data.forEach(item => {\n    const status = normalizeStatus(item[statusField]);\n    statusCounts[status] = (statusCounts[status] || 0) + 1;\n  });\n\n  Object.entries(statusCounts).forEach(([status, count]) => {\n    stats[status] = `${count} (${((count / total) * 100).toFixed(1)}%)`;\n  });\n\n  return stats;\n};\n\n/**\n * Download data as CSV file with UTF-8 BOM for proper Excel encoding\n * @param {string} csvContent - CSV content as string\n * @param {string} filename - Name of the file to download\n */\nexport const downloadCSV = (csvContent, filename) => {\n  // Add UTF-8 BOM for proper Excel encoding of special characters (ñ, á, é, í, ó, ú)\n  const BOM = '\\uFEFF';\n\n  // Ensure filename has .csv extension\n  const csvFilename = filename.endsWith('.csv') ? filename : `${filename}.csv`;\n\n  // Ensure proper line endings for Excel (CRLF)\n  const csvContentWithProperLineEndings = csvContent.replace(/\\n/g, '\\r\\n');\n\n  const blob = new Blob([BOM + csvContentWithProperLineEndings], {\n    type: 'text/csv;charset=utf-8;'\n  });\n\n  const link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', csvFilename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n};\n\n/**\n * Get nested value from object using dot notation\n * @param {Object} obj - Object to get value from\n * @param {string} path - Path to value (e.g., 'sede.direccion')\n * @returns {any} Value at path or undefined\n */\nexport const getNestedValue = (obj, path) => {\n  return path.split('.').reduce((current, key) => current?.[key], obj);\n};\n\n/**\n * Format date for CSV export\n * @param {string|Date} date - Date to format\n * @returns {string} Formatted date string\n */\nexport const formatDateForCSV = (date) => {\n  if (!date) return '';\n  try {\n    return new Date(date).toLocaleDateString('es-ES');\n  } catch {\n    return String(date);\n  }\n};\n\n/**\n * Format currency for CSV export\n * @param {number} amount - Amount to format\n * @returns {string} Formatted currency string\n */\nexport const formatCurrencyForCSV = (amount) => {\n  if (amount === null || amount === undefined) return '';\n  try {\n    return new Intl.NumberFormat('es-CO', {\n      style: 'currency',\n      currency: 'COP',\n      minimumFractionDigits: 0\n    }).format(amount);\n  } catch {\n    return String(amount);\n  }\n};\n\n/**\n * Calculate age from birth date\n * @param {string|Date} birthDate - Birth date\n * @returns {string} Age string or empty string\n */\nexport const calculateAge = (birthDate) => {\n  if (!birthDate) return '';\n  try {\n    const birth = new Date(birthDate);\n    const today = new Date();\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\n      age--;\n    }\n    return age > 0 ? `${age} años` : '';\n  } catch {\n    return '';\n  }\n};","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport DashboardLayout from \"components/layout/DashboardLayout\";\nimport { dbService } from \"shared/services\";\nimport { FilterBar, StatsGrid, DataTable, ActionDropdown, StatusToggle, FormInput, FormSelect, FormGroup, ExportDropdown } from \"components/UI\";\nimport { ViewDetailsModal, EditFormModal, CreateFormModal } from \"components/common\";\nimport { useFilters, useModal } from \"shared/hooks\";\nimport {\n  validateParticipanteDocumentoUnico,\n  validateFechaNacimiento,\n  validateFechaIngreso,\n  validateSedeExists\n} from \"shared/utils/validationUtils\";\nimport {\n  arrayToCSV,\n  downloadCSV,\n  calculateAge,\n  formatDateForCSV,\n  formatParticipantName,\n  formatSede,\n  normalizeStatus,\n  formatGender\n} from \"shared/utils/exportUtils\";\n// import jsPDF from 'jspdf'; // Temporarily disabled - not available in Docker dev\n\nconst Participantes = React.memo(() => {\n  const [participantes, setParticipantes] = useState([]); // Asegurar que siempre sea array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // Use the useFilters hook for filter state management\n  const { filters: filtros, setFilter, clearFilters } = useFilters({\n    sede: \"Todas\",\n    genero: \"Todos\",\n    estado: \"Todos\",\n    busqueda: \"\"\n  });\n\n  // Use the useModal hook for modal state management\n  const viewModal = useModal();\n  const editModal = useModal();\n  const createModal = useModal();\n\n  // Función para cargar participantes (usando useCallback para evitar re-renders)\n  const loadParticipantes = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log('🔄 Cargando participantes...');\n      \n      const result = await dbService.getParticipantes();\n      console.log('📊 Resultado participantes:', result);\n      console.log('📦 result.data:', result.data);\n      console.log('📦 result.data type:', typeof result.data);\n      console.log('📦 result.data isArray:', Array.isArray(result.data));\n\n      if (result.error) {\n        throw new Error(result.error.message || 'Error al cargar participantes');\n      }\n\n      // The API returns {data: {data: [...], error: null}, error: null}, so we need result.data.data\n      const participantesData = Array.isArray(result.data?.data) ? result.data.data : [];\n      console.log('🔄 participantesData:', participantesData);\n      console.log('🔄 participantesData.length:', participantesData.length);\n      setParticipantes(participantesData);\n      console.log('✅ Participantes cargados:', participantesData.length);\n    } catch (err) {\n      console.error('❌ Error cargando participantes:', err);\n      setError(err.message || 'Error desconocido al cargar participantes');\n      setParticipantes([]); // Asegurar que no quede undefined\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadParticipantes();\n  }, [loadParticipantes]);\n\n  // Funciones para manejar modales (memoized)\n  const abrirModal = useCallback((tipo, participante) => {\n    if (tipo === 'ver') {\n      viewModal.openModal(null, participante);\n    } else if (tipo === 'editar') {\n      editModal.openModal(null, participante);\n    } else if (tipo === 'crear') {\n      createModal.openModal();\n    }\n  }, [viewModal, editModal, createModal]);\n\n  const filteredParticipantes = useMemo(() => {\n    // Asegurar que participantes siempre sea un array\n    const safeParticipantes = Array.isArray(participantes) ? participantes : [];\n    let filtered = safeParticipantes;\n\n    if (filtros.sede !== \"Todas\") {\n      filtered = filtered.filter(p => {\n        const sedeNombre = p.sede?.direccion || p.sede || '';\n        return sedeNombre.toLowerCase().includes(filtros.sede.toLowerCase());\n      });\n    }\n    if (filtros.genero !== \"Todos\") {\n      filtered = filtered.filter(p => p.genero === filtros.genero);\n    }\n    if (filtros.estado !== \"Todos\") {\n      // Support both ACTIVO/INACTIVO and Activo/Inactivo\n      const estadoUpper = filtros.estado.toUpperCase();\n      filtered = filtered.filter(p => \n        p.estado === filtros.estado || \n        p.estado === estadoUpper ||\n        (filtros.estado === 'Activo' && p.estado === 'ACTIVO') ||\n        (filtros.estado === 'Inactivo' && p.estado === 'INACTIVO')\n      );\n    }\n    if (filtros.busqueda) {\n      const searchLower = filtros.busqueda.toLowerCase();\n      filtered = filtered.filter(p => {\n        const documento = (p.numero_documento || '').toLowerCase();\n\n        return documento.includes(searchLower);\n      });\n    }\n    return filtered;\n  }, [participantes, filtros]);\n\n  const toggleEstado = useCallback(async (id, newEstado) => {\n    try {\n      await dbService.updateParticipante(id, { estado: newEstado });\n      // Refresh data\n      const { data } = await dbService.getParticipantes();\n      setParticipantes(data || []);\n    } catch (err) {\n      console.error('Error updating status:', err);\n    }\n  }, []);\n\n  const handleActionClick = useCallback((action, participante) => {\n    switch (action) {\n      case 'ver':\n        abrirModal('ver', participante);\n        break;\n      case 'editar':\n        abrirModal('editar', participante);\n        break;\n      default:\n        // No action\n        break;\n    }\n  }, [abrirModal]);\n\n  const handleExportPDF = useCallback(() => {\n    // Create a new window for printing\n    const printWindow = window.open('', '_blank');\n    const currentDate = new Date().toLocaleDateString('es-ES');\n\n    // Generate HTML content for PDF\n    const htmlContent = `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>Lista de Participantes - ${currentDate}</title>\n          <style>\n            body {\n              font-family: Arial, sans-serif;\n              margin: 20px;\n              color: #333;\n            }\n            .header {\n              text-align: center;\n              margin-bottom: 30px;\n              border-bottom: 2px solid #333;\n              padding-bottom: 20px;\n            }\n            .header h1 {\n              color: #2563eb;\n              margin: 0;\n              font-size: 24px;\n            }\n            .filters {\n              margin-bottom: 20px;\n              background: #f8f9fa;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .filters h3 {\n              margin: 0 0 10px 0;\n              color: #495057;\n            }\n            .filters p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin-top: 20px;\n            }\n            th, td {\n              border: 1px solid #ddd;\n              padding: 8px 12px;\n              text-align: left;\n            }\n            th {\n              background-color: #f8f9fa;\n              font-weight: bold;\n              color: #495057;\n            }\n            tr:nth-child(even) {\n              background-color: #f9f9f9;\n            }\n            .stats {\n              margin-top: 30px;\n              background: #e3f2fd;\n              padding: 15px;\n              border-radius: 5px;\n            }\n            .stats h3 {\n              margin: 0 0 10px 0;\n              color: #1976d2;\n            }\n            .stats p {\n              margin: 5px 0;\n              font-size: 14px;\n            }\n            @media print {\n              body { margin: 0; }\n              .no-print { display: none; }\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"header\">\n            <h1>Lista de Participantes</h1>\n            <p>Corporación Todo por un Alma</p>\n            <p>Fecha de generación: ${currentDate}</p>\n          </div>\n\n          <div class=\"filters\">\n            <h3>Filtros aplicados:</h3>\n            <p><strong>Sede:</strong> ${filtros.sede === 'Todas' ? 'Todas las sedes' : filtros.sede}</p>\n            <p><strong>Género:</strong> ${filtros.genero === 'Todos' ? 'Todos los géneros' : filtros.genero}</p>\n            <p><strong>Estado:</strong> ${filtros.estado === 'Todos' ? 'Todos los estados' : filtros.estado}</p>\n            ${filtros.busqueda ? `<p><strong>Búsqueda:</strong> \"${filtros.busqueda}\"</p>` : ''}\n          </div>\n\n          <table>\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Edad</th>\n                <th>Género</th>\n                <th>Teléfono</th>\n                <th>Sede</th>\n                <th>Estado</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${filteredParticipantes.map(participante => `\n                <tr>\n                  <td>${formatParticipantName(participante)}</td>\n                  <td>${calculateAge(participante.fecha_nacimiento) || 'N/A'}</td>\n                  <td>${formatGender(participante.genero)}</td>\n                  <td>${participante.telefono || 'N/A'}</td>\n                  <td>${formatSede(participante.sede)}</td>\n                  <td>${normalizeStatus(participante.estado)}</td>\n                </tr>\n              `).join('')}\n            </tbody>\n          </table>\n\n          <div class=\"stats\">\n            <h3>Estadísticas:</h3>\n            <p><strong>Total de participantes:</strong> ${filteredParticipantes.length}</p>\n            <p><strong>Activos:</strong> ${filteredParticipantes.filter(p => {\n              const upper = String(p.estado || '').toUpperCase();\n              return upper === 'ACTIVO';\n            }).length}</p>\n            <p><strong>Inactivos:</strong> ${filteredParticipantes.filter(p => {\n              const upper = String(p.estado || '').toUpperCase();\n              return upper === 'INACTIVO';\n            }).length}</p>\n          </div>\n\n          <script>\n            window.onload = function() {\n              window.print();\n              setTimeout(function() {\n                window.close();\n              }, 1000);\n            }\n          </script>\n        </body>\n      </html>\n    `;\n\n    printWindow.document.write(htmlContent);\n    printWindow.document.close();\n  }, [filtros, filteredParticipantes]);\n\n  const handleExportCSV = useCallback(() => {\n    const headers = [\n      { key: 'tipo_documento', label: 'Tipo Documento' },\n      { key: 'numero_documento', label: 'Número Documento' },\n      { key: 'nombres', label: 'Nombres' },\n      { key: 'apellidos', label: 'Apellidos' },\n      { key: 'nombre_completo', label: 'Nombre Completo' },\n      { key: 'fecha_nacimiento', label: 'Fecha Nacimiento' },\n      { key: 'edad', label: 'Edad' },\n      { key: 'genero', label: 'Género' },\n      { key: 'telefono', label: 'Teléfono' },\n      { key: 'sede', label: 'Sede' },\n      { key: 'fecha_ingreso', label: 'Fecha Ingreso' },\n      { key: 'estado', label: 'Estado' }\n    ];\n\n    const csvData = filteredParticipantes.map(participante => ({\n      tipo_documento: participante.tipo_documento || 'N/A',\n      numero_documento: participante.numero_documento || 'N/A',\n      nombres: participante.nombres || 'N/A',\n      apellidos: participante.apellidos || 'N/A',\n      nombre_completo: formatParticipantName(participante),\n      fecha_nacimiento: formatDateForCSV(participante.fecha_nacimiento),\n      edad: calculateAge(participante.fecha_nacimiento) || 'N/A',\n      genero: formatGender(participante.genero),\n      telefono: participante.telefono || 'N/A',\n      sede: formatSede(participante.sede),\n      fecha_ingreso: formatDateForCSV(participante.fecha_ingreso),\n      estado: normalizeStatus(participante.estado)\n    }));\n\n    const csvContent = arrayToCSV(csvData, headers);\n    const filename = `participantes_${new Date().toISOString().split('T')[0]}.csv`;\n    downloadCSV(csvContent, filename);\n  }, []);\n\n  if (loading) {\n    return (\n      <DashboardLayout title=\"Participantes\" subtitle=\"Gestión de participantes\" loading={true} loadingText=\"Cargando participantes...\" />\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardLayout title=\"Participantes\" subtitle=\"Error al cargar datos\" loading={false}>\n        <div className=\"flex items-center justify-center h-screen\">\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\n            <p className=\"text-red-600\">Error loading participants: {error}</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout title=\"Gestión de Participantes\" subtitle=\"Administra los participantes de la fundación\" extraActions={\n      <div className=\"flex space-x-3\">\n        <ExportDropdown\n          onExportPDF={handleExportPDF}\n          onExportCSV={handleExportCSV}\n        />\n        <button\n          onClick={() => abrirModal('crear', null)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n        >\n          <i className=\"fas fa-plus mr-2\"></i>\n          Nuevo Participante\n        </button>\n      </div>\n    }>\n      <section className=\"px-6 py-6\">\n        <FilterBar\n          filters={[\n            {\n              type: 'select',\n              name: 'sede',\n              label: 'Sede',\n              options: [\n                { value: 'Todas', label: 'Todas las Sedes' },\n                { value: 'Bello Principal', label: 'Bello Principal' },\n                { value: 'Bello Campestre', label: 'Bello Campestre' },\n                { value: 'Apartadó', label: 'Apartadó' }\n              ]\n            },\n            {\n              type: 'select',\n              name: 'genero',\n              label: 'Género',\n              options: [\n                { value: 'Todos', label: 'Todos los Géneros' },\n                { value: 'MASCULINO', label: 'Masculino' },\n                { value: 'FEMENINO', label: 'Femenino' }\n              ]\n            },\n            {\n              type: 'select',\n              name: 'estado',\n              label: 'Estado',\n              options: [\n                { value: 'Todos', label: 'Todos los Estados' },\n                { value: 'Activo', label: 'Activo' },\n                { value: 'Inactivo', label: 'Inactivo' }\n              ]\n            },\n            {\n              type: 'search',\n              name: 'busqueda',\n              label: 'Búsqueda por Documento',\n              placeholder: 'Número de documento...',\n              debounceMs: 300\n            }\n          ]}\n          values={filtros}\n          onChange={setFilter}\n          onClear={clearFilters}\n          showClearButton={true}\n        />\n\n        {/* Estadísticas Rápidas */}\n        <div className=\"mt-6\">\n          <StatsGrid\n            stats={[\n              {\n                title: 'Total Participantes',\n                value: filteredParticipantes.length,\n                icon: 'fas fa-users',\n                color: 'blue'\n              },\n              {\n                title: 'Activos',\n                value: filteredParticipantes.filter(p => p.estado === \"ACTIVO\" || p.estado === \"Activo\").length,\n                icon: 'fas fa-user-check',\n                color: 'green'\n              },\n              {\n                title: 'Inactivos',\n                value: filteredParticipantes.filter(p => p.estado === \"INACTIVO\" || p.estado === \"Inactivo\").length,\n                icon: 'fas fa-user-times',\n                color: 'red'\n              }\n            ]}\n            columns={3}\n            gap=\"md\"\n          />\n        </div>\n\n        {/* Tabla de Participantes */}\n        <div className=\"mt-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"p-6 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-800\">Lista de Participantes</h3>\n          </div>\n          \n          <DataTable\n            data={filteredParticipantes}\n            keyExtractor={(row) => row.id || row.id_participante}\n            columns={[\n              {\n                key: 'participante',\n                header: 'Participante',\n                render: (row) => {\n                  const nombreCompleto = row.nombres && row.apellidos \n                    ? `${row.nombres} ${row.apellidos}` \n                    : row.nombre || 'N/A';\n                  const tipoDoc = row.tipo_documento || 'N/A';\n                  const numDoc = row.numero_documento || 'N/A';\n                  \n                  return (\n                    <div className=\"flex items-center\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                        <i className=\"fas fa-user text-blue-600\"></i>\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900\">\n                          {nombreCompleto}\n                        </div>\n                        <div className=\"text-sm text-gray-500\">\n                          {tipoDoc} {numDoc}\n                        </div>\n                      </div>\n                    </div>\n                  );\n                }\n              },\n              {\n                key: 'edad',\n                header: 'Edad',\n                render: (row) => {\n                  if (row.fecha_nacimiento) {\n                    const birthDate = new Date(row.fecha_nacimiento);\n                    const today = new Date();\n                    let age = today.getFullYear() - birthDate.getFullYear();\n                    const monthDiff = today.getMonth() - birthDate.getMonth();\n                    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n                      age--;\n                    }\n                    return `${age} años`;\n                  }\n                  return row.edad ? `${row.edad} años` : 'N/A';\n                }\n              },\n              {\n                key: 'genero',\n                header: 'Género',\n                render: (row) => (\n                  row.genero === 'MASCULINO' ? 'Masculino' : row.genero === 'FEMENINO' ? 'Femenino' : 'N/A'\n                )\n              },\n              {\n                key: 'fecha_ingreso',\n                header: 'Fecha Ingreso',\n                render: (row) => {\n                  if (row.fecha_ingreso) {\n                    return new Date(row.fecha_ingreso).toLocaleDateString('es-ES');\n                  }\n                  return 'N/A';\n                }\n              },\n              {\n                key: 'sede',\n                header: 'Sede',\n                render: (row) => row.sede?.direccion || row.sede || 'N/A'\n              },\n              {\n                key: 'estado',\n                header: 'Estado',\n                render: (row) => (\n                  <StatusToggle\n                    currentStatus={row.estado}\n                    statuses={[\n                      { value: 'ACTIVO', label: 'Activo', variant: 'success' },\n                      { value: 'Activo', label: 'Activo', variant: 'success' },\n                      { value: 'INACTIVO', label: 'Inactivo', variant: 'danger' },\n                      { value: 'Inactivo', label: 'Inactivo', variant: 'danger' }\n                    ]}\n                    onChange={(newEstado) => toggleEstado(row.id || row.id_participante, newEstado)}\n                  />\n                )\n              },\n              {\n                key: 'acciones',\n                header: 'Acciones',\n                render: (row) => (\n                  <ActionDropdown\n                    actions={[\n                      {\n                        label: 'Ver detalles',\n                        icon: 'fas fa-eye',\n                        onClick: () => handleActionClick('ver', row)\n                      },\n                      {\n                        label: 'Editar',\n                        icon: 'fas fa-edit',\n                        onClick: () => handleActionClick('editar', row)\n                      }\n                    ]}\n                  />\n                )\n              }\n            ]}\n            loading={loading}\n          />\n        </div>\n        </div>\n      </section>\n\n      {/* Modales */}\n      <ParticipanteViewModal\n        isOpen={viewModal.isOpen}\n        onClose={viewModal.closeModal}\n        participante={viewModal.modalData}\n        onCrearAcudiente={() => {\n          // TODO: Open acudiente creation modal with participante pre-selected\n          console.log('Crear acudiente para participante:', viewModal.modalData);\n        }}\n      />\n\n      <ParticipanteEditModal\n        isOpen={editModal.isOpen}\n        onClose={editModal.closeModal}\n        participante={editModal.modalData}\n        onActualizar={loadParticipantes}\n      />\n\n      <ParticipanteCreateModal\n        isOpen={createModal.isOpen}\n        onClose={createModal.closeModal}\n        onCrear={loadParticipantes}\n      />\n    </DashboardLayout>\n  );\n});\n\n// View Modal Component with Acudientes\nconst ParticipanteViewModal = ({ isOpen, onClose, participante, onCrearAcudiente }) => {\n  const [acudientes, setAcudientes] = useState([]);\n  const [loadingAcudientes, setLoadingAcudientes] = useState(false);\n\n  const loadAcudientes = useCallback(async () => {\n    if (!participante?.id && !participante?.id_participante) return;\n\n    try {\n      setLoadingAcudientes(true);\n      const participanteId = participante.id || participante.id_participante;\n      const result = await dbService.getAcudientesByParticipante(participanteId);\n\n      if (result.data && Array.isArray(result.data)) {\n        setAcudientes(result.data);\n      } else {\n        setAcudientes([]);\n      }\n    } catch (err) {\n      console.error('Error loading acudientes:', err);\n      setAcudientes([]);\n    } finally {\n      setLoadingAcudientes(false);\n    }\n  }, [participante]);\n\n  useEffect(() => {\n    if (isOpen && participante) {\n      loadAcudientes();\n    }\n  }, [isOpen, participante, loadAcudientes]);\n\n  if (!participante) return null;\n\n  const nombreCompleto = participante.nombres && participante.apellidos \n    ? `${participante.nombres} ${participante.apellidos}` \n    : participante.nombre || 'N/A';\n\n  const edad = (() => {\n    if (participante.fecha_nacimiento) {\n      const birthDate = new Date(participante.fecha_nacimiento);\n      const today = new Date();\n      let age = today.getFullYear() - birthDate.getFullYear();\n      const monthDiff = today.getMonth() - birthDate.getMonth();\n      if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n      }\n      return age;\n    }\n    return participante.edad || 'N/A';\n  })();\n\n  const estadoLabel = participante.estado === 'ACTIVO' || participante.estado === 'Activo' ? 'Activo' : 'Inactivo';\n  const estadoClass = participante.estado === 'ACTIVO' || participante.estado === 'Activo' \n    ? 'bg-green-100 text-green-800' \n    : 'bg-red-100 text-red-800';\n\n  return (\n    <ViewDetailsModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Detalles del Participante\"\n      data={[\n        { label: 'Nombre Completo', value: nombreCompleto },\n        { label: 'Tipo de Documento', value: participante.tipo_documento || 'N/A' },\n        { label: 'Número de Documento', value: participante.numero_documento || 'N/A' },\n        { label: 'Edad', value: typeof edad === 'number' ? `${edad} años` : edad },\n        { label: 'Fecha de Nacimiento', value: participante.fecha_nacimiento \n          ? new Date(participante.fecha_nacimiento).toLocaleDateString('es-ES') \n          : 'N/A' \n        },\n        { label: 'Género', value: participante.genero === 'MASCULINO' ? 'Masculino' : participante.genero === 'FEMENINO' ? 'Femenino' : 'N/A' },\n        { label: 'Fecha de Ingreso', value: participante.fecha_ingreso\n          ? new Date(participante.fecha_ingreso).toLocaleDateString('es-ES')\n          : 'N/A'\n        },\n        { label: 'Sede', value: participante.sede?.direccion || participante.sede || 'N/A' },\n        { label: 'Teléfono', value: participante.telefono || 'N/A' },\n        { \n          label: 'Estado', \n          value: (\n            <span className={`inline-flex px-3 py-1 text-sm font-semibold rounded-full ${estadoClass}`}>\n              {estadoLabel}\n            </span>\n          )\n        },\n        {\n          label: 'Acudientes',\n          value: (\n            <div className=\"mt-2\">\n              {loadingAcudientes ? (\n                <p className=\"text-sm text-gray-500\">Cargando acudientes...</p>\n              ) : acudientes.length > 0 ? (\n                <div className=\"space-y-2\">\n                  {acudientes.map((acudiente, index) => (\n                    <div key={acudiente.id_acudiente || index} className=\"bg-gray-50 p-3 rounded-lg border border-gray-200\">\n                      <div className=\"flex items-start justify-between\">\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-900\">\n                            {acudiente.nombres} {acudiente.apellidos}\n                          </p>\n                          <p className=\"text-xs text-gray-500\">\n                            {acudiente.parentesco} • {acudiente.tipo_documento} {acudiente.numero_documento}\n                          </p>\n                          <p className=\"text-xs text-gray-500 mt-1\">\n                            <i className=\"fas fa-phone mr-1\"></i>{acudiente.telefono}\n                            {acudiente.email && (\n                              <span className=\"ml-2\">\n                                <i className=\"fas fa-envelope mr-1\"></i>{acudiente.email}\n                              </span>\n                            )}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <button\n                    onClick={onCrearAcudiente}\n                    className=\"mt-2 text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    <i className=\"fas fa-plus mr-1\"></i>\n                    Agregar otro acudiente\n                  </button>\n                </div>\n              ) : (\n                <div className=\"text-center py-4\">\n                  <p className=\"text-sm text-gray-500 mb-2\">No hay acudientes registrados</p>\n                  <button\n                    onClick={onCrearAcudiente}\n                    className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\n                  >\n                    <i className=\"fas fa-plus mr-1\"></i>\n                    Agregar acudiente\n                  </button>\n                </div>\n              )}\n            </div>\n          )\n        }\n      ]}\n    />\n  );\n};\n\n// Edit Modal Component\nconst ParticipanteEditModal = ({ isOpen, onClose, participante, onActualizar }) => {\n  if (!participante) return null;\n\n  const handleSubmit = async (formData) => {\n    console.log('🔄 Actualizando participante:', formData);\n    \n    // Validate required fields\n    if (!formData.tipo_documento || !formData.numero_documento) {\n      throw new Error('Tipo y número de documento son requeridos');\n    }\n    if (!formData.nombres?.trim() || !formData.apellidos?.trim()) {\n      throw new Error('Nombres y apellidos son requeridos');\n    }\n    if (!formData.fecha_nacimiento || !formData.fecha_ingreso) {\n      throw new Error('Fechas de nacimiento e ingreso son requeridas');\n    }\n    if (!formData.id_sede) {\n      throw new Error('Debe seleccionar una sede');\n    }\n    \n    // Validate fecha_nacimiento format and value\n    const fechaNacimientoValidation = validateFechaNacimiento(formData.fecha_nacimiento);\n    if (!fechaNacimientoValidation.isValid) {\n      throw new Error(fechaNacimientoValidation.error);\n    }\n    \n    // Validate fecha_ingreso format and value\n    const fechaIngresoValidation = validateFechaIngreso(formData.fecha_ingreso);\n    if (!fechaIngresoValidation.isValid) {\n      throw new Error(fechaIngresoValidation.error);\n    }\n    \n    // Validate documento único\n    const participanteId = participante.id || participante.id_participante;\n    const documentoValidation = await validateParticipanteDocumentoUnico(formData.numero_documento, participanteId);\n    if (!documentoValidation.isValid) {\n      throw new Error(documentoValidation.error);\n    }\n    \n    // Validate sede exists\n    const sedeValidation = await validateSedeExists(formData.id_sede);\n    if (!sedeValidation.isValid) {\n      throw new Error(sedeValidation.error);\n    }\n    \n    const result = await dbService.updateParticipante(participanteId, formData);\n    \n    if (result.error) {\n      throw new Error(result.error.message || 'Error al actualizar participante');\n    }\n    \n    console.log('✅ Participante actualizado exitosamente');\n    onActualizar();\n  };\n\n  return (\n    <EditFormModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Editar Participante\"\n      initialData={{\n        tipo_documento: participante.tipo_documento || 'CC',\n        numero_documento: participante.numero_documento || '',\n        nombres: participante.nombres || participante.nombre?.split(' ')[0] || '',\n        apellidos: participante.apellidos || participante.nombre?.split(' ').slice(1).join(' ') || '',\n        fecha_nacimiento: participante.fecha_nacimiento || '',\n        genero: participante.genero || 'MASCULINO',\n        fecha_ingreso: participante.fecha_ingreso || '',\n        estado: participante.estado || 'ACTIVO',\n        id_sede: participante.id_sede || participante.sede_id || '',\n      }}\n      onSubmit={handleSubmit}\n      submitLabel=\"Guardar Cambios\"\n    >\n      {({ formData, handleChange, errors }) => (\n        <ParticipanteForm \n          formData={formData} \n          handleChange={handleChange} \n          errors={errors}\n        />\n      )}\n    </EditFormModal>\n  );\n};\n\n// Create Modal Component\nconst ParticipanteCreateModal = ({ isOpen, onClose, onCrear }) => {\n  const handleSubmit = async (formData) => {\n    console.log('🔄 Creando participante:', formData);\n    \n    // Validate required fields\n    if (!formData.tipo_documento || !formData.numero_documento) {\n      throw new Error('Tipo y número de documento son requeridos');\n    }\n    if (!formData.nombres?.trim() || !formData.apellidos?.trim()) {\n      throw new Error('Nombres y apellidos son requeridos');\n    }\n    if (!formData.fecha_nacimiento || !formData.fecha_ingreso) {\n      throw new Error('Fechas de nacimiento e ingreso son requeridas');\n    }\n    if (!formData.id_sede) {\n      throw new Error('Debe seleccionar una sede');\n    }\n    \n    // Validate fecha_nacimiento format and value\n    const fechaNacimientoValidation = validateFechaNacimiento(formData.fecha_nacimiento);\n    if (!fechaNacimientoValidation.isValid) {\n      throw new Error(fechaNacimientoValidation.error);\n    }\n    \n    // Validate fecha_ingreso format and value\n    const fechaIngresoValidation = validateFechaIngreso(formData.fecha_ingreso);\n    if (!fechaIngresoValidation.isValid) {\n      throw new Error(fechaIngresoValidation.error);\n    }\n    \n    // Validate documento único\n    const documentoValidation = await validateParticipanteDocumentoUnico(formData.numero_documento);\n    if (!documentoValidation.isValid) {\n      throw new Error(documentoValidation.error);\n    }\n    \n    // Validate sede exists\n    const sedeValidation = await validateSedeExists(formData.id_sede);\n    if (!sedeValidation.isValid) {\n      throw new Error(sedeValidation.error);\n    }\n    \n    const result = await dbService.createParticipante(formData);\n    \n    if (result.error) {\n      throw new Error(result.error.message || 'Error al crear participante');\n    }\n    \n    console.log('✅ Participante creado exitosamente');\n    onCrear();\n  };\n\n  return (\n    <CreateFormModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Nuevo Participante\"\n      defaultValues={{\n        tipo_documento: 'CC',\n        numero_documento: '',\n        nombres: '',\n        apellidos: '',\n        fecha_nacimiento: '',\n        genero: 'MASCULINO',\n        fecha_ingreso: '',\n        estado: 'ACTIVO',\n        id_sede: '',\n      }}\n      onSubmit={handleSubmit}\n      submitLabel=\"Crear Participante\"\n    >\n      {({ formData, handleChange, errors }) => (\n        <ParticipanteForm \n          formData={formData} \n          handleChange={handleChange} \n          errors={errors}\n        />\n      )}\n    </CreateFormModal>\n  );\n};\n\n// Shared Form Component using reusable Form components\nconst ParticipanteForm = ({ formData, handleChange, errors }) => {\n  const [sedes, setSedes] = useState([]);\n  const [loadingSedes, setLoadingSedes] = useState(true);\n\n  useEffect(() => {\n    const loadSedes = async () => {\n      try {\n        setLoadingSedes(true);\n        const result = await dbService.getSedes();\n        if (result.data && Array.isArray(result.data)) {\n          setSedes(result.data);\n        }\n      } catch (err) {\n        console.error('Error loading sedes:', err);\n      } finally {\n        setLoadingSedes(false);\n      }\n    };\n    loadSedes();\n  }, []);\n\n  return (\n    <FormGroup columns={2} gap=\"md\">\n      <FormSelect\n        label=\"Tipo de Documento\"\n        name=\"tipo_documento\"\n        value={formData.tipo_documento}\n        onChange={(value) => handleChange('tipo_documento', value)}\n        options={[\n          { value: 'CC', label: 'Cédula de Ciudadanía' },\n          { value: 'TI', label: 'Tarjeta de Identidad' },\n          { value: 'CE', label: 'Cédula de Extranjería' },\n          { value: 'PASAPORTE', label: 'Pasaporte' }\n        ]}\n        error={errors?.tipo_documento}\n        required\n      />\n\n      <FormInput\n        label=\"Número de Documento\"\n        name=\"numero_documento\"\n        type=\"text\"\n        value={formData.numero_documento}\n        onChange={(value) => handleChange('numero_documento', value)}\n        error={errors?.numero_documento}\n        required\n        placeholder=\"Ingrese el número de documento\"\n      />\n\n      <FormInput\n        label=\"Nombres\"\n        name=\"nombres\"\n        type=\"text\"\n        value={formData.nombres}\n        onChange={(value) => handleChange('nombres', value)}\n        error={errors?.nombres}\n        required\n        placeholder=\"Ingrese los nombres\"\n      />\n\n      <FormInput\n        label=\"Apellidos\"\n        name=\"apellidos\"\n        type=\"text\"\n        value={formData.apellidos}\n        onChange={(value) => handleChange('apellidos', value)}\n        error={errors?.apellidos}\n        required\n        placeholder=\"Ingrese los apellidos\"\n      />\n\n      <FormInput\n        label=\"Fecha de Nacimiento\"\n        name=\"fecha_nacimiento\"\n        type=\"date\"\n        value={formData.fecha_nacimiento}\n        onChange={(value) => handleChange('fecha_nacimiento', value)}\n        error={errors?.fecha_nacimiento}\n        required\n      />\n\n      <FormSelect\n        label=\"Género\"\n        name=\"genero\"\n        value={formData.genero}\n        onChange={(value) => handleChange('genero', value)}\n        options={[\n          { value: 'MASCULINO', label: 'Masculino' },\n          { value: 'FEMENINO', label: 'Femenino' }\n        ]}\n        error={errors?.genero}\n        required\n      />\n\n      <FormInput\n        label=\"Fecha de Ingreso\"\n        name=\"fecha_ingreso\"\n        type=\"date\"\n        value={formData.fecha_ingreso}\n        onChange={(value) => handleChange('fecha_ingreso', value)}\n        error={errors?.fecha_ingreso}\n        required\n      />\n\n      <FormSelect\n        label=\"Estado\"\n        name=\"estado\"\n        value={formData.estado}\n        onChange={(value) => handleChange('estado', value)}\n        options={[\n          { value: 'ACTIVO', label: 'Activo' },\n          { value: 'INACTIVO', label: 'Inactivo' }\n        ]}\n        error={errors?.estado}\n        required\n      />\n\n      <FormSelect\n        label=\"Sede\"\n        name=\"id_sede\"\n        value={formData.id_sede}\n        onChange={(value) => handleChange('id_sede', value)}\n        options={loadingSedes ? [{ value: '', label: 'Cargando sedes...' }] : sedes.map(sede => ({\n          value: sede.id_sede || sede.id,\n          label: sede.direccion || sede.nombre\n        }))}\n        error={errors?.id_sede}\n        required\n        disabled={loadingSedes}\n      />\n    </FormGroup>\n  );\n};\n\nexport default Participantes;\n","/**\n * Validation Utilities\n * Centralized validation functions for the application\n */\n\nimport { dbService } from '../services';\n\n/**\n * Validate that a documento number is unique for participantes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} participanteId - ID of current participante (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteDocumentoUnico = async (numeroDocumento, participanteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => {\n        const pId = p.id || p.id_participante;\n        return p.numero_documento === numeroDocumento && pId !== participanteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro participante' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate that a documento number is unique for acudientes\n * @param {string} numeroDocumento - Document number to validate\n * @param {number|null} acudienteId - ID of current acudiente (for edit mode)\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteDocumentoUnico = async (numeroDocumento, acudienteId = null) => {\n  try {\n    if (!numeroDocumento || !numeroDocumento.trim()) {\n      return { isValid: false, error: 'El número de documento es requerido' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => {\n        const aId = a.id || a.id_acudiente;\n        return a.numero_documento === numeroDocumento && aId !== acudienteId;\n      });\n      \n      if (exists) {\n        return { \n          isValid: false, \n          error: 'El número de documento ya está registrado para otro acudiente' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente documento:', err);\n    // Allow if validation fails to not block the user\n    return { isValid: true, error: null };\n  }\n};\n\n/**\n * Validate email format\n * @param {string} email - Email to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateEmail = (email) => {\n  if (!email || !email.trim()) {\n    return { isValid: false, error: 'El email es requerido' };\n  }\n\n  // Basic email regex pattern\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n  if (!emailRegex.test(email)) {\n    return { \n      isValid: false, \n      error: 'El formato del email no es válido' \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate date format and ensure it's not in the future\n * @param {string} fecha - Date string to validate\n * @param {string} fieldName - Name of the field for error messages\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFecha = (fecha, fieldName = 'fecha') => {\n  if (!fecha) {\n    return { isValid: false, error: `La ${fieldName} es requerida` };\n  }\n\n  const date = new Date(fecha);\n  const today = new Date();\n  \n  // Reset time to compare only dates\n  today.setHours(23, 59, 59, 999);\n\n  // Check if date is valid\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no es válida` \n    };\n  }\n\n  // Check if date is not in the future\n  if (date > today) {\n    return { \n      isValid: false, \n      error: `La ${fieldName} no puede ser futura` \n    };\n  }\n\n  return { isValid: true, error: null };\n};\n\n/**\n * Validate fecha_nacimiento specifically\n * @param {string} fechaNacimiento - Birth date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaNacimiento = (fechaNacimiento) => {\n  return validateFecha(fechaNacimiento, 'fecha de nacimiento');\n};\n\n/**\n * Validate fecha_ingreso specifically\n * @param {string} fechaIngreso - Entry date to validate\n * @returns {{isValid: boolean, error: string|null}}\n */\nexport const validateFechaIngreso = (fechaIngreso) => {\n  return validateFecha(fechaIngreso, 'fecha de ingreso');\n};\n\n/**\n * Validate that a participante exists\n * @param {number} participanteId - ID of participante to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateParticipanteExists = async (participanteId) => {\n  try {\n    if (!participanteId) {\n      return { isValid: false, error: 'Debe seleccionar un participante' };\n    }\n\n    const result = await dbService.getParticipantes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(p => \n        (p.id_participante || p.id) === parseInt(participanteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El participante seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating participante exists:', err);\n    return { isValid: false, error: 'Error al validar el participante' };\n  }\n};\n\n/**\n * Validate that a sede exists\n * @param {number} sedeId - ID of sede to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateSedeExists = async (sedeId) => {\n  try {\n    if (!sedeId) {\n      return { isValid: false, error: 'Debe seleccionar una sede' };\n    }\n\n    const result = await dbService.getSedes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(s => \n        (s.id_sede || s.id) === parseInt(sedeId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'La sede seleccionada no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating sede exists:', err);\n    return { isValid: false, error: 'Error al validar la sede' };\n  }\n};\n\n/**\n * Validate that an acudiente exists\n * @param {number} acudienteId - ID of acudiente to validate\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateAcudienteExists = async (acudienteId) => {\n  try {\n    if (!acudienteId) {\n      return { isValid: false, error: 'Debe seleccionar un acudiente' };\n    }\n\n    const result = await dbService.getAcudientes();\n    if (result.data && Array.isArray(result.data)) {\n      const exists = result.data.some(a => \n        (a.id_acudiente || a.id) === parseInt(acudienteId)\n      );\n      \n      if (!exists) {\n        return { \n          isValid: false, \n          error: 'El acudiente seleccionado no existe' \n        };\n      }\n    }\n    \n    return { isValid: true, error: null };\n  } catch (err) {\n    console.error('Error validating acudiente exists:', err);\n    return { isValid: false, error: 'Error al validar el acudiente' };\n  }\n};\n\n/**\n * Validate mensualidad relationships (participante and acudiente must exist)\n * @param {number} participanteId - ID of participante\n * @param {number} acudienteId - ID of acudiente\n * @returns {Promise<{isValid: boolean, error: string|null}>}\n */\nexport const validateMensualidadRelations = async (participanteId, acudienteId) => {\n  // Validate participante\n  const participanteValidation = await validateParticipanteExists(participanteId);\n  if (!participanteValidation.isValid) {\n    return participanteValidation;\n  }\n\n  // Validate acudiente\n  const acudienteValidation = await validateAcudienteExists(acudienteId);\n  if (!acudienteValidation.isValid) {\n    return acudienteValidation;\n  }\n\n  return { isValid: true, error: null };\n};\n"],"names":["formatParticipantName","participante","nombres","apellidos","concat","trim","nombre","formatSede","sede","direccion","String","normalizeStatus","estado","upper","toUpperCase","formatGender","genero","formatDocument","tipo","numero","arrayToCSV","data","headers","Array","isArray","length","map","header","label","join","row","value","getNestedValue","key","stringValue","includes","replace","downloadCSV","csvContent","filename","csvFilename","endsWith","csvContentWithProperLineEndings","blob","Blob","type","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","obj","path","split","reduce","current","formatDateForCSV","date","Date","toLocaleDateString","_unused","formatCurrencyForCSV","amount","Intl","NumberFormat","currency","minimumFractionDigits","format","_unused2","calculateAge","birthDate","birth","today","age","getFullYear","monthDiff","getMonth","getDate","_unused3","Participantes","React","participantes","setParticipantes","useState","loading","setLoading","error","setError","filters","filtros","setFilter","clearFilters","useFilters","busqueda","viewModal","useModal","editModal","createModal","loadParticipantes","useCallback","async","_result$data","console","log","result","dbService","getParticipantes","Error","message","participantesData","err","useEffect","abrirModal","openModal","filteredParticipantes","useMemo","filtered","filter","p","_p$sede","toLowerCase","estadoUpper","searchLower","numero_documento","toggleEstado","id","newEstado","updateParticipante","handleActionClick","action","handleExportPDF","printWindow","window","open","currentDate","htmlContent","fecha_nacimiento","telefono","write","close","handleExportCSV","csvData","tipo_documento","nombre_completo","edad","fecha_ingreso","toISOString","_jsx","DashboardLayout","title","subtitle","loadingText","children","className","_jsxs","extraActions","ExportDropdown","onExportPDF","onExportCSV","onClick","FilterBar","name","options","placeholder","debounceMs","values","onChange","onClear","showClearButton","StatsGrid","stats","icon","color","columns","gap","DataTable","keyExtractor","id_participante","render","nombreCompleto","tipoDoc","numDoc","_row$sede","StatusToggle","currentStatus","statuses","variant","ActionDropdown","actions","ParticipanteViewModal","isOpen","onClose","closeModal","modalData","onCrearAcudiente","ParticipanteEditModal","onActualizar","ParticipanteCreateModal","onCrear","_ref","_participante$sede","acudientes","setAcudientes","loadingAcudientes","setLoadingAcudientes","loadAcudientes","participanteId","getAcudientesByParticipante","estadoLabel","estadoClass","ViewDetailsModal","acudiente","index","parentesco","email","id_acudiente","_ref2","_participante$nombre","_participante$nombre2","EditFormModal","initialData","slice","id_sede","sede_id","onSubmit","_formData$nombres","_formData$apellidos","formData","fechaNacimientoValidation","validateFechaNacimiento","isValid","fechaIngresoValidation","validateFechaIngreso","documentoValidation","validateParticipanteDocumentoUnico","sedeValidation","validateSedeExists","submitLabel","_ref3","handleChange","errors","ParticipanteForm","_ref4","CreateFormModal","defaultValues","_formData$nombres2","_formData$apellidos2","createParticipante","_ref5","_ref6","sedes","setSedes","loadingSedes","setLoadingSedes","getSedes","loadSedes","FormGroup","FormSelect","required","FormInput","disabled","numeroDocumento","arguments","some","pId","validateAcudienteDocumentoUnico","acudienteId","getAcudientes","a","aId","validateEmail","test","validateFecha","fecha","fieldName","setHours","isNaN","getTime","fechaNacimiento","fechaIngreso","validateParticipanteExists","parseInt","sedeId","s","validateMensualidadRelations","participanteValidation","acudienteValidation","validateAcudienteExists"],"sourceRoot":""}