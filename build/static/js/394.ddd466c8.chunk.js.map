{"version":3,"file":"static/js/394.ddd466c8.chunk.js","mappings":"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","sources":["features/landing/TransformationStories.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\n\n// Import images\nimport carruselUno from 'assets/images/carrusel_home/carrusel_uno.webp';\nimport carruselDos from 'assets/images/carrusel_home/carrusel_dos.webp';\nimport carruselTres from 'assets/images/carrusel_home/carrusel_tres.webp';\nimport carruselCuatro from 'assets/images/carrusel_home/carrusel_cuatro.webp';\nimport carruselCinco from 'assets/images/carrusel_home/carrusel_cinco.webp';\nimport carruselSeis from 'assets/images/carrusel_home/carrusel_seis.webp';\nimport carruselSiete from 'assets/images/carrusel_home/carrusel_siete.webp';\nimport carruselOcho from 'assets/images/carrusel_home/carrusel_ocho.webp';\n\nconst TransformationStories = () => {\n  // Estado de carrusel y visibilidad\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isVisible, setIsVisible] = useState(false);\n  const [itemsPerView, setItemsPerView] = useState(1);\n\n  const stories = [\n    {\n      id: 1,\n      image: carruselUno,\n    },\n    {\n      id: 2,\n      image: carruselDos,\n    },\n    {\n      id: 3,\n      image: carruselTres,\n    },\n    {\n      id: 4,\n      image: carruselCuatro,\n    },\n    {\n      id: 5,\n      image: carruselCinco,\n    },\n    {\n      id: 6,\n      image: carruselSeis,\n    },\n    {\n      id: 7,\n      image: carruselSiete,\n    },\n    {\n      id: 8,\n      image: carruselOcho,\n    },\n  ];\n\n  // Cálculo responsivo de ítems visibles (alineado con breakpoints Tailwind)\n  useEffect(() => {\n    const computeItems = () => {\n      const w = typeof window !== 'undefined' ? window.innerWidth : 0;\n      if (w >= 1024) return 4; // lg\n      if (w >= 768) return 3; // md\n      if (w >= 640) return 2; // sm\n      return 1; // xs\n    };\n\n    const update = () => {\n      const next = computeItems();\n      setItemsPerView(prev => {\n        if (prev !== next) {\n          // Asegurar que el índice actual no quede fuera de rango al cambiar el layout\n          setCurrentSlide((prevSlide) => {\n            const maxIndex = Math.max(0, stories.length - next);\n            return Math.min(prevSlide, maxIndex);\n          });\n        }\n        return next;\n      });\n    };\n\n    update();\n    window.addEventListener('resize', update);\n    return () => window.removeEventListener('resize', update);\n  }, [stories.length]);\n\n  // Auto-advance por intervalo\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentSlide((prev) => {\n        const maxIndex = Math.max(0, stories.length - itemsPerView);\n        if (prev >= maxIndex) return 0;\n        return prev + 1;\n      });\n    }, 4000);\n    return () => clearInterval(timer);\n  }, [stories.length, itemsPerView]);\n\n  // Intersection Observer para animación de entrada\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    const element = document.getElementById('transformation-stories');\n    if (element) observer.observe(element);\n\n    return () => observer.disconnect();\n  }, []);\n\n  const nextSlide = useCallback(() => {\n    setCurrentSlide((prev) => {\n      const maxIndex = Math.max(0, stories.length - itemsPerView);\n      if (prev >= maxIndex) return 0;\n      return prev + 1;\n    });\n  }, [stories.length, itemsPerView]);\n\n  const prevSlide = useCallback(() => {\n    setCurrentSlide((prev) => {\n      const maxIndex = Math.max(0, stories.length - itemsPerView);\n      if (prev <= 0) return maxIndex;\n      return prev - 1;\n    });\n  }, [stories.length, itemsPerView]);\n\n  const pageCount = useMemo(() => Math.max(1, Math.ceil(stories.length / itemsPerView)), [stories.length, itemsPerView]);\n  const activePage = useMemo(() => Math.floor(currentSlide / itemsPerView), [currentSlide, itemsPerView]);\n\n  const goToPage = useCallback((pageIdx) => {\n    const target = pageIdx * itemsPerView;\n    setCurrentSlide(Math.min(target, Math.max(0, stories.length - itemsPerView)));\n  }, [stories.length, itemsPerView]);\n\n  // Helper: padding-top en % según relación de aspecto deseada\n  // Todas las imágenes usan formato 4:5\n  const aspectRatio = useMemo(() => '4:5', []);\n  const ratioToPadding = useCallback((ratio) => {\n    const [w, h] = ratio.split(':').map(Number);\n    if (!w || !h) return '125%'; // fallback 4:5\n    return `${(h / w) * 100}%`;\n  }, []);\n\n  // Transform del track basado en el slide actual\n  const trackTranslatePercent = useMemo(() => currentSlide * (100 / itemsPerView), [currentSlide, itemsPerView]);\n\n  return (\n    <section\n      id=\"transformation-stories\"\n      className=\"py-20 bg-gradient-to-br from-gray-50 via-white to-primary/5 overflow-hidden\"\n    >\n      <div className=\"container mx-auto px-4\">\n\n        {/* Carrusel (4 visibles en desktop) */}\n        <div\n          className={`relative transition-all duration-1000 delay-300 ${\n            isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'\n          }`}\n        >\n          <div className=\"relative rounded-3xl overflow-visible\">\n            {/* Viewport */}\n            <div className=\"overflow-hidden\">\n              {/* Track */}\n              <div\n                className=\"flex -mx-2 transition-transform duration-700 ease-out will-change-transform\"\n                style={{ transform: `translateX(-${trackTranslatePercent}%)` }}\n              >\n                {stories.map((story, index) => {\n                  return (\n                    <div\n                      key={story.id}\n                      className=\"flex-none px-2 w-full sm:w-1/2 md:w-1/3 lg:w-1/4\"\n                      aria-hidden={false}\n                    >\n                      <div className=\"group relative rounded-2xl overflow-hidden bg-white/30 backdrop-blur-sm ring-1 ring-black/5 shadow-lg hover:shadow-2xl transform hover:-translate-y-1 transition-all duration-300\">\n                        {/* Aspect Ratio Wrapper */}\n                        <div\n                          className=\"relative w-full\"\n                          style={{ paddingTop: ratioToPadding(aspectRatio) }}\n                        >\n                          <img\n                            src={story.image}\n                            alt=\"Historia de transformación\"\n                            className=\"absolute inset-0 w-full h-full object-cover\"\n                            loading=\"lazy\"\n                            decoding=\"async\"\n                            width=\"400\"\n                            height=\"500\"\n                            fetchPriority={index === 0 ? \"high\" : \"auto\"}\n                          />\n\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Flechas de navegación */}\n            <button\n              onClick={prevSlide}\n              aria-label=\"Ver historias anteriores de transformación\"\n              className=\"absolute -left-3 sm:-left-4 top-1/2 -translate-y-1/2 bg-white text-gray-800 hover:bg-gray-100 p-2.5 rounded-full shadow-lg ring-1 ring-black/5 transition-all duration-200 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n            </button>\n\n            <button\n              onClick={nextSlide}\n              aria-label=\"Ver siguientes historias de transformación\"\n              className=\"absolute -right-3 sm:-right-4 top-1/2 -translate-y-1/2 bg-white text-gray-800 hover:bg-gray-100 p-2.5 rounded-full shadow-lg ring-1 ring-black/5 transition-all duration-200 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary/50\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </button>\n\n            {/* Indicadores por página */}\n            <div className=\"mt-6 flex items-center justify-center space-x-2\">\n              {Array.from({ length: pageCount }).map((_, i) => (\n                <button\n                  key={i}\n                  onClick={() => goToPage(i)}\n                  aria-label={`Ir a la página ${i + 1}`}\n                  className={`h-2.5 rounded-full transition-all duration-300 ${\n                    i === activePage\n                      ? 'w-6 bg-primary'\n                      : 'w-2.5 bg-gray-300 hover:bg-gray-400'\n                  }`}\n                />\n              ))}\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default TransformationStories;\n"],"names":["TransformationStories","currentSlide","setCurrentSlide","useState","isVisible","setIsVisible","itemsPerView","setItemsPerView","stories","id","image","carruselUno","carruselDos","carruselTres","carruselCuatro","carruselCinco","carruselSeis","carruselSiete","carruselOcho","useEffect","update","next","computeItems","w","window","innerWidth","prev","prevSlide","maxIndex","Math","max","length","min","addEventListener","removeEventListener","timer","setInterval","clearInterval","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","threshold","element","document","getElementById","observe","disconnect","nextSlide","useCallback","pageCount","useMemo","ceil","activePage","floor","goToPage","pageIdx","target","aspectRatio","ratioToPadding","ratio","h","split","map","Number","concat","trackTranslatePercent","_jsx","className","children","_jsxs","style","transform","story","index","paddingTop","src","alt","loading","decoding","width","height","fetchPriority","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","Array","from","_","i"],"sourceRoot":""}