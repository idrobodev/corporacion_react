import React, { useState, useEffect } from "react";
import Breadcrumbs from "features/dashboard/Breadcrumbs";
import internado from "assets/images/programas/internado.webp";
import familia from "assets/images/programas/familia.webp";
import trabajo from "assets/images/programas/trabajo.webp";
import { GradientText } from "components/UI";

const Programs = () => {
  const [activeTab, setActiveTab] = useState("internado");
  const [isVisible, setIsVisible] = useState({});

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setIsVisible((prev) => ({ ...prev, [entry.target.id]: true }));
          }
        });
      },
      { threshold: 0.1 },
    );

    const elements = document.querySelectorAll("[data-animate]");
    elements.forEach((el) => observer.observe(el));

    return () => observer.disconnect();
  }, []);

  const programs = {
    internado: {
      title: "Programa de Internado",
      subtitle: "Transformaci√≥n Integral 24/7",
      icon: "üè•",
      color: "from-blue-500 to-blue-700",
      image: internado,
      features: [
        "Terapia intensiva individual y grupal diaria",
        "Duraci√≥n personalizada: 12 - 15 meses seg√∫n necesidades",
        "Acompa√±amiento espiritual y psicol√≥gico 24/7",
        "Actividades recreativas y terap√©uticas",
        "Seguimiento m√©dico especializado",
      ],
      stats: {
        duration: "12-15 meses",
        success: "85%",
        capacity: "50 personas",
      },
    },
    familiar: {
      title: "Programa Familiar",
      subtitle: "Sanando V√≠nculos, Restaurando Esperanza",
      icon: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
      color: "from-green-500 to-green-700",
      image: familia,
      features: [
        "Escuela para familias con psicoeducaci√≥n especializada",
        "Terapia familiar sist√©mica con enfoque restaurativo",
        "Grupos de apoyo mutuo para familiares",
        "Talleres de comunicaci√≥n asertiva",
        "Reconciliaci√≥n y restauraci√≥n de v√≠nculos afectivos",
        "Acompa√±amiento en el proceso de perd√≥n",
      ],
      stats: { duration: "6 meses", success: "90%", capacity: "30 familias" },
    },
    reinsercion: {
      title: "Programa de Reinserci√≥n",
      subtitle: "Construyendo un Futuro Pr√≥spero",
      icon: "üéØ",
      color: "from-purple-500 to-purple-700",
      image: trabajo,
      features: [
        "Formaci√≥n t√©cnica certificada con el SENA",
        "Desarrollo de habilidades blandas y liderazgo",
        "Talleres de comunicaci√≥n efectiva",
        "Manejo emocional y inteligencia emocional",
        "Orientaci√≥n laboral y emprendimiento",
        "Red de apoyo empresarial para empleabilidad",
      ],
      stats: { duration: "4 meses", success: "78%", capacity: "40 personas" },
    },
  };

  const therapeuticApproaches = [
    {
      category: "Cient√≠fico",
      icon: "üî¨",
      color: "from-blue-600 to-indigo-600",
      methods: [
        {
          name: "Terapia Cognitivo-Conductual",
          description:
            "Modificaci√≥n de patrones de pensamiento y comportamiento",
        },
        {
          name: "Logoterapia (Viktor Frankl)",
          description: "B√∫squeda de sentido y prop√≥sito de vida",
        },
        {
          name: "Terapia Familiar Sist√©mica",
          description: "Trabajo integral con el sistema familiar",
        },
        {
          name: "Manejo de Contingencias",
          description: "Reforzamiento de comportamientos positivos",
        },
      ],
    },
    {
      category: "Espiritual",
      icon: "üôè",
      color: "from-green-600 to-emerald-600",
      methods: [
        {
          name: "Gu√≠a Espiritual B√≠blica",
          description:
            "Fundamento en la Palabra de Dios para la transformaci√≥n",
        },
        {
          name: "Acompa√±amiento Pastoral",
          description: "Cuidado pastoral especializado en adicciones",
        },
        {
          name: "Discipulado Cristiano",
          description: "Formaci√≥n en principios y valores cristianos",
        },
        {
          name: "Crecimiento en la Fe",
          description: "Fortalecimiento de la relaci√≥n personal con Dios",
        },
      ],
    },
  ];


  return (
    <>
      <Breadcrumbs title="Programas" />

      {/* Hero Section */}
      <div className="relative overflow-hidden bg-gradient-to-br from-primary/5 to-[#434194]/10 py-20">
        <div className="absolute inset-0 bg-gradient-to-r from-primary/10 to-secondary/5"></div>
        <div className="container relative z-10 text-center">
          {" "}
          <h1 className="text-5xl font-bold mb-6">
            <GradientText>Programas de Transformaci√≥n</GradientText>
          </h1>
          <p className="text-xl text-gray-700 max-w-4xl mx-auto leading-relaxed">
            Ofrecemos programas integrales de rehabilitaci√≥n que combinan
            enfoques cient√≠ficos validados con gu√≠a espiritual para la
            transformaci√≥n completa de vidas. Cada programa est√° dise√±ado para
            atender necesidades espec√≠ficas en el proceso de recuperaci√≥n.
          </p>
          <div className="w-24 h-1 bg-gradient-to-r from-primary to-[#434194] mx-auto rounded-full mt-8"></div>
        </div>
      </div>


      {/* Programas Interactivos */}
      <section
        id="programas-principales"
        data-animate
        className={`py-20 bg-gradient-to-br from-gray-50 to-primary/8 transition-all duration-1000 ${
          isVisible["programas-principales"]
            ? "opacity-100 translate-y-0"
            : "opacity-0 translate-y-10"
        }`}
      >
        <div className="container">
          <div className="text-center mb-16">
            {" "}
            <h2 className="text-4xl font-bold mb-6">
              <GradientText>Nuestros Programas Especializados</GradientText>
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Selecciona un programa para conocer m√°s detalles sobre c√≥mo
              podemos ayudarte
            </p>
          </div>

          {/* Tabs Navigation */}
          <div className="flex flex-wrap justify-center mb-12 gap-4">
            {Object.entries(programs).map(([key, program]) => (
              <button
                key={key}
                onClick={() => setActiveTab(key)}
                className={`px-8 py-4 rounded-full font-bold text-lg transition-all duration-300 transform hover:scale-105 ${
                  activeTab === key
                    ? `bg-gradient-to-r ${program.color} text-white shadow-lg`
                    : "bg-white text-gray-700 hover:bg-gray-50 shadow-md"
                }`}
              >
                <span className="mr-2">{program.icon}</span>
                {program.title}
              </button>
            ))}
          </div>

          {/* Active Program Content */}
          <div className="bg-white rounded-3xl shadow-2xl overflow-hidden border border-gray-100">
            <div
              className={`bg-gradient-to-r ${programs[activeTab].color} p-8 text-white`}
            >
              <div className="flex items-center justify-between flex-wrap gap-4">
                <div>
                  <h3 className="text-4xl font-bold mb-2">
                    {programs[activeTab].title}
                  </h3>
                  <p className="text-xl opacity-90">
                    {programs[activeTab].subtitle}
                  </p>
                </div>
                <div className="text-8xl opacity-20">
                  {programs[activeTab].icon}
                </div>
              </div>
            </div>

            <div className="p-8">
              <div className="grid lg:grid-cols-2 gap-8 items-center">
                <div>
                  <div className="relative group mb-8">
                    <div className="absolute -inset-2 bg-gradient-to-r from-primary/20 to-[#434194]/20 rounded-2xl blur opacity-0 group-hover:opacity-100 transition duration-1000"></div>
                    <div className="relative w-full h-64 sm:h-72 md:h-80 lg:h-96 overflow-hidden rounded-2xl shadow-xl">
                      <img
                        src={programs[activeTab].image}
                        alt={programs[activeTab].title}
                        className="w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-700"
                      />
                    </div>
                  </div>

                  {/* Stats */}
                  <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-4">
                    {Object.entries(programs[activeTab].stats).map(
                      ([key, value]) => {
                        // Skip the 'success' stat
                        if (key === "success") return null;
                        
                        // Format the key for display
                        const formattedKey =
                          key === "duration"
                            ? "duraci√≥n"
                            : key.replace("_", " ");

                        return (
                          <div
                            key={key}
                            className="text-center bg-white rounded-xl p-3 sm:p-4 shadow-sm hover:shadow-md transition-shadow duration-300 border border-gray-100"
                          >
                            <div className="text-xl sm:text-2xl font-bold text-primary mb-1">
                              {value}
                            </div>
                            <div className="text-xs sm:text-sm text-gray-600 font-medium uppercase tracking-wider">
                              {formattedKey}
                            </div>
                          </div>
                        );
                      },
                    )}
                  </div>
                </div>

                <div>
                  <h4 className="text-2xl font-bold text-gray-800 mb-6">
                    Caracter√≠sticas del Programa
                  </h4>
                  <div className="space-y-4 pr-0 lg:pr-4">
                    <div className="space-y-3 sm:space-y-4">
                      {programs[activeTab].features.map((feature, index) => (
                        <div
                          key={index}
                          className="flex items-start group bg-white/50 hover:bg-white/80 p-3 sm:p-4 rounded-xl transition-all duration-300 hover:shadow-sm"
                        >
                          <div className="flex-shrink-0 w-6 h-6 bg-gradient-to-r from-primary to-[#434194] rounded-full flex items-center justify-center mr-3 sm:mr-4 mt-0.5 group-hover:scale-110 transition-transform duration-300">
                            <svg
                              className="w-3 h-3 text-white"
                              fill="currentColor"
                              viewBox="0 0 20 20"
                            >
                              <path
                                fillRule="evenodd"
                                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                clipRule="evenodd"
                              />
                            </svg>
                          </div>
                          <p className="text-gray-700 text-sm sm:text-base leading-relaxed group-hover:text-primary transition-colors duration-300">
                            {feature}
                          </p>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Enfoques Terap√©uticos */}
      <section
        id="enfoques"
        data-animate
        className={`py-20 bg-gradient-to-br from-primary/5 to-[#434194]/8 transition-all duration-1000 ${
          isVisible.enfoques
            ? "opacity-100 translate-y-0"
            : "opacity-0 translate-y-10"
        }`}
      >
        <div className="container">
          <div className="text-center mb-16">
            {" "}
            <h2 className="text-4xl font-bold mb-6">
              <GradientText>Enfoques Terap√©uticos</GradientText>
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Combinamos metodolog√≠as cient√≠ficas probadas con principios
              espirituales s√≥lidos
            </p>
            <div className="w-24 h-1 bg-gradient-to-r from-primary to-[#434194] mx-auto rounded-full mt-6"></div>
          </div>

          <div className="grid md:grid-cols-2 gap-8">
            {therapeuticApproaches.map((approach, index) => (
              <div
                key={index}
                className="bg-white rounded-3xl shadow-xl overflow-hidden border border-gray-100 flex flex-col h-full"
              >
                <div
                  className={`bg-gradient-to-r ${approach.color} p-8 text-white`}
                >
                  <div className="flex items-center">
                    <div className="text-6xl mr-6">{approach.icon}</div>
                    <div>
                      <h3 className="text-3xl font-bold">
                        Enfoque {approach.category}
                      </h3>
                      <p className="text-xl opacity-90">
                        Metodolog√≠as validadas y efectivas
                      </p>
                    </div>
                  </div>
                </div>

                <div className="p-8 flex-1">
                  <div className="space-y-6">
                    {approach.methods.map((method, idx) => (
                      <div
                        key={idx}
                        className="group border-l-4 border-primary/20 pl-6 hover:border-primary transition-colors duration-300 h-full"
                      >
                        <h4 className="text-lg font-bold text-gray-800 mb-2 group-hover:text-primary transition-colors duration-300">
                          {method.name}
                        </h4>
                        <p className="text-gray-600">{method.description}</p>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      
    </>
  );
};

export default Programs;
